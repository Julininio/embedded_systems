
coursework.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000003aa  00800200  000002ca  0000033e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002ca  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000006e8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000718  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000108  00000000  00000000  00000758  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000025d1  00000000  00000000  00000860  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000edc  00000000  00000000  00002e31  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000e18  00000000  00000000  00003d0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000003a4  00000000  00000000  00004b28  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000099e  00000000  00000000  00004ecc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000f9c  00000000  00000000  0000586a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000110  00000000  00000000  00006806  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	28 c1       	rjmp	.+592    	; 0x256 <__vector_1>
   6:	00 00       	nop
   8:	8a c0       	rjmp	.+276    	; 0x11e <__bad_interrupt>
   a:	00 00       	nop
   c:	88 c0       	rjmp	.+272    	; 0x11e <__bad_interrupt>
   e:	00 00       	nop
  10:	86 c0       	rjmp	.+268    	; 0x11e <__bad_interrupt>
  12:	00 00       	nop
  14:	84 c0       	rjmp	.+264    	; 0x11e <__bad_interrupt>
  16:	00 00       	nop
  18:	82 c0       	rjmp	.+260    	; 0x11e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	80 c0       	rjmp	.+256    	; 0x11e <__bad_interrupt>
  1e:	00 00       	nop
  20:	7e c0       	rjmp	.+252    	; 0x11e <__bad_interrupt>
  22:	00 00       	nop
  24:	7c c0       	rjmp	.+248    	; 0x11e <__bad_interrupt>
  26:	00 00       	nop
  28:	7a c0       	rjmp	.+244    	; 0x11e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	78 c0       	rjmp	.+240    	; 0x11e <__bad_interrupt>
  2e:	00 00       	nop
  30:	76 c0       	rjmp	.+236    	; 0x11e <__bad_interrupt>
  32:	00 00       	nop
  34:	74 c0       	rjmp	.+232    	; 0x11e <__bad_interrupt>
  36:	00 00       	nop
  38:	72 c0       	rjmp	.+228    	; 0x11e <__bad_interrupt>
  3a:	00 00       	nop
  3c:	70 c0       	rjmp	.+224    	; 0x11e <__bad_interrupt>
  3e:	00 00       	nop
  40:	6e c0       	rjmp	.+220    	; 0x11e <__bad_interrupt>
  42:	00 00       	nop
  44:	6c c0       	rjmp	.+216    	; 0x11e <__bad_interrupt>
  46:	00 00       	nop
  48:	6a c0       	rjmp	.+212    	; 0x11e <__bad_interrupt>
  4a:	00 00       	nop
  4c:	68 c0       	rjmp	.+208    	; 0x11e <__bad_interrupt>
  4e:	00 00       	nop
  50:	66 c0       	rjmp	.+204    	; 0x11e <__bad_interrupt>
  52:	00 00       	nop
  54:	64 c0       	rjmp	.+200    	; 0x11e <__bad_interrupt>
  56:	00 00       	nop
  58:	62 c0       	rjmp	.+196    	; 0x11e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	60 c0       	rjmp	.+192    	; 0x11e <__bad_interrupt>
  5e:	00 00       	nop
  60:	5e c0       	rjmp	.+188    	; 0x11e <__bad_interrupt>
  62:	00 00       	nop
  64:	5c c0       	rjmp	.+184    	; 0x11e <__bad_interrupt>
  66:	00 00       	nop
  68:	5a c0       	rjmp	.+180    	; 0x11e <__bad_interrupt>
  6a:	00 00       	nop
  6c:	58 c0       	rjmp	.+176    	; 0x11e <__bad_interrupt>
  6e:	00 00       	nop
  70:	56 c0       	rjmp	.+172    	; 0x11e <__bad_interrupt>
  72:	00 00       	nop
  74:	54 c0       	rjmp	.+168    	; 0x11e <__bad_interrupt>
  76:	00 00       	nop
  78:	52 c0       	rjmp	.+164    	; 0x11e <__bad_interrupt>
  7a:	00 00       	nop
  7c:	50 c0       	rjmp	.+160    	; 0x11e <__bad_interrupt>
  7e:	00 00       	nop
  80:	4e c0       	rjmp	.+156    	; 0x11e <__bad_interrupt>
  82:	00 00       	nop
  84:	4c c0       	rjmp	.+152    	; 0x11e <__bad_interrupt>
  86:	00 00       	nop
  88:	4a c0       	rjmp	.+148    	; 0x11e <__bad_interrupt>
  8a:	00 00       	nop
  8c:	48 c0       	rjmp	.+144    	; 0x11e <__bad_interrupt>
  8e:	00 00       	nop
  90:	46 c0       	rjmp	.+140    	; 0x11e <__bad_interrupt>
  92:	00 00       	nop
  94:	44 c0       	rjmp	.+136    	; 0x11e <__bad_interrupt>
  96:	00 00       	nop
  98:	42 c0       	rjmp	.+132    	; 0x11e <__bad_interrupt>
  9a:	00 00       	nop
  9c:	40 c0       	rjmp	.+128    	; 0x11e <__bad_interrupt>
  9e:	00 00       	nop
  a0:	3e c0       	rjmp	.+124    	; 0x11e <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3c c0       	rjmp	.+120    	; 0x11e <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3a c0       	rjmp	.+116    	; 0x11e <__bad_interrupt>
  aa:	00 00       	nop
  ac:	38 c0       	rjmp	.+112    	; 0x11e <__bad_interrupt>
  ae:	00 00       	nop
  b0:	36 c0       	rjmp	.+108    	; 0x11e <__bad_interrupt>
  b2:	00 00       	nop
  b4:	34 c0       	rjmp	.+104    	; 0x11e <__bad_interrupt>
  b6:	00 00       	nop
  b8:	32 c0       	rjmp	.+100    	; 0x11e <__bad_interrupt>
  ba:	00 00       	nop
  bc:	30 c0       	rjmp	.+96     	; 0x11e <__bad_interrupt>
  be:	00 00       	nop
  c0:	2e c0       	rjmp	.+92     	; 0x11e <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2c c0       	rjmp	.+88     	; 0x11e <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2a c0       	rjmp	.+84     	; 0x11e <__bad_interrupt>
  ca:	00 00       	nop
  cc:	28 c0       	rjmp	.+80     	; 0x11e <__bad_interrupt>
  ce:	00 00       	nop
  d0:	26 c0       	rjmp	.+76     	; 0x11e <__bad_interrupt>
  d2:	00 00       	nop
  d4:	24 c0       	rjmp	.+72     	; 0x11e <__bad_interrupt>
  d6:	00 00       	nop
  d8:	22 c0       	rjmp	.+68     	; 0x11e <__bad_interrupt>
  da:	00 00       	nop
  dc:	20 c0       	rjmp	.+64     	; 0x11e <__bad_interrupt>
  de:	00 00       	nop
  e0:	1e c0       	rjmp	.+60     	; 0x11e <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61

000000f0 <__do_copy_data>:
  f0:	15 e0       	ldi	r17, 0x05	; 5
  f2:	a0 e0       	ldi	r26, 0x00	; 0
  f4:	b2 e0       	ldi	r27, 0x02	; 2
  f6:	ea ec       	ldi	r30, 0xCA	; 202
  f8:	f2 e0       	ldi	r31, 0x02	; 2
  fa:	00 e0       	ldi	r16, 0x00	; 0
  fc:	0b bf       	out	0x3b, r16	; 59
  fe:	02 c0       	rjmp	.+4      	; 0x104 <__do_copy_data+0x14>
 100:	07 90       	elpm	r0, Z+
 102:	0d 92       	st	X+, r0
 104:	aa 3a       	cpi	r26, 0xAA	; 170
 106:	b1 07       	cpc	r27, r17
 108:	d9 f7       	brne	.-10     	; 0x100 <__do_copy_data+0x10>

0000010a <__do_clear_bss>:
 10a:	25 e0       	ldi	r18, 0x05	; 5
 10c:	aa ea       	ldi	r26, 0xAA	; 170
 10e:	b5 e0       	ldi	r27, 0x05	; 5
 110:	01 c0       	rjmp	.+2      	; 0x114 <.do_clear_bss_start>

00000112 <.do_clear_bss_loop>:
 112:	1d 92       	st	X+, r1

00000114 <.do_clear_bss_start>:
 114:	aa 3a       	cpi	r26, 0xAA	; 170
 116:	b2 07       	cpc	r27, r18
 118:	e1 f7       	brne	.-8      	; 0x112 <.do_clear_bss_loop>
 11a:	82 d0       	rcall	.+260    	; 0x220 <main>
 11c:	d4 c0       	rjmp	.+424    	; 0x2c6 <_exit>

0000011e <__bad_interrupt>:
 11e:	70 cf       	rjmp	.-288    	; 0x0 <__vectors>

00000120 <USART_Init>:
			lcd_command(0x80);
			lcd_print("Bye Bye. Thanks.");
		}
	}
	
}
 120:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 124:	83 e3       	ldi	r24, 0x33	; 51
 126:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 12a:	88 e1       	ldi	r24, 0x18	; 24
 12c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 130:	86 e0       	ldi	r24, 0x06	; 6
 132:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 136:	08 95       	ret

00000138 <latch_lcd_fridge>:
 138:	84 b3       	in	r24, 0x14	; 20
 13a:	88 60       	ori	r24, 0x08	; 8
 13c:	84 bb       	out	0x14, r24	; 20
 13e:	89 ef       	ldi	r24, 0xF9	; 249
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	01 97       	sbiw	r24, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <latch_lcd_fridge+0xa>
 146:	00 c0       	rjmp	.+0      	; 0x148 <latch_lcd_fridge+0x10>
 148:	00 00       	nop
 14a:	84 b3       	in	r24, 0x14	; 20
 14c:	87 7f       	andi	r24, 0xF7	; 247
 14e:	84 bb       	out	0x14, r24	; 20
 150:	89 ef       	ldi	r24, 0xF9	; 249
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <latch_lcd_fridge+0x1c>
 158:	00 c0       	rjmp	.+0      	; 0x15a <latch_lcd_fridge+0x22>
 15a:	00 00       	nop
 15c:	08 95       	ret

0000015e <latch_lcd_gate>:
 15e:	82 b1       	in	r24, 0x02	; 2
 160:	88 60       	ori	r24, 0x08	; 8
 162:	82 b9       	out	0x02, r24	; 2
 164:	89 ef       	ldi	r24, 0xF9	; 249
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	01 97       	sbiw	r24, 0x01	; 1
 16a:	f1 f7       	brne	.-4      	; 0x168 <latch_lcd_gate+0xa>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <latch_lcd_gate+0x10>
 16e:	00 00       	nop
 170:	82 b1       	in	r24, 0x02	; 2
 172:	87 7f       	andi	r24, 0xF7	; 247
 174:	82 b9       	out	0x02, r24	; 2
 176:	89 ef       	ldi	r24, 0xF9	; 249
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	01 97       	sbiw	r24, 0x01	; 1
 17c:	f1 f7       	brne	.-4      	; 0x17a <latch_lcd_gate+0x1c>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <latch_lcd_gate+0x22>
 180:	00 00       	nop
 182:	08 95       	ret

00000184 <lcd_data_gate>:
 184:	81 bb       	out	0x11, r24	; 17
 186:	82 b1       	in	r24, 0x02	; 2
 188:	82 60       	ori	r24, 0x02	; 2
 18a:	82 b9       	out	0x02, r24	; 2
 18c:	82 b1       	in	r24, 0x02	; 2
 18e:	8b 7f       	andi	r24, 0xFB	; 251
 190:	82 b9       	out	0x02, r24	; 2
 192:	e5 cf       	rjmp	.-54     	; 0x15e <latch_lcd_gate>
 194:	08 95       	ret

00000196 <lcd_command_fridge>:
 196:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x7e0102>
 19a:	84 b3       	in	r24, 0x14	; 20
 19c:	8d 7f       	andi	r24, 0xFD	; 253
 19e:	84 bb       	out	0x14, r24	; 20
 1a0:	84 b3       	in	r24, 0x14	; 20
 1a2:	8b 7f       	andi	r24, 0xFB	; 251
 1a4:	84 bb       	out	0x14, r24	; 20
 1a6:	c8 cf       	rjmp	.-112    	; 0x138 <latch_lcd_fridge>
 1a8:	08 95       	ret

000001aa <lcd_command_gate>:
 1aa:	81 bb       	out	0x11, r24	; 17
 1ac:	82 b1       	in	r24, 0x02	; 2
 1ae:	8d 7f       	andi	r24, 0xFD	; 253
 1b0:	82 b9       	out	0x02, r24	; 2
 1b2:	82 b1       	in	r24, 0x02	; 2
 1b4:	8b 7f       	andi	r24, 0xFB	; 251
 1b6:	82 b9       	out	0x02, r24	; 2
 1b8:	d2 cf       	rjmp	.-92     	; 0x15e <latch_lcd_gate>
 1ba:	08 95       	ret

000001bc <lcd_init_fridge>:
 1bc:	8f e0       	ldi	r24, 0x0F	; 15
 1be:	eb df       	rcall	.-42     	; 0x196 <lcd_command_fridge>
 1c0:	8f e3       	ldi	r24, 0x3F	; 63
 1c2:	e9 df       	rcall	.-46     	; 0x196 <lcd_command_fridge>
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	e7 cf       	rjmp	.-50     	; 0x196 <lcd_command_fridge>
 1c8:	08 95       	ret

000001ca <lcd_init_gate>:
 1ca:	8f e0       	ldi	r24, 0x0F	; 15
 1cc:	ee df       	rcall	.-36     	; 0x1aa <lcd_command_gate>
 1ce:	8f e3       	ldi	r24, 0x3F	; 63
 1d0:	ec df       	rcall	.-40     	; 0x1aa <lcd_command_gate>
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	ea cf       	rjmp	.-44     	; 0x1aa <lcd_command_gate>
 1d6:	08 95       	ret

000001d8 <lcd_print_gate>:
 1d8:	ef 92       	push	r14
 1da:	ff 92       	push	r15
 1dc:	0f 93       	push	r16
 1de:	1f 93       	push	r17
 1e0:	cf 93       	push	r28
 1e2:	df 93       	push	r29
 1e4:	7c 01       	movw	r14, r24
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	e0 df       	rcall	.-64     	; 0x1aa <lcd_command_gate>
 1ea:	f7 01       	movw	r30, r14
 1ec:	01 90       	ld	r0, Z+
 1ee:	00 20       	and	r0, r0
 1f0:	e9 f7       	brne	.-6      	; 0x1ec <lcd_print_gate+0x14>
 1f2:	31 97       	sbiw	r30, 0x01	; 1
 1f4:	8f 01       	movw	r16, r30
 1f6:	0e 19       	sub	r16, r14
 1f8:	1f 09       	sbc	r17, r15
 1fa:	c0 e0       	ldi	r28, 0x00	; 0
 1fc:	d0 e0       	ldi	r29, 0x00	; 0
 1fe:	06 c0       	rjmp	.+12     	; 0x20c <lcd_print_gate+0x34>
 200:	f7 01       	movw	r30, r14
 202:	ec 0f       	add	r30, r28
 204:	fd 1f       	adc	r31, r29
 206:	80 81       	ld	r24, Z
 208:	bd df       	rcall	.-134    	; 0x184 <lcd_data_gate>
 20a:	21 96       	adiw	r28, 0x01	; 1
 20c:	c0 17       	cp	r28, r16
 20e:	d1 07       	cpc	r29, r17
 210:	bc f3       	brlt	.-18     	; 0x200 <lcd_print_gate+0x28>
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	1f 91       	pop	r17
 218:	0f 91       	pop	r16
 21a:	ff 90       	pop	r15
 21c:	ef 90       	pop	r14
 21e:	08 95       	ret

00000220 <main>:

int main(void)
{
	DDRL = 0x87;
 220:	87 e8       	ldi	r24, 0x87	; 135
 222:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__TEXT_REGION_LENGTH__+0x7e010a>
	DDRH = 0xff; //fridge LCD
 226:	cf ef       	ldi	r28, 0xFF	; 255
 228:	c0 93 01 01 	sts	0x0101, r28	; 0x800101 <__TEXT_REGION_LENGTH__+0x7e0101>
	DDRG = 0xff; // fridge LCD
 22c:	c3 bb       	out	0x13, r28	; 19
	DDRK = 0xff;
 22e:	c0 93 07 01 	sts	0x0107, r28	; 0x800107 <__TEXT_REGION_LENGTH__+0x7e0107>
	DDRF = 0xff; // gate LCD
 232:	c0 bb       	out	0x10, r28	; 16
	DDRA = 0xff; // gate LCD
 234:	c1 b9       	out	0x01, r28	; 1
	
	lcd_init_gate(); // bring back
 236:	c9 df       	rcall	.-110    	; 0x1ca <lcd_init_gate>
	lcd_init_fridge();
 238:	c1 df       	rcall	.-126    	; 0x1bc <lcd_init_fridge>
	
	USART_Init(); // bring back
 23a:	72 df       	rcall	.-284    	; 0x120 <USART_Init>
 23c:	78 94       	sei
	
	// 	registration();
	// MoneySlot(); // bring back, making my buzzer not to work
	
	// setup interrupts
	sei();
 23e:	8d b3       	in	r24, 0x1d	; 29
	EIMSK |= (1<<INT0);
 240:	81 60       	ori	r24, 0x01	; 1
 242:	8d bb       	out	0x1d, r24	; 29
 244:	85 b7       	in	r24, 0x35	; 53
	
	MCUCR |= (1<<ISC01);
 246:	82 60       	ori	r24, 0x02	; 2
 248:	85 bf       	out	0x35, r24	; 53
 24a:	1a b8       	out	0x0a, r1	; 10
	
	// set data direction registers
	DDRD = 0x00;
 24c:	c4 b9       	out	0x04, r28	; 4
	DDRB = 0xFF;
 24e:	8b b1       	in	r24, 0x0b	; 11
	
	// Set pull up resistor on incoming car switch
	PORTD |= (1<<PD0);
 250:	81 60       	ori	r24, 0x01	; 1
 252:	8b b9       	out	0x0b, r24	; 11
 254:	ff cf       	rjmp	.-2      	; 0x254 <main+0x34>

00000256 <__vector_1>:
 256:	1f 92       	push	r1
	
	while(1){}
}


ISR(INT0_vect) {
 258:	0f 92       	push	r0
 25a:	0f b6       	in	r0, 0x3f	; 63
 25c:	0f 92       	push	r0
 25e:	11 24       	eor	r1, r1
 260:	0b b6       	in	r0, 0x3b	; 59
 262:	0f 92       	push	r0
 264:	2f 93       	push	r18
 266:	3f 93       	push	r19
 268:	4f 93       	push	r20
 26a:	5f 93       	push	r21
 26c:	6f 93       	push	r22
 26e:	7f 93       	push	r23
 270:	8f 93       	push	r24
 272:	9f 93       	push	r25
 274:	af 93       	push	r26
 276:	bf 93       	push	r27
 278:	ef 93       	push	r30
 27a:	ff 93       	push	r31
 	//while(1){
 		//if (!(PINB & (1 << PB7))) {
 		// Set the buzzer on
 		PORTB |= (1<<PB7);
 27c:	85 b1       	in	r24, 0x05	; 5
 27e:	80 68       	ori	r24, 0x80	; 128
 280:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 282:	2f e9       	ldi	r18, 0x9F	; 159
 284:	86 e8       	ldi	r24, 0x86	; 134
 286:	91 e0       	ldi	r25, 0x01	; 1
 288:	21 50       	subi	r18, 0x01	; 1
 28a:	80 40       	sbci	r24, 0x00	; 0
 28c:	90 40       	sbci	r25, 0x00	; 0
 28e:	e1 f7       	brne	.-8      	; 0x288 <__vector_1+0x32>
 290:	00 c0       	rjmp	.+0      	; 0x292 <__vector_1+0x3c>
 292:	00 00       	nop
 		_delay_ms(500);
 		PORTB &= ~(1<<PB7);
 294:	85 b1       	in	r24, 0x05	; 5
 296:	8f 77       	andi	r24, 0x7F	; 127
 298:	85 b9       	out	0x05, r24	; 5
		 lcd_print_gate("Incoming tourist vehicle");
 29a:	81 e9       	ldi	r24, 0x91	; 145
 29c:	95 e0       	ldi	r25, 0x05	; 5
 29e:	9c df       	rcall	.-200    	; 0x1d8 <lcd_print_gate>
		 //lcd_print_fridge("fridge");
 		//_delay_ms(500);
 		//}
 	//}
}
 2a0:	ff 91       	pop	r31
 2a2:	ef 91       	pop	r30
 2a4:	bf 91       	pop	r27
 2a6:	af 91       	pop	r26
 2a8:	9f 91       	pop	r25
 2aa:	8f 91       	pop	r24
 2ac:	7f 91       	pop	r23
 2ae:	6f 91       	pop	r22
 2b0:	5f 91       	pop	r21
 2b2:	4f 91       	pop	r20
 2b4:	3f 91       	pop	r19
 2b6:	2f 91       	pop	r18
 2b8:	0f 90       	pop	r0
 2ba:	0b be       	out	0x3b, r0	; 59
 2bc:	0f 90       	pop	r0
 2be:	0f be       	out	0x3f, r0	; 63
 2c0:	0f 90       	pop	r0
 2c2:	1f 90       	pop	r1
 2c4:	18 95       	reti

000002c6 <_exit>:
 2c6:	f8 94       	cli

000002c8 <__stop_program>:
 2c8:	ff cf       	rjmp	.-2      	; 0x2c8 <__stop_program>
