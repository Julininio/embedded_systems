
coursework.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000004e6  00800200  00001f68  00001ffc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001f68  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000023  008006e6  008006e6  000024e2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000024e2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002540  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000238  00000000  00000000  00002580  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003078  00000000  00000000  000027b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fd6  00000000  00000000  00005830  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000141d  00000000  00000000  00006806  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000550  00000000  00000000  00007c24  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000be0  00000000  00000000  00008174  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001656  00000000  00000000  00008d54  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a0  00000000  00000000  0000a3aa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	77 c0       	rjmp	.+238    	; 0xf0 <__ctors_end>
       2:	00 00       	nop
       4:	75 c7       	rjmp	.+3818   	; 0xef0 <__vector_1>
       6:	00 00       	nop
       8:	91 c0       	rjmp	.+290    	; 0x12c <__bad_interrupt>
       a:	00 00       	nop
       c:	8f c0       	rjmp	.+286    	; 0x12c <__bad_interrupt>
       e:	00 00       	nop
      10:	8d c0       	rjmp	.+282    	; 0x12c <__bad_interrupt>
      12:	00 00       	nop
      14:	8b c0       	rjmp	.+278    	; 0x12c <__bad_interrupt>
      16:	00 00       	nop
      18:	89 c0       	rjmp	.+274    	; 0x12c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	87 c0       	rjmp	.+270    	; 0x12c <__bad_interrupt>
      1e:	00 00       	nop
      20:	85 c0       	rjmp	.+266    	; 0x12c <__bad_interrupt>
      22:	00 00       	nop
      24:	83 c0       	rjmp	.+262    	; 0x12c <__bad_interrupt>
      26:	00 00       	nop
      28:	81 c0       	rjmp	.+258    	; 0x12c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7f c0       	rjmp	.+254    	; 0x12c <__bad_interrupt>
      2e:	00 00       	nop
      30:	7d c0       	rjmp	.+250    	; 0x12c <__bad_interrupt>
      32:	00 00       	nop
      34:	7b c0       	rjmp	.+246    	; 0x12c <__bad_interrupt>
      36:	00 00       	nop
      38:	79 c0       	rjmp	.+242    	; 0x12c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	77 c0       	rjmp	.+238    	; 0x12c <__bad_interrupt>
      3e:	00 00       	nop
      40:	75 c0       	rjmp	.+234    	; 0x12c <__bad_interrupt>
      42:	00 00       	nop
      44:	73 c0       	rjmp	.+230    	; 0x12c <__bad_interrupt>
      46:	00 00       	nop
      48:	71 c0       	rjmp	.+226    	; 0x12c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6f c0       	rjmp	.+222    	; 0x12c <__bad_interrupt>
      4e:	00 00       	nop
      50:	6d c0       	rjmp	.+218    	; 0x12c <__bad_interrupt>
      52:	00 00       	nop
      54:	6b c0       	rjmp	.+214    	; 0x12c <__bad_interrupt>
      56:	00 00       	nop
      58:	69 c0       	rjmp	.+210    	; 0x12c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	67 c0       	rjmp	.+206    	; 0x12c <__bad_interrupt>
      5e:	00 00       	nop
      60:	65 c0       	rjmp	.+202    	; 0x12c <__bad_interrupt>
      62:	00 00       	nop
      64:	63 c0       	rjmp	.+198    	; 0x12c <__bad_interrupt>
      66:	00 00       	nop
      68:	61 c0       	rjmp	.+194    	; 0x12c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5f c0       	rjmp	.+190    	; 0x12c <__bad_interrupt>
      6e:	00 00       	nop
      70:	5d c0       	rjmp	.+186    	; 0x12c <__bad_interrupt>
      72:	00 00       	nop
      74:	5b c0       	rjmp	.+182    	; 0x12c <__bad_interrupt>
      76:	00 00       	nop
      78:	59 c0       	rjmp	.+178    	; 0x12c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	57 c0       	rjmp	.+174    	; 0x12c <__bad_interrupt>
      7e:	00 00       	nop
      80:	55 c0       	rjmp	.+170    	; 0x12c <__bad_interrupt>
      82:	00 00       	nop
      84:	53 c0       	rjmp	.+166    	; 0x12c <__bad_interrupt>
      86:	00 00       	nop
      88:	51 c0       	rjmp	.+162    	; 0x12c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4f c0       	rjmp	.+158    	; 0x12c <__bad_interrupt>
      8e:	00 00       	nop
      90:	4d c0       	rjmp	.+154    	; 0x12c <__bad_interrupt>
      92:	00 00       	nop
      94:	4b c0       	rjmp	.+150    	; 0x12c <__bad_interrupt>
      96:	00 00       	nop
      98:	49 c0       	rjmp	.+146    	; 0x12c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	47 c0       	rjmp	.+142    	; 0x12c <__bad_interrupt>
      9e:	00 00       	nop
      a0:	45 c0       	rjmp	.+138    	; 0x12c <__bad_interrupt>
      a2:	00 00       	nop
      a4:	43 c0       	rjmp	.+134    	; 0x12c <__bad_interrupt>
      a6:	00 00       	nop
      a8:	41 c0       	rjmp	.+130    	; 0x12c <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3f c0       	rjmp	.+126    	; 0x12c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	3d c0       	rjmp	.+122    	; 0x12c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	3b c0       	rjmp	.+118    	; 0x12c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	39 c0       	rjmp	.+114    	; 0x12c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	37 c0       	rjmp	.+110    	; 0x12c <__bad_interrupt>
      be:	00 00       	nop
      c0:	35 c0       	rjmp	.+106    	; 0x12c <__bad_interrupt>
      c2:	00 00       	nop
      c4:	33 c0       	rjmp	.+102    	; 0x12c <__bad_interrupt>
      c6:	00 00       	nop
      c8:	31 c0       	rjmp	.+98     	; 0x12c <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2f c0       	rjmp	.+94     	; 0x12c <__bad_interrupt>
      ce:	00 00       	nop
      d0:	2d c0       	rjmp	.+90     	; 0x12c <__bad_interrupt>
      d2:	00 00       	nop
      d4:	2b c0       	rjmp	.+86     	; 0x12c <__bad_interrupt>
      d6:	00 00       	nop
      d8:	29 c0       	rjmp	.+82     	; 0x12c <__bad_interrupt>
      da:	00 00       	nop
      dc:	27 c0       	rjmp	.+78     	; 0x12c <__bad_interrupt>
      de:	00 00       	nop
      e0:	25 c0       	rjmp	.+74     	; 0x12c <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	63 64       	ori	r22, 0x43	; 67
      e6:	69 6e       	ori	r22, 0xE9	; 233
      e8:	6f 70       	andi	r22, 0x0F	; 15
      ea:	73 75       	andi	r23, 0x53	; 83
      ec:	78 58       	subi	r23, 0x88	; 136
      ee:	5b 00       	.word	0x005b	; ????

000000f0 <__ctors_end>:
      f0:	11 24       	eor	r1, r1
      f2:	1f be       	out	0x3f, r1	; 63
      f4:	cf ef       	ldi	r28, 0xFF	; 255
      f6:	d1 e2       	ldi	r29, 0x21	; 33
      f8:	de bf       	out	0x3e, r29	; 62
      fa:	cd bf       	out	0x3d, r28	; 61

000000fc <__do_copy_data>:
      fc:	16 e0       	ldi	r17, 0x06	; 6
      fe:	a0 e0       	ldi	r26, 0x00	; 0
     100:	b2 e0       	ldi	r27, 0x02	; 2
     102:	e8 e6       	ldi	r30, 0x68	; 104
     104:	ff e1       	ldi	r31, 0x1F	; 31
     106:	00 e0       	ldi	r16, 0x00	; 0
     108:	0b bf       	out	0x3b, r16	; 59
     10a:	02 c0       	rjmp	.+4      	; 0x110 <__do_copy_data+0x14>
     10c:	07 90       	elpm	r0, Z+
     10e:	0d 92       	st	X+, r0
     110:	a6 3e       	cpi	r26, 0xE6	; 230
     112:	b1 07       	cpc	r27, r17
     114:	d9 f7       	brne	.-10     	; 0x10c <__do_copy_data+0x10>

00000116 <__do_clear_bss>:
     116:	27 e0       	ldi	r18, 0x07	; 7
     118:	a6 ee       	ldi	r26, 0xE6	; 230
     11a:	b6 e0       	ldi	r27, 0x06	; 6
     11c:	01 c0       	rjmp	.+2      	; 0x120 <.do_clear_bss_start>

0000011e <.do_clear_bss_loop>:
     11e:	1d 92       	st	X+, r1

00000120 <.do_clear_bss_start>:
     120:	a9 30       	cpi	r26, 0x09	; 9
     122:	b2 07       	cpc	r27, r18
     124:	e1 f7       	brne	.-8      	; 0x11e <.do_clear_bss_loop>
     126:	c2 d6       	rcall	.+3460   	; 0xeac <main>
     128:	0c 94 b2 0f 	jmp	0x1f64	; 0x1f64 <_exit>

0000012c <__bad_interrupt>:
     12c:	69 cf       	rjmp	.-302    	; 0x0 <__vectors>

0000012e <getChildCount>:
	else if ((PIND & 0x20) == 0)
	{
		key = 9;
	}
	return key;
}
     12e:	80 91 0d 02 	lds	r24, 0x020D	; 0x80020d <EEPROM_ADDRESS_CHILD_COUNT>
     132:	90 91 0e 02 	lds	r25, 0x020E	; 0x80020e <EEPROM_ADDRESS_CHILD_COUNT+0x1>
     136:	0c 94 93 0f 	jmp	0x1f26	; 0x1f26 <eeprom_read_word>
     13a:	08 95       	ret

0000013c <getAdultCount>:
     13c:	80 91 0b 02 	lds	r24, 0x020B	; 0x80020b <EEPROM_ADDRESS_ADULT_COUNT>
     140:	90 91 0c 02 	lds	r25, 0x020C	; 0x80020c <EEPROM_ADDRESS_ADULT_COUNT+0x1>
     144:	0c 94 93 0f 	jmp	0x1f26	; 0x1f26 <eeprom_read_word>
     148:	08 95       	ret

0000014a <getTotalCount>:
     14a:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <EEPROM_ADDRESS_TOTAL_COUNT>
     14e:	90 91 08 02 	lds	r25, 0x0208	; 0x800208 <EEPROM_ADDRESS_TOTAL_COUNT+0x1>
     152:	0c 94 93 0f 	jmp	0x1f26	; 0x1f26 <eeprom_read_word>
     156:	08 95       	ret

00000158 <removeTrailingNulls>:
     158:	dc 01       	movw	r26, r24
     15a:	fc 01       	movw	r30, r24
     15c:	01 90       	ld	r0, Z+
     15e:	00 20       	and	r0, r0
     160:	e9 f7       	brne	.-6      	; 0x15c <removeTrailingNulls+0x4>
     162:	31 97       	sbiw	r30, 0x01	; 1
     164:	9f 01       	movw	r18, r30
     166:	28 1b       	sub	r18, r24
     168:	39 0b       	sbc	r19, r25
     16a:	21 50       	subi	r18, 0x01	; 1
     16c:	31 09       	sbc	r19, r1
     16e:	09 c0       	rjmp	.+18     	; 0x182 <removeTrailingNulls+0x2a>
     170:	fd 01       	movw	r30, r26
     172:	e2 0f       	add	r30, r18
     174:	f3 1f       	adc	r31, r19
     176:	90 81       	ld	r25, Z
     178:	91 11       	cpse	r25, r1
     17a:	05 c0       	rjmp	.+10     	; 0x186 <removeTrailingNulls+0x2e>
     17c:	10 82       	st	Z, r1
     17e:	21 50       	subi	r18, 0x01	; 1
     180:	31 09       	sbc	r19, r1
     182:	33 23       	and	r19, r19
     184:	ac f7       	brge	.-22     	; 0x170 <removeTrailingNulls+0x18>
     186:	cd 01       	movw	r24, r26
     188:	08 95       	ret

0000018a <USART_Init>:
     18a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     18e:	83 e3       	ldi	r24, 0x33	; 51
     190:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     194:	88 e1       	ldi	r24, 0x18	; 24
     196:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     19a:	86 e0       	ldi	r24, 0x06	; 6
     19c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     1a0:	08 95       	ret

000001a2 <USART_Transmit>:
     1a2:	dc 01       	movw	r26, r24
     1a4:	fc 01       	movw	r30, r24
     1a6:	01 90       	ld	r0, Z+
     1a8:	00 20       	and	r0, r0
     1aa:	e9 f7       	brne	.-6      	; 0x1a6 <USART_Transmit+0x4>
     1ac:	31 97       	sbiw	r30, 0x01	; 1
     1ae:	af 01       	movw	r20, r30
     1b0:	48 1b       	sub	r20, r24
     1b2:	59 0b       	sbc	r21, r25
     1b4:	20 e0       	ldi	r18, 0x00	; 0
     1b6:	30 e0       	ldi	r19, 0x00	; 0
     1b8:	0c c0       	rjmp	.+24     	; 0x1d2 <USART_Transmit+0x30>
     1ba:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     1be:	95 ff       	sbrs	r25, 5
     1c0:	fc cf       	rjmp	.-8      	; 0x1ba <USART_Transmit+0x18>
     1c2:	fd 01       	movw	r30, r26
     1c4:	e2 0f       	add	r30, r18
     1c6:	f3 1f       	adc	r31, r19
     1c8:	90 81       	ld	r25, Z
     1ca:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     1ce:	2f 5f       	subi	r18, 0xFF	; 255
     1d0:	3f 4f       	sbci	r19, 0xFF	; 255
     1d2:	24 17       	cp	r18, r20
     1d4:	35 07       	cpc	r19, r21
     1d6:	8c f3       	brlt	.-30     	; 0x1ba <USART_Transmit+0x18>
     1d8:	08 95       	ret

000001da <USART_Receive>:
     1da:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     1de:	88 23       	and	r24, r24
     1e0:	e4 f7       	brge	.-8      	; 0x1da <USART_Receive>
     1e2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     1e6:	08 95       	ret

000001e8 <USART_TransmitInt>:
     1e8:	0f 93       	push	r16
     1ea:	1f 93       	push	r17
     1ec:	cf 93       	push	r28
     1ee:	df 93       	push	r29
     1f0:	cd b7       	in	r28, 0x3d	; 61
     1f2:	de b7       	in	r29, 0x3e	; 62
     1f4:	64 97       	sbiw	r28, 0x14	; 20
     1f6:	0f b6       	in	r0, 0x3f	; 63
     1f8:	f8 94       	cli
     1fa:	de bf       	out	0x3e, r29	; 62
     1fc:	0f be       	out	0x3f, r0	; 63
     1fe:	cd bf       	out	0x3d, r28	; 61
     200:	9f 93       	push	r25
     202:	8f 93       	push	r24
     204:	82 e4       	ldi	r24, 0x42	; 66
     206:	93 e0       	ldi	r25, 0x03	; 3
     208:	9f 93       	push	r25
     20a:	8f 93       	push	r24
     20c:	8e 01       	movw	r16, r28
     20e:	0f 5f       	subi	r16, 0xFF	; 255
     210:	1f 4f       	sbci	r17, 0xFF	; 255
     212:	1f 93       	push	r17
     214:	0f 93       	push	r16
     216:	0e 94 51 09 	call	0x12a2	; 0x12a2 <sprintf>
     21a:	c8 01       	movw	r24, r16
     21c:	c2 df       	rcall	.-124    	; 0x1a2 <USART_Transmit>
     21e:	0f 90       	pop	r0
     220:	0f 90       	pop	r0
     222:	0f 90       	pop	r0
     224:	0f 90       	pop	r0
     226:	0f 90       	pop	r0
     228:	0f 90       	pop	r0
     22a:	64 96       	adiw	r28, 0x14	; 20
     22c:	0f b6       	in	r0, 0x3f	; 63
     22e:	f8 94       	cli
     230:	de bf       	out	0x3e, r29	; 62
     232:	0f be       	out	0x3f, r0	; 63
     234:	cd bf       	out	0x3d, r28	; 61
     236:	df 91       	pop	r29
     238:	cf 91       	pop	r28
     23a:	1f 91       	pop	r17
     23c:	0f 91       	pop	r16
     23e:	08 95       	ret

00000240 <checkCredentials>:
     240:	cf 93       	push	r28
     242:	df 93       	push	r29
     244:	eb 01       	movw	r28, r22
     246:	6f e0       	ldi	r22, 0x0F	; 15
     248:	72 e0       	ldi	r23, 0x02	; 2
     24a:	9d d7       	rcall	.+3898   	; 0x1186 <strcmp>
     24c:	89 2b       	or	r24, r25
     24e:	49 f4       	brne	.+18     	; 0x262 <checkCredentials+0x22>
     250:	66 e1       	ldi	r22, 0x16	; 22
     252:	72 e0       	ldi	r23, 0x02	; 2
     254:	ce 01       	movw	r24, r28
     256:	97 d7       	rcall	.+3886   	; 0x1186 <strcmp>
     258:	89 2b       	or	r24, r25
     25a:	31 f0       	breq	.+12     	; 0x268 <checkCredentials+0x28>
     25c:	80 e0       	ldi	r24, 0x00	; 0
     25e:	90 e0       	ldi	r25, 0x00	; 0
     260:	05 c0       	rjmp	.+10     	; 0x26c <checkCredentials+0x2c>
     262:	80 e0       	ldi	r24, 0x00	; 0
     264:	90 e0       	ldi	r25, 0x00	; 0
     266:	02 c0       	rjmp	.+4      	; 0x26c <checkCredentials+0x2c>
     268:	81 e0       	ldi	r24, 0x01	; 1
     26a:	90 e0       	ldi	r25, 0x00	; 0
     26c:	df 91       	pop	r29
     26e:	cf 91       	pop	r28
     270:	08 95       	ret

00000272 <USART_ReceiveString>:
     272:	cf 92       	push	r12
     274:	df 92       	push	r13
     276:	ef 92       	push	r14
     278:	ff 92       	push	r15
     27a:	0f 93       	push	r16
     27c:	1f 93       	push	r17
     27e:	cf 93       	push	r28
     280:	6c 01       	movw	r12, r24
     282:	7b 01       	movw	r14, r22
     284:	00 e0       	ldi	r16, 0x00	; 0
     286:	10 e0       	ldi	r17, 0x00	; 0
     288:	0e c0       	rjmp	.+28     	; 0x2a6 <USART_ReceiveString+0x34>
     28a:	a7 df       	rcall	.-178    	; 0x1da <USART_Receive>
     28c:	c8 2f       	mov	r28, r24
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	88 df       	rcall	.-240    	; 0x1a2 <USART_Transmit>
     292:	ca 30       	cpi	r28, 0x0A	; 10
     294:	69 f0       	breq	.+26     	; 0x2b0 <USART_ReceiveString+0x3e>
     296:	cd 30       	cpi	r28, 0x0D	; 13
     298:	59 f0       	breq	.+22     	; 0x2b0 <USART_ReceiveString+0x3e>
     29a:	f6 01       	movw	r30, r12
     29c:	e0 0f       	add	r30, r16
     29e:	f1 1f       	adc	r31, r17
     2a0:	c0 83       	st	Z, r28
     2a2:	0f 5f       	subi	r16, 0xFF	; 255
     2a4:	1f 4f       	sbci	r17, 0xFF	; 255
     2a6:	c7 01       	movw	r24, r14
     2a8:	01 97       	sbiw	r24, 0x01	; 1
     2aa:	08 17       	cp	r16, r24
     2ac:	19 07       	cpc	r17, r25
     2ae:	6c f3       	brlt	.-38     	; 0x28a <USART_ReceiveString+0x18>
     2b0:	f6 01       	movw	r30, r12
     2b2:	e0 0f       	add	r30, r16
     2b4:	f1 1f       	adc	r31, r17
     2b6:	10 82       	st	Z, r1
     2b8:	cf 91       	pop	r28
     2ba:	1f 91       	pop	r17
     2bc:	0f 91       	pop	r16
     2be:	ff 90       	pop	r15
     2c0:	ef 90       	pop	r14
     2c2:	df 90       	pop	r13
     2c4:	cf 90       	pop	r12
     2c6:	08 95       	ret

000002c8 <USART_ReadInteger>:
     2c8:	0f 93       	push	r16
     2ca:	1f 93       	push	r17
     2cc:	cf 93       	push	r28
     2ce:	df 93       	push	r29
     2d0:	cd b7       	in	r28, 0x3d	; 61
     2d2:	de b7       	in	r29, 0x3e	; 62
     2d4:	66 97       	sbiw	r28, 0x16	; 22
     2d6:	0f b6       	in	r0, 0x3f	; 63
     2d8:	f8 94       	cli
     2da:	de bf       	out	0x3e, r29	; 62
     2dc:	0f be       	out	0x3f, r0	; 63
     2de:	cd bf       	out	0x3d, r28	; 61
     2e0:	64 e1       	ldi	r22, 0x14	; 20
     2e2:	70 e0       	ldi	r23, 0x00	; 0
     2e4:	8e 01       	movw	r16, r28
     2e6:	0f 5f       	subi	r16, 0xFF	; 255
     2e8:	1f 4f       	sbci	r17, 0xFF	; 255
     2ea:	c8 01       	movw	r24, r16
     2ec:	c2 df       	rcall	.-124    	; 0x272 <USART_ReceiveString>
     2ee:	ce 01       	movw	r24, r28
     2f0:	45 96       	adiw	r24, 0x15	; 21
     2f2:	9f 93       	push	r25
     2f4:	8f 93       	push	r24
     2f6:	82 e4       	ldi	r24, 0x42	; 66
     2f8:	93 e0       	ldi	r25, 0x03	; 3
     2fa:	9f 93       	push	r25
     2fc:	8f 93       	push	r24
     2fe:	1f 93       	push	r17
     300:	0f 93       	push	r16
     302:	fd d7       	rcall	.+4090   	; 0x12fe <sscanf>
     304:	0f 90       	pop	r0
     306:	0f 90       	pop	r0
     308:	0f 90       	pop	r0
     30a:	0f 90       	pop	r0
     30c:	0f 90       	pop	r0
     30e:	0f 90       	pop	r0
     310:	8d 89       	ldd	r24, Y+21	; 0x15
     312:	9e 89       	ldd	r25, Y+22	; 0x16
     314:	66 96       	adiw	r28, 0x16	; 22
     316:	0f b6       	in	r0, 0x3f	; 63
     318:	f8 94       	cli
     31a:	de bf       	out	0x3e, r29	; 62
     31c:	0f be       	out	0x3f, r0	; 63
     31e:	cd bf       	out	0x3d, r28	; 61
     320:	df 91       	pop	r29
     322:	cf 91       	pop	r28
     324:	1f 91       	pop	r17
     326:	0f 91       	pop	r16
     328:	08 95       	ret

0000032a <getOption>:
     32a:	cf 93       	push	r28
     32c:	56 df       	rcall	.-340    	; 0x1da <USART_Receive>
     32e:	c8 2f       	mov	r28, r24
     330:	8b e2       	ldi	r24, 0x2B	; 43
     332:	94 e0       	ldi	r25, 0x04	; 4
     334:	36 df       	rcall	.-404    	; 0x1a2 <USART_Transmit>
     336:	8c 2f       	mov	r24, r28
     338:	cf 91       	pop	r28
     33a:	08 95       	ret

0000033c <replenishFridge>:
     33c:	cf 93       	push	r28
     33e:	df 93       	push	r29
     340:	00 d0       	rcall	.+0      	; 0x342 <replenishFridge+0x6>
     342:	cd b7       	in	r28, 0x3d	; 61
     344:	de b7       	in	r29, 0x3e	; 62
     346:	8a e1       	ldi	r24, 0x1A	; 26
     348:	92 e0       	ldi	r25, 0x02	; 2
     34a:	9f 93       	push	r25
     34c:	8f 93       	push	r24
     34e:	53 d7       	rcall	.+3750   	; 0x11f6 <printf>
     350:	ce 01       	movw	r24, r28
     352:	01 96       	adiw	r24, 0x01	; 1
     354:	9f 93       	push	r25
     356:	8f 93       	push	r24
     358:	82 e4       	ldi	r24, 0x42	; 66
     35a:	93 e0       	ldi	r25, 0x03	; 3
     35c:	9f 93       	push	r25
     35e:	8f 93       	push	r24
     360:	8d d7       	rcall	.+3866   	; 0x127c <scanf>
     362:	69 81       	ldd	r22, Y+1	; 0x01
     364:	7a 81       	ldd	r23, Y+2	; 0x02
     366:	0f 90       	pop	r0
     368:	0f 90       	pop	r0
     36a:	0f 90       	pop	r0
     36c:	0f 90       	pop	r0
     36e:	0f 90       	pop	r0
     370:	0f 90       	pop	r0
     372:	16 16       	cp	r1, r22
     374:	17 06       	cpc	r1, r23
     376:	e4 f4       	brge	.+56     	; 0x3b0 <replenishFridge+0x74>
     378:	07 2e       	mov	r0, r23
     37a:	00 0c       	add	r0, r0
     37c:	88 0b       	sbc	r24, r24
     37e:	99 0b       	sbc	r25, r25
     380:	56 d6       	rcall	.+3244   	; 0x102e <__floatsisf>
     382:	9b 01       	movw	r18, r22
     384:	ac 01       	movw	r20, r24
     386:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <waterBottles>
     38a:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <waterBottles+0x1>
     38e:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <waterBottles+0x2>
     392:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <waterBottles+0x3>
     396:	e5 d5       	rcall	.+3018   	; 0xf62 <__addsf3>
     398:	60 93 01 02 	sts	0x0201, r22	; 0x800201 <waterBottles>
     39c:	70 93 02 02 	sts	0x0202, r23	; 0x800202 <waterBottles+0x1>
     3a0:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <waterBottles+0x2>
     3a4:	90 93 04 02 	sts	0x0204, r25	; 0x800204 <waterBottles+0x3>
     3a8:	8d e4       	ldi	r24, 0x4D	; 77
     3aa:	92 e0       	ldi	r25, 0x02	; 2
     3ac:	37 d7       	rcall	.+3694   	; 0x121c <puts>
     3ae:	03 c0       	rjmp	.+6      	; 0x3b6 <replenishFridge+0x7a>
     3b0:	80 e6       	ldi	r24, 0x60	; 96
     3b2:	92 e0       	ldi	r25, 0x02	; 2
     3b4:	33 d7       	rcall	.+3686   	; 0x121c <puts>
     3b6:	0f 90       	pop	r0
     3b8:	0f 90       	pop	r0
     3ba:	df 91       	pop	r29
     3bc:	cf 91       	pop	r28
     3be:	08 95       	ret

000003c0 <isParkFull>:
     3c0:	80 91 09 02 	lds	r24, 0x0209	; 0x800209 <EEPROM_ADDRESS_MAX_COUNT>
     3c4:	90 91 0a 02 	lds	r25, 0x020A	; 0x80020a <EEPROM_ADDRESS_MAX_COUNT+0x1>
     3c8:	0e 94 93 0f 	call	0x1f26	; 0x1f26 <eeprom_read_word>
     3cc:	90 93 ec 06 	sts	0x06EC, r25	; 0x8006ec <totalTourists+0x1>
     3d0:	80 93 eb 06 	sts	0x06EB, r24	; 0x8006eb <totalTourists>
     3d4:	89 3c       	cpi	r24, 0xC9	; 201
     3d6:	91 05       	cpc	r25, r1
     3d8:	14 f0       	brlt	.+4      	; 0x3de <isParkFull+0x1e>
     3da:	81 e0       	ldi	r24, 0x01	; 1
     3dc:	08 95       	ret
     3de:	80 e0       	ldi	r24, 0x00	; 0
     3e0:	08 95       	ret

000003e2 <saveCarInfo>:
     3e2:	20 91 e9 06 	lds	r18, 0x06E9	; 0x8006e9 <countNumberPlates>
     3e6:	30 91 ea 06 	lds	r19, 0x06EA	; 0x8006ea <countNumberPlates+0x1>
     3ea:	12 16       	cp	r1, r18
     3ec:	13 06       	cpc	r1, r19
     3ee:	dc f4       	brge	.+54     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
     3f0:	60 91 05 02 	lds	r22, 0x0205	; 0x800205 <EEPROM_ADDRESS_NUMBER_PLATES>
     3f4:	70 91 06 02 	lds	r23, 0x0206	; 0x800206 <EEPROM_ADDRESS_NUMBER_PLATES+0x1>
     3f8:	4f e0       	ldi	r20, 0x0F	; 15
     3fa:	50 e0       	ldi	r21, 0x00	; 0
     3fc:	0e 94 98 0f 	call	0x1f30	; 0x1f30 <eeprom_write_block>
     400:	80 91 e9 06 	lds	r24, 0x06E9	; 0x8006e9 <countNumberPlates>
     404:	90 91 ea 06 	lds	r25, 0x06EA	; 0x8006ea <countNumberPlates+0x1>
     408:	01 96       	adiw	r24, 0x01	; 1
     40a:	90 93 ea 06 	sts	0x06EA, r25	; 0x8006ea <countNumberPlates+0x1>
     40e:	80 93 e9 06 	sts	0x06E9, r24	; 0x8006e9 <countNumberPlates>
     412:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <EEPROM_ADDRESS_NUMBER_PLATES>
     416:	90 91 06 02 	lds	r25, 0x0206	; 0x800206 <EEPROM_ADDRESS_NUMBER_PLATES+0x1>
     41a:	0f 96       	adiw	r24, 0x0f	; 15
     41c:	90 93 06 02 	sts	0x0206, r25	; 0x800206 <EEPROM_ADDRESS_NUMBER_PLATES+0x1>
     420:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <EEPROM_ADDRESS_NUMBER_PLATES>
     424:	08 95       	ret
     426:	60 91 05 02 	lds	r22, 0x0205	; 0x800205 <EEPROM_ADDRESS_NUMBER_PLATES>
     42a:	70 91 06 02 	lds	r23, 0x0206	; 0x800206 <EEPROM_ADDRESS_NUMBER_PLATES+0x1>
     42e:	4f e0       	ldi	r20, 0x0F	; 15
     430:	50 e0       	ldi	r21, 0x00	; 0
     432:	0e 94 98 0f 	call	0x1f30	; 0x1f30 <eeprom_write_block>
     436:	80 91 e9 06 	lds	r24, 0x06E9	; 0x8006e9 <countNumberPlates>
     43a:	90 91 ea 06 	lds	r25, 0x06EA	; 0x8006ea <countNumberPlates+0x1>
     43e:	01 96       	adiw	r24, 0x01	; 1
     440:	90 93 ea 06 	sts	0x06EA, r25	; 0x8006ea <countNumberPlates+0x1>
     444:	80 93 e9 06 	sts	0x06E9, r24	; 0x8006e9 <countNumberPlates>
     448:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <EEPROM_ADDRESS_NUMBER_PLATES>
     44c:	90 91 06 02 	lds	r25, 0x0206	; 0x800206 <EEPROM_ADDRESS_NUMBER_PLATES+0x1>
     450:	0f 96       	adiw	r24, 0x0f	; 15
     452:	90 93 06 02 	sts	0x0206, r25	; 0x800206 <EEPROM_ADDRESS_NUMBER_PLATES+0x1>
     456:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <EEPROM_ADDRESS_NUMBER_PLATES>
     45a:	08 95       	ret

0000045c <getMaxAddress>:
     45c:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <EEPROM_ADDRESS_NUMBER_PLATES>
     460:	90 91 06 02 	lds	r25, 0x0206	; 0x800206 <EEPROM_ADDRESS_NUMBER_PLATES+0x1>
     464:	89 32       	cpi	r24, 0x29	; 41
     466:	91 05       	cpc	r25, r1
     468:	08 f0       	brcs	.+2      	; 0x46c <getMaxAddress+0x10>
     46a:	0f 97       	sbiw	r24, 0x0f	; 15
     46c:	08 95       	ret

0000046e <displayCarsInsidePark>:
     46e:	cf 92       	push	r12
     470:	df 92       	push	r13
     472:	ef 92       	push	r14
     474:	ff 92       	push	r15
     476:	0f 93       	push	r16
     478:	1f 93       	push	r17
     47a:	cf 93       	push	r28
     47c:	df 93       	push	r29
     47e:	cd b7       	in	r28, 0x3d	; 61
     480:	de b7       	in	r29, 0x3e	; 62
     482:	2f 97       	sbiw	r28, 0x0f	; 15
     484:	0f b6       	in	r0, 0x3f	; 63
     486:	f8 94       	cli
     488:	de bf       	out	0x3e, r29	; 62
     48a:	0f be       	out	0x3f, r0	; 63
     48c:	cd bf       	out	0x3d, r28	; 61
     48e:	8b e7       	ldi	r24, 0x7B	; 123
     490:	92 e0       	ldi	r25, 0x02	; 2
     492:	87 de       	rcall	.-754    	; 0x1a2 <USART_Transmit>
     494:	80 91 e9 06 	lds	r24, 0x06E9	; 0x8006e9 <countNumberPlates>
     498:	90 91 ea 06 	lds	r25, 0x06EA	; 0x8006ea <countNumberPlates+0x1>
     49c:	a5 de       	rcall	.-694    	; 0x1e8 <USART_TransmitInt>
     49e:	8b e2       	ldi	r24, 0x2B	; 43
     4a0:	94 e0       	ldi	r25, 0x04	; 4
     4a2:	7f de       	rcall	.-770    	; 0x1a2 <USART_Transmit>
     4a4:	8c e8       	ldi	r24, 0x8C	; 140
     4a6:	92 e0       	ldi	r25, 0x02	; 2
     4a8:	7c de       	rcall	.-776    	; 0x1a2 <USART_Transmit>
     4aa:	8b e2       	ldi	r24, 0x2B	; 43
     4ac:	94 e0       	ldi	r25, 0x04	; 4
     4ae:	79 de       	rcall	.-782    	; 0x1a2 <USART_Transmit>
     4b0:	d5 df       	rcall	.-86     	; 0x45c <getMaxAddress>
     4b2:	6c 01       	movw	r12, r24
     4b4:	20 91 e9 06 	lds	r18, 0x06E9	; 0x8006e9 <countNumberPlates>
     4b8:	30 91 ea 06 	lds	r19, 0x06EA	; 0x8006ea <countNumberPlates+0x1>
     4bc:	41 ef       	ldi	r20, 0xF1	; 241
     4be:	42 03       	mulsu	r20, r18
     4c0:	80 01       	movw	r16, r0
     4c2:	43 9f       	mul	r20, r19
     4c4:	10 0d       	add	r17, r0
     4c6:	11 24       	eor	r1, r1
     4c8:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <EEPROM_ADDRESS_NUMBER_PLATES>
     4cc:	90 91 06 02 	lds	r25, 0x0206	; 0x800206 <EEPROM_ADDRESS_NUMBER_PLATES+0x1>
     4d0:	08 0f       	add	r16, r24
     4d2:	19 1f       	adc	r17, r25
     4d4:	ee 24       	eor	r14, r14
     4d6:	e3 94       	inc	r14
     4d8:	f1 2c       	mov	r15, r1
     4da:	17 c0       	rjmp	.+46     	; 0x50a <displayCarsInsidePark+0x9c>
     4dc:	4f e0       	ldi	r20, 0x0F	; 15
     4de:	50 e0       	ldi	r21, 0x00	; 0
     4e0:	b8 01       	movw	r22, r16
     4e2:	ce 01       	movw	r24, r28
     4e4:	01 96       	adiw	r24, 0x01	; 1
     4e6:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <eeprom_read_block>
     4ea:	c7 01       	movw	r24, r14
     4ec:	7d de       	rcall	.-774    	; 0x1e8 <USART_TransmitInt>
     4ee:	84 ed       	ldi	r24, 0xD4	; 212
     4f0:	93 e0       	ldi	r25, 0x03	; 3
     4f2:	57 de       	rcall	.-850    	; 0x1a2 <USART_Transmit>
     4f4:	ce 01       	movw	r24, r28
     4f6:	01 96       	adiw	r24, 0x01	; 1
     4f8:	54 de       	rcall	.-856    	; 0x1a2 <USART_Transmit>
     4fa:	8b e2       	ldi	r24, 0x2B	; 43
     4fc:	94 e0       	ldi	r25, 0x04	; 4
     4fe:	51 de       	rcall	.-862    	; 0x1a2 <USART_Transmit>
     500:	8f ef       	ldi	r24, 0xFF	; 255
     502:	e8 1a       	sub	r14, r24
     504:	f8 0a       	sbc	r15, r24
     506:	01 5f       	subi	r16, 0xF1	; 241
     508:	1f 4f       	sbci	r17, 0xFF	; 255
     50a:	c0 16       	cp	r12, r16
     50c:	d1 06       	cpc	r13, r17
     50e:	30 f7       	brcc	.-52     	; 0x4dc <displayCarsInsidePark+0x6e>
     510:	2f 96       	adiw	r28, 0x0f	; 15
     512:	0f b6       	in	r0, 0x3f	; 63
     514:	f8 94       	cli
     516:	de bf       	out	0x3e, r29	; 62
     518:	0f be       	out	0x3f, r0	; 63
     51a:	cd bf       	out	0x3d, r28	; 61
     51c:	df 91       	pop	r29
     51e:	cf 91       	pop	r28
     520:	1f 91       	pop	r17
     522:	0f 91       	pop	r16
     524:	ff 90       	pop	r15
     526:	ef 90       	pop	r14
     528:	df 90       	pop	r13
     52a:	cf 90       	pop	r12
     52c:	08 95       	ret

0000052e <displayMoneyCollected>:
     52e:	cf 93       	push	r28
     530:	df 93       	push	r29
     532:	fd dd       	rcall	.-1030   	; 0x12e <getChildCount>
     534:	28 e8       	ldi	r18, 0x88	; 136
     536:	33 e1       	ldi	r19, 0x13	; 19
     538:	82 9f       	mul	r24, r18
     53a:	e0 01       	movw	r28, r0
     53c:	83 9f       	mul	r24, r19
     53e:	d0 0d       	add	r29, r0
     540:	92 9f       	mul	r25, r18
     542:	d0 0d       	add	r29, r0
     544:	11 24       	eor	r1, r1
     546:	fa dd       	rcall	.-1036   	; 0x13c <getAdultCount>
     548:	20 e1       	ldi	r18, 0x10	; 16
     54a:	37 e2       	ldi	r19, 0x27	; 39
     54c:	ac 01       	movw	r20, r24
     54e:	42 9f       	mul	r20, r18
     550:	c0 01       	movw	r24, r0
     552:	43 9f       	mul	r20, r19
     554:	90 0d       	add	r25, r0
     556:	52 9f       	mul	r21, r18
     558:	90 0d       	add	r25, r0
     55a:	11 24       	eor	r1, r1
     55c:	c8 0f       	add	r28, r24
     55e:	d9 1f       	adc	r29, r25
     560:	8d ea       	ldi	r24, 0xAD	; 173
     562:	92 e0       	ldi	r25, 0x02	; 2
     564:	1e de       	rcall	.-964    	; 0x1a2 <USART_Transmit>
     566:	ce 01       	movw	r24, r28
     568:	3f de       	rcall	.-898    	; 0x1e8 <USART_TransmitInt>
     56a:	8b e2       	ldi	r24, 0x2B	; 43
     56c:	94 e0       	ldi	r25, 0x04	; 4
     56e:	19 de       	rcall	.-974    	; 0x1a2 <USART_Transmit>
     570:	df 91       	pop	r29
     572:	cf 91       	pop	r28
     574:	08 95       	ret

00000576 <clearEEPROMMemoryRange>:
     576:	0f 93       	push	r16
     578:	1f 93       	push	r17
     57a:	cf 93       	push	r28
     57c:	df 93       	push	r29
     57e:	ec 01       	movw	r28, r24
     580:	8b 01       	movw	r16, r22
     582:	05 c0       	rjmp	.+10     	; 0x58e <clearEEPROMMemoryRange+0x18>
     584:	6f ef       	ldi	r22, 0xFF	; 255
     586:	ce 01       	movw	r24, r28
     588:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <eeprom_write_byte>
     58c:	21 96       	adiw	r28, 0x01	; 1
     58e:	c0 17       	cp	r28, r16
     590:	d1 07       	cpc	r29, r17
     592:	c0 f3       	brcs	.-16     	; 0x584 <clearEEPROMMemoryRange+0xe>
     594:	df 91       	pop	r29
     596:	cf 91       	pop	r28
     598:	1f 91       	pop	r17
     59a:	0f 91       	pop	r16
     59c:	08 95       	ret

0000059e <resetControllerEEPROM>:
     59e:	5e df       	rcall	.-324    	; 0x45c <getMaxAddress>
     5a0:	bc 01       	movw	r22, r24
     5a2:	80 e0       	ldi	r24, 0x00	; 0
     5a4:	90 e0       	ldi	r25, 0x00	; 0
     5a6:	e7 df       	rcall	.-50     	; 0x576 <clearEEPROMMemoryRange>
     5a8:	86 ec       	ldi	r24, 0xC6	; 198
     5aa:	92 e0       	ldi	r25, 0x02	; 2
     5ac:	fa dd       	rcall	.-1036   	; 0x1a2 <USART_Transmit>
     5ae:	8b e2       	ldi	r24, 0x2B	; 43
     5b0:	94 e0       	ldi	r25, 0x04	; 4
     5b2:	f7 cd       	rjmp	.-1042   	; 0x1a2 <USART_Transmit>
     5b4:	08 95       	ret

000005b6 <updateChildrenInParkCount>:
     5b6:	bc 01       	movw	r22, r24
     5b8:	80 91 0d 02 	lds	r24, 0x020D	; 0x80020d <EEPROM_ADDRESS_CHILD_COUNT>
     5bc:	90 91 0e 02 	lds	r25, 0x020E	; 0x80020e <EEPROM_ADDRESS_CHILD_COUNT+0x1>
     5c0:	0c 94 af 0f 	jmp	0x1f5e	; 0x1f5e <eeprom_write_word>
     5c4:	08 95       	ret

000005c6 <updateAdultsInParkCount>:
     5c6:	bc 01       	movw	r22, r24
     5c8:	80 91 0b 02 	lds	r24, 0x020B	; 0x80020b <EEPROM_ADDRESS_ADULT_COUNT>
     5cc:	90 91 0c 02 	lds	r25, 0x020C	; 0x80020c <EEPROM_ADDRESS_ADULT_COUNT+0x1>
     5d0:	0c 94 af 0f 	jmp	0x1f5e	; 0x1f5e <eeprom_write_word>
     5d4:	08 95       	ret

000005d6 <updateTotalPeopleInParkCount>:
     5d6:	bc 01       	movw	r22, r24
     5d8:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <EEPROM_ADDRESS_TOTAL_COUNT>
     5dc:	90 91 08 02 	lds	r25, 0x0208	; 0x800208 <EEPROM_ADDRESS_TOTAL_COUNT+0x1>
     5e0:	0c 94 af 0f 	jmp	0x1f5e	; 0x1f5e <eeprom_write_word>
     5e4:	08 95       	ret

000005e6 <initialiseEEPROM>:
     5e6:	80 e0       	ldi	r24, 0x00	; 0
     5e8:	90 e0       	ldi	r25, 0x00	; 0
     5ea:	e5 df       	rcall	.-54     	; 0x5b6 <updateChildrenInParkCount>
     5ec:	80 e0       	ldi	r24, 0x00	; 0
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	ea df       	rcall	.-44     	; 0x5c6 <updateAdultsInParkCount>
     5f2:	80 e0       	ldi	r24, 0x00	; 0
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	ef cf       	rjmp	.-34     	; 0x5d6 <updateTotalPeopleInParkCount>
     5f8:	08 95       	ret

000005fa <carLeavingPark>:
     5fa:	cf 92       	push	r12
     5fc:	df 92       	push	r13
     5fe:	ef 92       	push	r14
     600:	ff 92       	push	r15
     602:	0f 93       	push	r16
     604:	1f 93       	push	r17
     606:	cf 93       	push	r28
     608:	df 93       	push	r29
     60a:	cd b7       	in	r28, 0x3d	; 61
     60c:	de b7       	in	r29, 0x3e	; 62
     60e:	a4 97       	sbiw	r28, 0x24	; 36
     610:	0f b6       	in	r0, 0x3f	; 63
     612:	f8 94       	cli
     614:	de bf       	out	0x3e, r29	; 62
     616:	0f be       	out	0x3f, r0	; 63
     618:	cd bf       	out	0x3d, r28	; 61
     61a:	87 ee       	ldi	r24, 0xE7	; 231
     61c:	92 e0       	ldi	r25, 0x02	; 2
     61e:	c1 dd       	rcall	.-1150   	; 0x1a2 <USART_Transmit>
     620:	6f e0       	ldi	r22, 0x0F	; 15
     622:	70 e0       	ldi	r23, 0x00	; 0
     624:	ce 01       	movw	r24, r28
     626:	01 96       	adiw	r24, 0x01	; 1
     628:	24 de       	rcall	.-952    	; 0x272 <USART_ReceiveString>
     62a:	8b e2       	ldi	r24, 0x2B	; 43
     62c:	94 e0       	ldi	r25, 0x04	; 4
     62e:	b9 dd       	rcall	.-1166   	; 0x1a2 <USART_Transmit>
     630:	20 91 e9 06 	lds	r18, 0x06E9	; 0x8006e9 <countNumberPlates>
     634:	30 91 ea 06 	lds	r19, 0x06EA	; 0x8006ea <countNumberPlates+0x1>
     638:	41 ef       	ldi	r20, 0xF1	; 241
     63a:	42 03       	mulsu	r20, r18
     63c:	80 01       	movw	r16, r0
     63e:	43 9f       	mul	r20, r19
     640:	10 0d       	add	r17, r0
     642:	11 24       	eor	r1, r1
     644:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <EEPROM_ADDRESS_NUMBER_PLATES>
     648:	90 91 06 02 	lds	r25, 0x0206	; 0x800206 <EEPROM_ADDRESS_NUMBER_PLATES+0x1>
     64c:	08 0f       	add	r16, r24
     64e:	19 1f       	adc	r17, r25
     650:	05 df       	rcall	.-502    	; 0x45c <getMaxAddress>
     652:	80 17       	cp	r24, r16
     654:	91 07       	cpc	r25, r17
     656:	08 f4       	brcc	.+2      	; 0x65a <carLeavingPark+0x60>
     658:	69 c0       	rjmp	.+210    	; 0x72c <carLeavingPark+0x132>
     65a:	4f e0       	ldi	r20, 0x0F	; 15
     65c:	50 e0       	ldi	r21, 0x00	; 0
     65e:	b8 01       	movw	r22, r16
     660:	ce 01       	movw	r24, r28
     662:	40 96       	adiw	r24, 0x10	; 16
     664:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <eeprom_read_block>
     668:	62 e0       	ldi	r22, 0x02	; 2
     66a:	73 e0       	ldi	r23, 0x03	; 3
     66c:	ce 01       	movw	r24, r28
     66e:	40 96       	adiw	r24, 0x10	; 16
     670:	87 d5       	rcall	.+2830   	; 0x1180 <strtok>
     672:	98 a3       	std	Y+32, r25	; 0x20
     674:	8f 8f       	std	Y+31, r24	; 0x1f
     676:	ee 24       	eor	r14, r14
     678:	e3 94       	inc	r14
     67a:	f1 2c       	mov	r15, r1
     67c:	13 c0       	rjmp	.+38     	; 0x6a4 <carLeavingPark+0xaa>
     67e:	62 e0       	ldi	r22, 0x02	; 2
     680:	73 e0       	ldi	r23, 0x03	; 3
     682:	80 e0       	ldi	r24, 0x00	; 0
     684:	90 e0       	ldi	r25, 0x00	; 0
     686:	7c d5       	rcall	.+2808   	; 0x1180 <strtok>
     688:	f7 01       	movw	r30, r14
     68a:	ee 0f       	add	r30, r30
     68c:	ff 1f       	adc	r31, r31
     68e:	21 e0       	ldi	r18, 0x01	; 1
     690:	30 e0       	ldi	r19, 0x00	; 0
     692:	2c 0f       	add	r18, r28
     694:	3d 1f       	adc	r19, r29
     696:	e2 0f       	add	r30, r18
     698:	f3 1f       	adc	r31, r19
     69a:	97 8f       	std	Z+31, r25	; 0x1f
     69c:	86 8f       	std	Z+30, r24	; 0x1e
     69e:	3f ef       	ldi	r19, 0xFF	; 255
     6a0:	e3 1a       	sub	r14, r19
     6a2:	f3 0a       	sbc	r15, r19
     6a4:	89 2b       	or	r24, r25
     6a6:	59 f7       	brne	.-42     	; 0x67e <carLeavingPark+0x84>
     6a8:	ef 8c       	ldd	r14, Y+31	; 0x1f
     6aa:	f8 a0       	ldd	r15, Y+32	; 0x20
     6ac:	ce 01       	movw	r24, r28
     6ae:	01 96       	adiw	r24, 0x01	; 1
     6b0:	53 dd       	rcall	.-1370   	; 0x158 <removeTrailingNulls>
     6b2:	b7 01       	movw	r22, r14
     6b4:	68 d5       	rcall	.+2768   	; 0x1186 <strcmp>
     6b6:	89 2b       	or	r24, r25
     6b8:	69 f5       	brne	.+90     	; 0x714 <carLeavingPark+0x11a>
     6ba:	80 91 e9 06 	lds	r24, 0x06E9	; 0x8006e9 <countNumberPlates>
     6be:	90 91 ea 06 	lds	r25, 0x06EA	; 0x8006ea <countNumberPlates+0x1>
     6c2:	01 97       	sbiw	r24, 0x01	; 1
     6c4:	90 93 ea 06 	sts	0x06EA, r25	; 0x8006ea <countNumberPlates+0x1>
     6c8:	80 93 e9 06 	sts	0x06E9, r24	; 0x8006e9 <countNumberPlates>
     6cc:	b8 01       	movw	r22, r16
     6ce:	61 5f       	subi	r22, 0xF1	; 241
     6d0:	7f 4f       	sbci	r23, 0xFF	; 255
     6d2:	c8 01       	movw	r24, r16
     6d4:	50 df       	rcall	.-352    	; 0x576 <clearEEPROMMemoryRange>
     6d6:	2b dd       	rcall	.-1450   	; 0x12e <getChildCount>
     6d8:	8c 01       	movw	r16, r24
     6da:	e9 a0       	ldd	r14, Y+33	; 0x21
     6dc:	fa a0       	ldd	r15, Y+34	; 0x22
     6de:	c7 01       	movw	r24, r14
     6e0:	32 d5       	rcall	.+2660   	; 0x1146 <atoi>
     6e2:	98 01       	movw	r18, r16
     6e4:	28 1b       	sub	r18, r24
     6e6:	39 0b       	sbc	r19, r25
     6e8:	c9 01       	movw	r24, r18
     6ea:	65 df       	rcall	.-310    	; 0x5b6 <updateChildrenInParkCount>
     6ec:	27 dd       	rcall	.-1458   	; 0x13c <getAdultCount>
     6ee:	6c 01       	movw	r12, r24
     6f0:	0b a1       	ldd	r16, Y+35	; 0x23
     6f2:	1c a1       	ldd	r17, Y+36	; 0x24
     6f4:	c8 01       	movw	r24, r16
     6f6:	27 d5       	rcall	.+2638   	; 0x1146 <atoi>
     6f8:	96 01       	movw	r18, r12
     6fa:	28 1b       	sub	r18, r24
     6fc:	39 0b       	sbc	r19, r25
     6fe:	c9 01       	movw	r24, r18
     700:	62 df       	rcall	.-316    	; 0x5c6 <updateAdultsInParkCount>
     702:	c7 01       	movw	r24, r14
     704:	20 d5       	rcall	.+2624   	; 0x1146 <atoi>
     706:	7c 01       	movw	r14, r24
     708:	c8 01       	movw	r24, r16
     70a:	1d d5       	rcall	.+2618   	; 0x1146 <atoi>
     70c:	8e 0d       	add	r24, r14
     70e:	9f 1d       	adc	r25, r15
     710:	62 df       	rcall	.-316    	; 0x5d6 <updateTotalPeopleInParkCount>
     712:	0c c0       	rjmp	.+24     	; 0x72c <carLeavingPark+0x132>
     714:	84 e0       	ldi	r24, 0x04	; 4
     716:	93 e0       	ldi	r25, 0x03	; 3
     718:	44 dd       	rcall	.-1400   	; 0x1a2 <USART_Transmit>
     71a:	ce 01       	movw	r24, r28
     71c:	01 96       	adiw	r24, 0x01	; 1
     71e:	41 dd       	rcall	.-1406   	; 0x1a2 <USART_Transmit>
     720:	89 e2       	ldi	r24, 0x29	; 41
     722:	93 e0       	ldi	r25, 0x03	; 3
     724:	3e dd       	rcall	.-1412   	; 0x1a2 <USART_Transmit>
     726:	8b e2       	ldi	r24, 0x2B	; 43
     728:	94 e0       	ldi	r25, 0x04	; 4
     72a:	3b dd       	rcall	.-1418   	; 0x1a2 <USART_Transmit>
     72c:	a4 96       	adiw	r28, 0x24	; 36
     72e:	0f b6       	in	r0, 0x3f	; 63
     730:	f8 94       	cli
     732:	de bf       	out	0x3e, r29	; 62
     734:	0f be       	out	0x3f, r0	; 63
     736:	cd bf       	out	0x3d, r28	; 61
     738:	df 91       	pop	r29
     73a:	cf 91       	pop	r28
     73c:	1f 91       	pop	r17
     73e:	0f 91       	pop	r16
     740:	ff 90       	pop	r15
     742:	ef 90       	pop	r14
     744:	df 90       	pop	r13
     746:	cf 90       	pop	r12
     748:	08 95       	ret

0000074a <saveCar>:
     74a:	cf 92       	push	r12
     74c:	df 92       	push	r13
     74e:	ef 92       	push	r14
     750:	ff 92       	push	r15
     752:	0f 93       	push	r16
     754:	1f 93       	push	r17
     756:	cf 93       	push	r28
     758:	df 93       	push	r29
     75a:	cd b7       	in	r28, 0x3d	; 61
     75c:	de b7       	in	r29, 0x3e	; 62
     75e:	2f 97       	sbiw	r28, 0x0f	; 15
     760:	0f b6       	in	r0, 0x3f	; 63
     762:	f8 94       	cli
     764:	de bf       	out	0x3e, r29	; 62
     766:	0f be       	out	0x3f, r0	; 63
     768:	cd bf       	out	0x3d, r28	; 61
     76a:	7b 01       	movw	r14, r22
     76c:	8a 01       	movw	r16, r20
     76e:	1f 93       	push	r17
     770:	4f 93       	push	r20
     772:	ff 92       	push	r15
     774:	6f 93       	push	r22
     776:	9f 93       	push	r25
     778:	8f 93       	push	r24
     77a:	8c e3       	ldi	r24, 0x3C	; 60
     77c:	93 e0       	ldi	r25, 0x03	; 3
     77e:	9f 93       	push	r25
     780:	8f 93       	push	r24
     782:	ce 01       	movw	r24, r28
     784:	01 96       	adiw	r24, 0x01	; 1
     786:	6c 01       	movw	r12, r24
     788:	9f 93       	push	r25
     78a:	8f 93       	push	r24
     78c:	8a d5       	rcall	.+2836   	; 0x12a2 <sprintf>
     78e:	c6 01       	movw	r24, r12
     790:	28 de       	rcall	.-944    	; 0x3e2 <saveCarInfo>
     792:	cd dc       	rcall	.-1638   	; 0x12e <getChildCount>
     794:	8e 0d       	add	r24, r14
     796:	9f 1d       	adc	r25, r15
     798:	0e df       	rcall	.-484    	; 0x5b6 <updateChildrenInParkCount>
     79a:	d0 dc       	rcall	.-1632   	; 0x13c <getAdultCount>
     79c:	80 0f       	add	r24, r16
     79e:	91 1f       	adc	r25, r17
     7a0:	12 df       	rcall	.-476    	; 0x5c6 <updateAdultsInParkCount>
     7a2:	d3 dc       	rcall	.-1626   	; 0x14a <getTotalCount>
     7a4:	80 0f       	add	r24, r16
     7a6:	91 1f       	adc	r25, r17
     7a8:	8e 0d       	add	r24, r14
     7aa:	9f 1d       	adc	r25, r15
     7ac:	14 df       	rcall	.-472    	; 0x5d6 <updateTotalPeopleInParkCount>
     7ae:	0f b6       	in	r0, 0x3f	; 63
     7b0:	f8 94       	cli
     7b2:	de bf       	out	0x3e, r29	; 62
     7b4:	0f be       	out	0x3f, r0	; 63
     7b6:	cd bf       	out	0x3d, r28	; 61
     7b8:	2f 96       	adiw	r28, 0x0f	; 15
     7ba:	0f b6       	in	r0, 0x3f	; 63
     7bc:	f8 94       	cli
     7be:	de bf       	out	0x3e, r29	; 62
     7c0:	0f be       	out	0x3f, r0	; 63
     7c2:	cd bf       	out	0x3d, r28	; 61
     7c4:	df 91       	pop	r29
     7c6:	cf 91       	pop	r28
     7c8:	1f 91       	pop	r17
     7ca:	0f 91       	pop	r16
     7cc:	ff 90       	pop	r15
     7ce:	ef 90       	pop	r14
     7d0:	df 90       	pop	r13
     7d2:	cf 90       	pop	r12
     7d4:	08 95       	ret

000007d6 <latch_lcd_fridge>:
     7d6:	84 b3       	in	r24, 0x14	; 20
     7d8:	88 60       	ori	r24, 0x08	; 8
     7da:	84 bb       	out	0x14, r24	; 20
     7dc:	89 ef       	ldi	r24, 0xF9	; 249
     7de:	90 e0       	ldi	r25, 0x00	; 0
     7e0:	01 97       	sbiw	r24, 0x01	; 1
     7e2:	f1 f7       	brne	.-4      	; 0x7e0 <latch_lcd_fridge+0xa>
     7e4:	00 c0       	rjmp	.+0      	; 0x7e6 <latch_lcd_fridge+0x10>
     7e6:	00 00       	nop
     7e8:	84 b3       	in	r24, 0x14	; 20
     7ea:	87 7f       	andi	r24, 0xF7	; 247
     7ec:	84 bb       	out	0x14, r24	; 20
     7ee:	89 ef       	ldi	r24, 0xF9	; 249
     7f0:	90 e0       	ldi	r25, 0x00	; 0
     7f2:	01 97       	sbiw	r24, 0x01	; 1
     7f4:	f1 f7       	brne	.-4      	; 0x7f2 <latch_lcd_fridge+0x1c>
     7f6:	00 c0       	rjmp	.+0      	; 0x7f8 <latch_lcd_fridge+0x22>
     7f8:	00 00       	nop
     7fa:	08 95       	ret

000007fc <latch_lcd_gate>:
     7fc:	82 b1       	in	r24, 0x02	; 2
     7fe:	88 60       	ori	r24, 0x08	; 8
     800:	82 b9       	out	0x02, r24	; 2
     802:	89 ef       	ldi	r24, 0xF9	; 249
     804:	90 e0       	ldi	r25, 0x00	; 0
     806:	01 97       	sbiw	r24, 0x01	; 1
     808:	f1 f7       	brne	.-4      	; 0x806 <latch_lcd_gate+0xa>
     80a:	00 c0       	rjmp	.+0      	; 0x80c <latch_lcd_gate+0x10>
     80c:	00 00       	nop
     80e:	82 b1       	in	r24, 0x02	; 2
     810:	87 7f       	andi	r24, 0xF7	; 247
     812:	82 b9       	out	0x02, r24	; 2
     814:	89 ef       	ldi	r24, 0xF9	; 249
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	01 97       	sbiw	r24, 0x01	; 1
     81a:	f1 f7       	brne	.-4      	; 0x818 <latch_lcd_gate+0x1c>
     81c:	00 c0       	rjmp	.+0      	; 0x81e <latch_lcd_gate+0x22>
     81e:	00 00       	nop
     820:	08 95       	ret

00000822 <lcd_data_fridge>:
     822:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x7e0102>
     826:	84 b3       	in	r24, 0x14	; 20
     828:	82 60       	ori	r24, 0x02	; 2
     82a:	84 bb       	out	0x14, r24	; 20
     82c:	84 b3       	in	r24, 0x14	; 20
     82e:	8b 7f       	andi	r24, 0xFB	; 251
     830:	84 bb       	out	0x14, r24	; 20
     832:	d1 cf       	rjmp	.-94     	; 0x7d6 <latch_lcd_fridge>
     834:	08 95       	ret

00000836 <lcd_data_gate>:
     836:	81 bb       	out	0x11, r24	; 17
     838:	82 b1       	in	r24, 0x02	; 2
     83a:	82 60       	ori	r24, 0x02	; 2
     83c:	82 b9       	out	0x02, r24	; 2
     83e:	82 b1       	in	r24, 0x02	; 2
     840:	8b 7f       	andi	r24, 0xFB	; 251
     842:	82 b9       	out	0x02, r24	; 2
     844:	db cf       	rjmp	.-74     	; 0x7fc <latch_lcd_gate>
     846:	08 95       	ret

00000848 <lcd_command_fridge>:
     848:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x7e0102>
     84c:	84 b3       	in	r24, 0x14	; 20
     84e:	8d 7f       	andi	r24, 0xFD	; 253
     850:	84 bb       	out	0x14, r24	; 20
     852:	84 b3       	in	r24, 0x14	; 20
     854:	8b 7f       	andi	r24, 0xFB	; 251
     856:	84 bb       	out	0x14, r24	; 20
     858:	be cf       	rjmp	.-132    	; 0x7d6 <latch_lcd_fridge>
     85a:	08 95       	ret

0000085c <lcd_command_gate>:
     85c:	81 bb       	out	0x11, r24	; 17
     85e:	82 b1       	in	r24, 0x02	; 2
     860:	8d 7f       	andi	r24, 0xFD	; 253
     862:	82 b9       	out	0x02, r24	; 2
     864:	82 b1       	in	r24, 0x02	; 2
     866:	8b 7f       	andi	r24, 0xFB	; 251
     868:	82 b9       	out	0x02, r24	; 2
     86a:	c8 cf       	rjmp	.-112    	; 0x7fc <latch_lcd_gate>
     86c:	08 95       	ret

0000086e <lcd_init_fridge>:
     86e:	8f e0       	ldi	r24, 0x0F	; 15
     870:	eb df       	rcall	.-42     	; 0x848 <lcd_command_fridge>
     872:	8f e3       	ldi	r24, 0x3F	; 63
     874:	e9 df       	rcall	.-46     	; 0x848 <lcd_command_fridge>
     876:	81 e0       	ldi	r24, 0x01	; 1
     878:	e7 cf       	rjmp	.-50     	; 0x848 <lcd_command_fridge>
     87a:	08 95       	ret

0000087c <lcd_init_gate>:
     87c:	8f e0       	ldi	r24, 0x0F	; 15
     87e:	ee df       	rcall	.-36     	; 0x85c <lcd_command_gate>
     880:	8f e3       	ldi	r24, 0x3F	; 63
     882:	ec df       	rcall	.-40     	; 0x85c <lcd_command_gate>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	ea cf       	rjmp	.-44     	; 0x85c <lcd_command_gate>
     888:	08 95       	ret

0000088a <lcd_print_fridge>:
     88a:	ef 92       	push	r14
     88c:	ff 92       	push	r15
     88e:	0f 93       	push	r16
     890:	1f 93       	push	r17
     892:	cf 93       	push	r28
     894:	df 93       	push	r29
     896:	7c 01       	movw	r14, r24
     898:	81 e0       	ldi	r24, 0x01	; 1
     89a:	d6 df       	rcall	.-84     	; 0x848 <lcd_command_fridge>
     89c:	f7 01       	movw	r30, r14
     89e:	01 90       	ld	r0, Z+
     8a0:	00 20       	and	r0, r0
     8a2:	e9 f7       	brne	.-6      	; 0x89e <lcd_print_fridge+0x14>
     8a4:	31 97       	sbiw	r30, 0x01	; 1
     8a6:	8f 01       	movw	r16, r30
     8a8:	0e 19       	sub	r16, r14
     8aa:	1f 09       	sbc	r17, r15
     8ac:	c0 e0       	ldi	r28, 0x00	; 0
     8ae:	d0 e0       	ldi	r29, 0x00	; 0
     8b0:	06 c0       	rjmp	.+12     	; 0x8be <lcd_print_fridge+0x34>
     8b2:	f7 01       	movw	r30, r14
     8b4:	ec 0f       	add	r30, r28
     8b6:	fd 1f       	adc	r31, r29
     8b8:	80 81       	ld	r24, Z
     8ba:	b3 df       	rcall	.-154    	; 0x822 <lcd_data_fridge>
     8bc:	21 96       	adiw	r28, 0x01	; 1
     8be:	c0 17       	cp	r28, r16
     8c0:	d1 07       	cpc	r29, r17
     8c2:	bc f3       	brlt	.-18     	; 0x8b2 <lcd_print_fridge+0x28>
     8c4:	df 91       	pop	r29
     8c6:	cf 91       	pop	r28
     8c8:	1f 91       	pop	r17
     8ca:	0f 91       	pop	r16
     8cc:	ff 90       	pop	r15
     8ce:	ef 90       	pop	r14
     8d0:	08 95       	ret

000008d2 <lcd_print_fridge_no_clear>:
     8d2:	ef 92       	push	r14
     8d4:	ff 92       	push	r15
     8d6:	0f 93       	push	r16
     8d8:	1f 93       	push	r17
     8da:	cf 93       	push	r28
     8dc:	df 93       	push	r29
     8de:	7c 01       	movw	r14, r24
     8e0:	fc 01       	movw	r30, r24
     8e2:	01 90       	ld	r0, Z+
     8e4:	00 20       	and	r0, r0
     8e6:	e9 f7       	brne	.-6      	; 0x8e2 <lcd_print_fridge_no_clear+0x10>
     8e8:	31 97       	sbiw	r30, 0x01	; 1
     8ea:	8f 01       	movw	r16, r30
     8ec:	08 1b       	sub	r16, r24
     8ee:	19 0b       	sbc	r17, r25
     8f0:	c0 e0       	ldi	r28, 0x00	; 0
     8f2:	d0 e0       	ldi	r29, 0x00	; 0
     8f4:	06 c0       	rjmp	.+12     	; 0x902 <lcd_print_fridge_no_clear+0x30>
     8f6:	f7 01       	movw	r30, r14
     8f8:	ec 0f       	add	r30, r28
     8fa:	fd 1f       	adc	r31, r29
     8fc:	80 81       	ld	r24, Z
     8fe:	91 df       	rcall	.-222    	; 0x822 <lcd_data_fridge>
     900:	21 96       	adiw	r28, 0x01	; 1
     902:	c0 17       	cp	r28, r16
     904:	d1 07       	cpc	r29, r17
     906:	bc f3       	brlt	.-18     	; 0x8f6 <lcd_print_fridge_no_clear+0x24>
     908:	df 91       	pop	r29
     90a:	cf 91       	pop	r28
     90c:	1f 91       	pop	r17
     90e:	0f 91       	pop	r16
     910:	ff 90       	pop	r15
     912:	ef 90       	pop	r14
     914:	08 95       	ret

00000916 <lcd_print_gate>:
     916:	ef 92       	push	r14
     918:	ff 92       	push	r15
     91a:	0f 93       	push	r16
     91c:	1f 93       	push	r17
     91e:	cf 93       	push	r28
     920:	df 93       	push	r29
     922:	7c 01       	movw	r14, r24
     924:	81 e0       	ldi	r24, 0x01	; 1
     926:	9a df       	rcall	.-204    	; 0x85c <lcd_command_gate>
     928:	f7 01       	movw	r30, r14
     92a:	01 90       	ld	r0, Z+
     92c:	00 20       	and	r0, r0
     92e:	e9 f7       	brne	.-6      	; 0x92a <lcd_print_gate+0x14>
     930:	31 97       	sbiw	r30, 0x01	; 1
     932:	8f 01       	movw	r16, r30
     934:	0e 19       	sub	r16, r14
     936:	1f 09       	sbc	r17, r15
     938:	c0 e0       	ldi	r28, 0x00	; 0
     93a:	d0 e0       	ldi	r29, 0x00	; 0
     93c:	06 c0       	rjmp	.+12     	; 0x94a <lcd_print_gate+0x34>
     93e:	f7 01       	movw	r30, r14
     940:	ec 0f       	add	r30, r28
     942:	fd 1f       	adc	r31, r29
     944:	80 81       	ld	r24, Z
     946:	77 df       	rcall	.-274    	; 0x836 <lcd_data_gate>
     948:	21 96       	adiw	r28, 0x01	; 1
     94a:	c0 17       	cp	r28, r16
     94c:	d1 07       	cpc	r29, r17
     94e:	bc f3       	brlt	.-18     	; 0x93e <lcd_print_gate+0x28>
     950:	df 91       	pop	r29
     952:	cf 91       	pop	r28
     954:	1f 91       	pop	r17
     956:	0f 91       	pop	r16
     958:	ff 90       	pop	r15
     95a:	ef 90       	pop	r14
     95c:	08 95       	ret

0000095e <bottle_keypad>:
	}
}

int bottle_keypad()
{
	PORTL = 0b11111011;
     95e:	8b ef       	ldi	r24, 0xFB	; 251
     960:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7e010b>
	if ((PINL & 0x8) == 0)
     964:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7e0109>
     968:	83 fd       	sbrc	r24, 3
     96a:	07 c0       	rjmp	.+14     	; 0x97a <bottle_keypad+0x1c>
	{
		bottleNumber = 1;
     96c:	81 e0       	ldi	r24, 0x01	; 1
     96e:	90 e0       	ldi	r25, 0x00	; 0
     970:	90 93 02 07 	sts	0x0702, r25	; 0x800702 <bottleNumber+0x1>
     974:	80 93 01 07 	sts	0x0701, r24	; 0x800701 <bottleNumber>
     978:	15 c0       	rjmp	.+42     	; 0x9a4 <bottle_keypad+0x46>
	}
	else if ((PINL & 0x10) == 0)
     97a:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7e0109>
     97e:	84 fd       	sbrc	r24, 4
     980:	07 c0       	rjmp	.+14     	; 0x990 <bottle_keypad+0x32>
	{
		bottleNumber = 4;
     982:	84 e0       	ldi	r24, 0x04	; 4
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	90 93 02 07 	sts	0x0702, r25	; 0x800702 <bottleNumber+0x1>
     98a:	80 93 01 07 	sts	0x0701, r24	; 0x800701 <bottleNumber>
     98e:	0a c0       	rjmp	.+20     	; 0x9a4 <bottle_keypad+0x46>
	}
	else if ((PINL & 0x20) == 0)
     990:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7e0109>
     994:	85 fd       	sbrc	r24, 5
     996:	06 c0       	rjmp	.+12     	; 0x9a4 <bottle_keypad+0x46>
	{
		bottleNumber = 7;
     998:	87 e0       	ldi	r24, 0x07	; 7
     99a:	90 e0       	ldi	r25, 0x00	; 0
     99c:	90 93 02 07 	sts	0x0702, r25	; 0x800702 <bottleNumber+0x1>
     9a0:	80 93 01 07 	sts	0x0701, r24	; 0x800701 <bottleNumber>
	}

	PORTL = 0b11111101; // second column
     9a4:	8d ef       	ldi	r24, 0xFD	; 253
     9a6:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7e010b>
	if ((PINL & 0x8) == 0)
     9aa:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7e0109>
     9ae:	83 fd       	sbrc	r24, 3
     9b0:	07 c0       	rjmp	.+14     	; 0x9c0 <bottle_keypad+0x62>
	{
		bottleNumber = 2;
     9b2:	82 e0       	ldi	r24, 0x02	; 2
     9b4:	90 e0       	ldi	r25, 0x00	; 0
     9b6:	90 93 02 07 	sts	0x0702, r25	; 0x800702 <bottleNumber+0x1>
     9ba:	80 93 01 07 	sts	0x0701, r24	; 0x800701 <bottleNumber>
     9be:	1e c0       	rjmp	.+60     	; 0x9fc <bottle_keypad+0x9e>
	}
	else if ((PINL & 0x10) == 0)
     9c0:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7e0109>
     9c4:	84 fd       	sbrc	r24, 4
     9c6:	07 c0       	rjmp	.+14     	; 0x9d6 <bottle_keypad+0x78>
	{
		bottleNumber = 5;
     9c8:	85 e0       	ldi	r24, 0x05	; 5
     9ca:	90 e0       	ldi	r25, 0x00	; 0
     9cc:	90 93 02 07 	sts	0x0702, r25	; 0x800702 <bottleNumber+0x1>
     9d0:	80 93 01 07 	sts	0x0701, r24	; 0x800701 <bottleNumber>
     9d4:	13 c0       	rjmp	.+38     	; 0x9fc <bottle_keypad+0x9e>
	}
	else if ((PINL & 0x20) == 0)
     9d6:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7e0109>
     9da:	85 fd       	sbrc	r24, 5
     9dc:	07 c0       	rjmp	.+14     	; 0x9ec <bottle_keypad+0x8e>
	{
		bottleNumber = 8;
     9de:	88 e0       	ldi	r24, 0x08	; 8
     9e0:	90 e0       	ldi	r25, 0x00	; 0
     9e2:	90 93 02 07 	sts	0x0702, r25	; 0x800702 <bottleNumber+0x1>
     9e6:	80 93 01 07 	sts	0x0701, r24	; 0x800701 <bottleNumber>
     9ea:	08 c0       	rjmp	.+16     	; 0x9fc <bottle_keypad+0x9e>
	}
	else if ((PINL & 0x40) == 0)
     9ec:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7e0109>
     9f0:	86 fd       	sbrc	r24, 6
     9f2:	04 c0       	rjmp	.+8      	; 0x9fc <bottle_keypad+0x9e>
	{
		bottleNumber = 0;
     9f4:	10 92 02 07 	sts	0x0702, r1	; 0x800702 <bottleNumber+0x1>
     9f8:	10 92 01 07 	sts	0x0701, r1	; 0x800701 <bottleNumber>
	}

	PORTL = 0b11111110;
     9fc:	8e ef       	ldi	r24, 0xFE	; 254
     9fe:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7e010b>
	if ((PINL & 0x8) == 0)
     a02:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7e0109>
     a06:	83 fd       	sbrc	r24, 3
     a08:	07 c0       	rjmp	.+14     	; 0xa18 <bottle_keypad+0xba>
	{
		bottleNumber = 3;
     a0a:	83 e0       	ldi	r24, 0x03	; 3
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	90 93 02 07 	sts	0x0702, r25	; 0x800702 <bottleNumber+0x1>
     a12:	80 93 01 07 	sts	0x0701, r24	; 0x800701 <bottleNumber>
     a16:	15 c0       	rjmp	.+42     	; 0xa42 <bottle_keypad+0xe4>
	}
	else if ((PINL & 0x10) == 0)
     a18:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7e0109>
     a1c:	84 fd       	sbrc	r24, 4
     a1e:	07 c0       	rjmp	.+14     	; 0xa2e <bottle_keypad+0xd0>
	{
		bottleNumber = 6;
     a20:	86 e0       	ldi	r24, 0x06	; 6
     a22:	90 e0       	ldi	r25, 0x00	; 0
     a24:	90 93 02 07 	sts	0x0702, r25	; 0x800702 <bottleNumber+0x1>
     a28:	80 93 01 07 	sts	0x0701, r24	; 0x800701 <bottleNumber>
     a2c:	0a c0       	rjmp	.+20     	; 0xa42 <bottle_keypad+0xe4>
	}
	else if ((PINL & 0x20) == 0)
     a2e:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x7e0109>
     a32:	85 fd       	sbrc	r24, 5
     a34:	06 c0       	rjmp	.+12     	; 0xa42 <bottle_keypad+0xe4>
	{
		bottleNumber = 9;
     a36:	89 e0       	ldi	r24, 0x09	; 9
     a38:	90 e0       	ldi	r25, 0x00	; 0
     a3a:	90 93 02 07 	sts	0x0702, r25	; 0x800702 <bottleNumber+0x1>
     a3e:	80 93 01 07 	sts	0x0701, r24	; 0x800701 <bottleNumber>
	}
	return bottleNumber;
}
     a42:	80 91 01 07 	lds	r24, 0x0701	; 0x800701 <bottleNumber>
     a46:	90 91 02 07 	lds	r25, 0x0702	; 0x800702 <bottleNumber+0x1>
     a4a:	08 95       	ret

00000a4c <MoneySlot>:
	}
	return key;
}

void MoneySlot()
{
     a4c:	cf 92       	push	r12
     a4e:	df 92       	push	r13
     a50:	ef 92       	push	r14
     a52:	ff 92       	push	r15
     a54:	0f 93       	push	r16
     a56:	1f 93       	push	r17
     a58:	cf 93       	push	r28
     a5a:	df 93       	push	r29
     a5c:	cd b7       	in	r28, 0x3d	; 61
     a5e:	de b7       	in	r29, 0x3e	; 62
     a60:	28 97       	sbiw	r28, 0x08	; 8
     a62:	0f b6       	in	r0, 0x3f	; 63
     a64:	f8 94       	cli
     a66:	de bf       	out	0x3e, r29	; 62
     a68:	0f be       	out	0x3f, r0	; 63
     a6a:	cd bf       	out	0x3d, r28	; 61
	lcd_print_fridge("Bottle costs UGX1500");
     a6c:	85 e4       	ldi	r24, 0x45	; 69
     a6e:	93 e0       	ldi	r25, 0x03	; 3
     a70:	0c df       	rcall	.-488    	; 0x88a <lcd_print_fridge>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a72:	2f e3       	ldi	r18, 0x3F	; 63
     a74:	4d e0       	ldi	r20, 0x0D	; 13
     a76:	83 e0       	ldi	r24, 0x03	; 3
     a78:	21 50       	subi	r18, 0x01	; 1
     a7a:	40 40       	sbci	r20, 0x00	; 0
     a7c:	80 40       	sbci	r24, 0x00	; 0
     a7e:	e1 f7       	brne	.-8      	; 0xa78 <MoneySlot+0x2c>
     a80:	00 c0       	rjmp	.+0      	; 0xa82 <MoneySlot+0x36>
     a82:	00 00       	nop
	_delay_ms(1000);

	lcd_print_fridge("Bottles: ");
     a84:	8a e5       	ldi	r24, 0x5A	; 90
     a86:	93 e0       	ldi	r25, 0x03	; 3
     a88:	00 df       	rcall	.-512    	; 0x88a <lcd_print_fridge>
	int bottleNumber = 0;
     a8a:	00 e0       	ldi	r16, 0x00	; 0
	while (bottleNumber == 0)
     a8c:	10 e0       	ldi	r17, 0x00	; 0
	{
		bottleNumber = bottle_keypad();
     a8e:	02 c0       	rjmp	.+4      	; 0xa94 <MoneySlot+0x48>
     a90:	66 df       	rcall	.-308    	; 0x95e <bottle_keypad>
     a92:	8c 01       	movw	r16, r24
	lcd_print_fridge("Bottle costs UGX1500");
	_delay_ms(1000);

	lcd_print_fridge("Bottles: ");
	int bottleNumber = 0;
	while (bottleNumber == 0)
     a94:	01 15       	cp	r16, r1
     a96:	11 05       	cpc	r17, r1
	{
		bottleNumber = bottle_keypad();
	}
	lcd_data_fridge((char)(bottleNumber + '0'));
     a98:	d9 f3       	breq	.-10     	; 0xa90 <MoneySlot+0x44>
     a9a:	80 e3       	ldi	r24, 0x30	; 48
     a9c:	80 0f       	add	r24, r16
     a9e:	c1 de       	rcall	.-638    	; 0x822 <lcd_data_fridge>
     aa0:	9f e9       	ldi	r25, 0x9F	; 159
     aa2:	26 e8       	ldi	r18, 0x86	; 134
     aa4:	41 e0       	ldi	r20, 0x01	; 1
     aa6:	91 50       	subi	r25, 0x01	; 1
     aa8:	20 40       	sbci	r18, 0x00	; 0
     aaa:	40 40       	sbci	r20, 0x00	; 0
     aac:	e1 f7       	brne	.-8      	; 0xaa6 <MoneySlot+0x5a>
     aae:	00 c0       	rjmp	.+0      	; 0xab0 <MoneySlot+0x64>
     ab0:	00 00       	nop
	_delay_ms(500);

	int cash = bottleNumber * 1500;
     ab2:	8c ed       	ldi	r24, 0xDC	; 220
     ab4:	95 e0       	ldi	r25, 0x05	; 5
     ab6:	08 9f       	mul	r16, r24
     ab8:	70 01       	movw	r14, r0
     aba:	09 9f       	mul	r16, r25
     abc:	f0 0c       	add	r15, r0
     abe:	18 9f       	mul	r17, r24
     ac0:	f0 0c       	add	r15, r0
     ac2:	11 24       	eor	r1, r1
	char bottleCash[8];
	sprintf(bottleCash, "%d", cash);
     ac4:	ff 92       	push	r15
     ac6:	ef 92       	push	r14
     ac8:	82 e4       	ldi	r24, 0x42	; 66
     aca:	93 e0       	ldi	r25, 0x03	; 3
     acc:	9f 93       	push	r25
     ace:	8f 93       	push	r24
     ad0:	ce 01       	movw	r24, r28
     ad2:	01 96       	adiw	r24, 0x01	; 1
     ad4:	6c 01       	movw	r12, r24
     ad6:	9f 93       	push	r25
     ad8:	8f 93       	push	r24

	// _delay_ms(50);
	lcd_print_fridge("Total Cost:");
     ada:	e3 d3       	rcall	.+1990   	; 0x12a2 <sprintf>
     adc:	84 e6       	ldi	r24, 0x64	; 100
     ade:	93 e0       	ldi	r25, 0x03	; 3
	// lcd_command_fridge(0xC5, 1); // padding for the LCD
	lcd_print_fridge_no_clear(bottleCash);
     ae0:	d4 de       	rcall	.-600    	; 0x88a <lcd_print_fridge>
     ae2:	c6 01       	movw	r24, r12
	// lcd_command(0xCA, 1);
	// lcd_print("UGX.", 1);
	// _delay_ms(50);

	// lcd_command(0x90, 1);
	lcd_print_fridge("Press 9:Accept");
     ae4:	f6 de       	rcall	.-532    	; 0x8d2 <lcd_print_fridge_no_clear>
     ae6:	80 e7       	ldi	r24, 0x70	; 112
     ae8:	93 e0       	ldi	r25, 0x03	; 3
	lcd_command_fridge(0xD0);
     aea:	cf de       	rcall	.-610    	; 0x88a <lcd_print_fridge>
     aec:	80 ed       	ldi	r24, 0xD0	; 208
     aee:	ac de       	rcall	.-680    	; 0x848 <lcd_command_fridge>
	lcd_print_fridge_no_clear("Press 0: Quit");
     af0:	8f e7       	ldi	r24, 0x7F	; 127
     af2:	93 e0       	ldi	r25, 0x03	; 3
     af4:	ee de       	rcall	.-548    	; 0x8d2 <lcd_print_fridge_no_clear>

	int choice = 0;
	while (choice == 0)
     af6:	0f 90       	pop	r0
     af8:	0f 90       	pop	r0
     afa:	0f 90       	pop	r0
     afc:	0f 90       	pop	r0
     afe:	0f 90       	pop	r0
     b00:	0f 90       	pop	r0
     b02:	7f c0       	rjmp	.+254    	; 0xc02 <MoneySlot+0x1b6>

		if (choice == 9)
		{
			// lcd_command_fridge(0x01, 1);
			// lcd_command_fridge(0x80, 1);
			lcd_print_fridge("Accepted.");
     b04:	8d e8       	ldi	r24, 0x8D	; 141
     b06:	93 e0       	ldi	r25, 0x03	; 3
     b08:	c0 de       	rcall	.-640    	; 0x88a <lcd_print_fridge>
     b0a:	20 e0       	ldi	r18, 0x00	; 0
			for (int i = 0; i < 3; i++) // motor - open money slot
     b0c:	30 e0       	ldi	r19, 0x00	; 0
     b0e:	1c c0       	rjmp	.+56     	; 0xb48 <MoneySlot+0xfc>
     b10:	e8 e0       	ldi	r30, 0x08	; 8
			{
				PORTK |= (1 << 0);
     b12:	f1 e0       	ldi	r31, 0x01	; 1
     b14:	80 81       	ld	r24, Z
     b16:	81 60       	ori	r24, 0x01	; 1
     b18:	80 83       	st	Z, r24
     b1a:	9f e3       	ldi	r25, 0x3F	; 63
     b1c:	4d e0       	ldi	r20, 0x0D	; 13
     b1e:	83 e0       	ldi	r24, 0x03	; 3
     b20:	91 50       	subi	r25, 0x01	; 1
     b22:	40 40       	sbci	r20, 0x00	; 0
     b24:	80 40       	sbci	r24, 0x00	; 0
     b26:	e1 f7       	brne	.-8      	; 0xb20 <MoneySlot+0xd4>
     b28:	00 c0       	rjmp	.+0      	; 0xb2a <MoneySlot+0xde>
     b2a:	00 00       	nop
     b2c:	80 81       	ld	r24, Z
				_delay_ms(1000);
				PORTK &= ~(1 << 0);
     b2e:	8e 7f       	andi	r24, 0xFE	; 254
     b30:	80 83       	st	Z, r24
     b32:	9f e3       	ldi	r25, 0x3F	; 63
     b34:	4d e0       	ldi	r20, 0x0D	; 13
     b36:	83 e0       	ldi	r24, 0x03	; 3
     b38:	91 50       	subi	r25, 0x01	; 1
     b3a:	40 40       	sbci	r20, 0x00	; 0
     b3c:	80 40       	sbci	r24, 0x00	; 0
     b3e:	e1 f7       	brne	.-8      	; 0xb38 <MoneySlot+0xec>
     b40:	00 c0       	rjmp	.+0      	; 0xb42 <MoneySlot+0xf6>
     b42:	00 00       	nop
     b44:	2f 5f       	subi	r18, 0xFF	; 255
		if (choice == 9)
		{
			// lcd_command_fridge(0x01, 1);
			// lcd_command_fridge(0x80, 1);
			lcd_print_fridge("Accepted.");
			for (int i = 0; i < 3; i++) // motor - open money slot
     b46:	3f 4f       	sbci	r19, 0xFF	; 255
     b48:	23 30       	cpi	r18, 0x03	; 3
     b4a:	31 05       	cpc	r19, r1
     b4c:	0c f3       	brlt	.-62     	; 0xb10 <MoneySlot+0xc4>
     b4e:	9f e7       	ldi	r25, 0x7F	; 127
     b50:	2a e1       	ldi	r18, 0x1A	; 26
     b52:	46 e0       	ldi	r20, 0x06	; 6
     b54:	91 50       	subi	r25, 0x01	; 1
     b56:	20 40       	sbci	r18, 0x00	; 0
     b58:	40 40       	sbci	r20, 0x00	; 0
     b5a:	e1 f7       	brne	.-8      	; 0xb54 <MoneySlot+0x108>
     b5c:	00 c0       	rjmp	.+0      	; 0xb5e <MoneySlot+0x112>
     b5e:	00 00       	nop
     b60:	20 e0       	ldi	r18, 0x00	; 0
			}

			_delay_ms(2000);

			// dispense bottle
			for (int b = 0; b < bottleNumber; b++)
     b62:	30 e0       	ldi	r19, 0x00	; 0
     b64:	1c c0       	rjmp	.+56     	; 0xb9e <MoneySlot+0x152>
     b66:	e8 e0       	ldi	r30, 0x08	; 8
			{
				PORTK |= (1 << 1);
     b68:	f1 e0       	ldi	r31, 0x01	; 1
     b6a:	80 81       	ld	r24, Z
     b6c:	82 60       	ori	r24, 0x02	; 2
     b6e:	80 83       	st	Z, r24
     b70:	8f e7       	ldi	r24, 0x7F	; 127
     b72:	9a e1       	ldi	r25, 0x1A	; 26
     b74:	46 e0       	ldi	r20, 0x06	; 6
     b76:	81 50       	subi	r24, 0x01	; 1
     b78:	90 40       	sbci	r25, 0x00	; 0
     b7a:	40 40       	sbci	r20, 0x00	; 0
     b7c:	e1 f7       	brne	.-8      	; 0xb76 <MoneySlot+0x12a>
     b7e:	00 c0       	rjmp	.+0      	; 0xb80 <MoneySlot+0x134>
     b80:	00 00       	nop
     b82:	80 81       	ld	r24, Z
				_delay_ms(2000);
				PORTK &= ~(1 << 1);
     b84:	8d 7f       	andi	r24, 0xFD	; 253
     b86:	80 83       	st	Z, r24
     b88:	8f e7       	ldi	r24, 0x7F	; 127
     b8a:	9a e1       	ldi	r25, 0x1A	; 26
     b8c:	46 e0       	ldi	r20, 0x06	; 6
     b8e:	81 50       	subi	r24, 0x01	; 1
     b90:	90 40       	sbci	r25, 0x00	; 0
     b92:	40 40       	sbci	r20, 0x00	; 0
     b94:	e1 f7       	brne	.-8      	; 0xb8e <MoneySlot+0x142>
     b96:	00 c0       	rjmp	.+0      	; 0xb98 <MoneySlot+0x14c>
     b98:	00 00       	nop
     b9a:	2f 5f       	subi	r18, 0xFF	; 255
			}

			_delay_ms(2000);

			// dispense bottle
			for (int b = 0; b < bottleNumber; b++)
     b9c:	3f 4f       	sbci	r19, 0xFF	; 255
     b9e:	20 17       	cp	r18, r16
     ba0:	31 07       	cpc	r19, r17
     ba2:	0c f3       	brlt	.-62     	; 0xb66 <MoneySlot+0x11a>
     ba4:	80 91 ed 06 	lds	r24, 0x06ED	; 0x8006ed <waterMoney>
				_delay_ms(2000);
				PORTK &= ~(1 << 1);
				_delay_ms(2000);
			}

			waterMoney += cash;
     ba8:	90 91 ee 06 	lds	r25, 0x06EE	; 0x8006ee <waterMoney+0x1>
     bac:	e8 0e       	add	r14, r24
     bae:	f9 1e       	adc	r15, r25
     bb0:	f0 92 ee 06 	sts	0x06EE, r15	; 0x8006ee <waterMoney+0x1>
     bb4:	e0 92 ed 06 	sts	0x06ED, r14	; 0x8006ed <waterMoney>
			waterBottles -= bottleNumber;
     bb8:	b8 01       	movw	r22, r16
     bba:	11 0f       	add	r17, r17
     bbc:	88 0b       	sbc	r24, r24
     bbe:	99 0b       	sbc	r25, r25
     bc0:	36 d2       	rcall	.+1132   	; 0x102e <__floatsisf>
     bc2:	9b 01       	movw	r18, r22
     bc4:	ac 01       	movw	r20, r24
     bc6:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <waterBottles>
     bca:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <waterBottles+0x1>
     bce:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <waterBottles+0x2>
     bd2:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <waterBottles+0x3>
     bd6:	c4 d1       	rcall	.+904    	; 0xf60 <__subsf3>
     bd8:	60 93 01 02 	sts	0x0201, r22	; 0x800201 <waterBottles>
     bdc:	70 93 02 02 	sts	0x0202, r23	; 0x800202 <waterBottles+0x1>
     be0:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <waterBottles+0x2>
     be4:	90 93 04 02 	sts	0x0204, r25	; 0x800204 <waterBottles+0x3>
			return;
		}
		else if (choice == 0)
     be8:	11 c0       	rjmp	.+34     	; 0xc0c <MoneySlot+0x1c0>
     bea:	89 2b       	or	r24, r25
		{
			// lcd_command_fridge(0x01, 1);
			// lcd_command_fridge(0x80, 1);
			lcd_print_fridge("Bye Bye. Thanks.");
     bec:	51 f4       	brne	.+20     	; 0xc02 <MoneySlot+0x1b6>
     bee:	87 e9       	ldi	r24, 0x97	; 151
     bf0:	93 e0       	ldi	r25, 0x03	; 3
     bf2:	4b de       	rcall	.-874    	; 0x88a <lcd_print_fridge>
     bf4:	87 e8       	ldi	r24, 0x87	; 135
     bf6:	93 e1       	ldi	r25, 0x13	; 19
     bf8:	01 97       	sbiw	r24, 0x01	; 1
     bfa:	f1 f7       	brne	.-4      	; 0xbf8 <MoneySlot+0x1ac>
     bfc:	00 c0       	rjmp	.+0      	; 0xbfe <MoneySlot+0x1b2>
     bfe:	00 00       	nop
     c00:	05 c0       	rjmp	.+10     	; 0xc0c <MoneySlot+0x1c0>
	lcd_print_fridge_no_clear("Press 0: Quit");

	int choice = 0;
	while (choice == 0)
	{
		choice = bottle_keypad();
     c02:	ad de       	rcall	.-678    	; 0x95e <bottle_keypad>
     c04:	89 30       	cpi	r24, 0x09	; 9

		if (choice == 9)
     c06:	91 05       	cpc	r25, r1
     c08:	81 f7       	brne	.-32     	; 0xbea <MoneySlot+0x19e>
     c0a:	7c cf       	rjmp	.-264    	; 0xb04 <MoneySlot+0xb8>
     c0c:	28 96       	adiw	r28, 0x08	; 8
			choice = 0; // Reset choice if an invalid key is pressed
		}

		// MoneySlot();
	}
}
     c0e:	0f b6       	in	r0, 0x3f	; 63
     c10:	f8 94       	cli
     c12:	de bf       	out	0x3e, r29	; 62
     c14:	0f be       	out	0x3f, r0	; 63
     c16:	cd bf       	out	0x3d, r28	; 61
     c18:	df 91       	pop	r29
     c1a:	cf 91       	pop	r28
     c1c:	1f 91       	pop	r17
     c1e:	0f 91       	pop	r16
     c20:	ff 90       	pop	r15
     c22:	ef 90       	pop	r14
     c24:	df 90       	pop	r13
     c26:	cf 90       	pop	r12
     c28:	08 95       	ret

00000c2a <handleMenuChoice>:
     c2a:	85 33       	cpi	r24, 0x35	; 53
	USART_Transmit("\r\n");
}

void handleMenuChoice(int choice)
{
	switch (choice)
     c2c:	91 05       	cpc	r25, r1
     c2e:	09 f4       	brne	.+2      	; 0xc32 <handleMenuChoice+0x8>
     c30:	af c0       	rjmp	.+350    	; 0xd90 <handleMenuChoice+0x166>
     c32:	84 f4       	brge	.+32     	; 0xc54 <handleMenuChoice+0x2a>
     c34:	82 33       	cpi	r24, 0x32	; 50
     c36:	91 05       	cpc	r25, r1
     c38:	09 f4       	brne	.+2      	; 0xc3c <handleMenuChoice+0x12>
     c3a:	8a c0       	rjmp	.+276    	; 0xd50 <handleMenuChoice+0x126>
     c3c:	1c f4       	brge	.+6      	; 0xc44 <handleMenuChoice+0x1a>
     c3e:	c1 97       	sbiw	r24, 0x31	; 49
     c40:	f9 f0       	breq	.+62     	; 0xc80 <handleMenuChoice+0x56>
     c42:	ce c0       	rjmp	.+412    	; 0xde0 <handleMenuChoice+0x1b6>
     c44:	83 33       	cpi	r24, 0x33	; 51
     c46:	91 05       	cpc	r25, r1
     c48:	09 f4       	brne	.+2      	; 0xc4c <handleMenuChoice+0x22>
     c4a:	9e c0       	rjmp	.+316    	; 0xd88 <handleMenuChoice+0x15e>
     c4c:	c4 97       	sbiw	r24, 0x34	; 52
     c4e:	09 f4       	brne	.+2      	; 0xc52 <handleMenuChoice+0x28>
     c50:	9d c0       	rjmp	.+314    	; 0xd8c <handleMenuChoice+0x162>
     c52:	c6 c0       	rjmp	.+396    	; 0xde0 <handleMenuChoice+0x1b6>
     c54:	88 33       	cpi	r24, 0x38	; 56
     c56:	91 05       	cpc	r25, r1
     c58:	09 f4       	brne	.+2      	; 0xc5c <handleMenuChoice+0x32>
     c5a:	aa c0       	rjmp	.+340    	; 0xdb0 <handleMenuChoice+0x186>
     c5c:	44 f4       	brge	.+16     	; 0xc6e <handleMenuChoice+0x44>
     c5e:	86 33       	cpi	r24, 0x36	; 54
     c60:	91 05       	cpc	r25, r1
     c62:	09 f4       	brne	.+2      	; 0xc66 <handleMenuChoice+0x3c>
     c64:	a1 c0       	rjmp	.+322    	; 0xda8 <handleMenuChoice+0x17e>
     c66:	c7 97       	sbiw	r24, 0x37	; 55
     c68:	09 f4       	brne	.+2      	; 0xc6c <handleMenuChoice+0x42>
     c6a:	a0 c0       	rjmp	.+320    	; 0xdac <handleMenuChoice+0x182>
     c6c:	b9 c0       	rjmp	.+370    	; 0xde0 <handleMenuChoice+0x1b6>
     c6e:	89 33       	cpi	r24, 0x39	; 57
     c70:	91 05       	cpc	r25, r1
     c72:	09 f4       	brne	.+2      	; 0xc76 <handleMenuChoice+0x4c>
     c74:	ad c0       	rjmp	.+346    	; 0xdd0 <handleMenuChoice+0x1a6>
     c76:	80 33       	cpi	r24, 0x30	; 48
     c78:	91 43       	sbci	r25, 0x31	; 49
     c7a:	09 f4       	brne	.+2      	; 0xc7e <handleMenuChoice+0x54>
     c7c:	ab c0       	rjmp	.+342    	; 0xdd4 <handleMenuChoice+0x1aa>
     c7e:	b0 c0       	rjmp	.+352    	; 0xde0 <handleMenuChoice+0x1b6>
	{
	case '1':
		if (isParkFull())
     c80:	9f db       	rcall	.-2242   	; 0x3c0 <isParkFull>
     c82:	88 23       	and	r24, r24
     c84:	21 f0       	breq	.+8      	; 0xc8e <handleMenuChoice+0x64>
		{
			lcd_print_gate("park full");
     c86:	8f ea       	ldi	r24, 0xAF	; 175
     c88:	93 e0       	ldi	r25, 0x03	; 3
     c8a:	45 ce       	rjmp	.-886    	; 0x916 <lcd_print_gate>
			return;
     c8c:	08 95       	ret
		}

		USART_Transmit("Number plate: ");
     c8e:	89 eb       	ldi	r24, 0xB9	; 185
     c90:	93 e0       	ldi	r25, 0x03	; 3
     c92:	87 da       	rcall	.-2802   	; 0x1a2 <USART_Transmit>
		USART_ReceiveString(number_plate, sizeof(number_plate));
     c94:	6a e0       	ldi	r22, 0x0A	; 10
     c96:	70 e0       	ldi	r23, 0x00	; 0
     c98:	83 ef       	ldi	r24, 0xF3	; 243
     c9a:	96 e0       	ldi	r25, 0x06	; 6
		USART_Transmit(" You entered: ");
     c9c:	ea da       	rcall	.-2604   	; 0x272 <USART_ReceiveString>
     c9e:	88 ec       	ldi	r24, 0xC8	; 200
     ca0:	93 e0       	ldi	r25, 0x03	; 3
		USART_Transmit(number_plate);
     ca2:	7f da       	rcall	.-2818   	; 0x1a2 <USART_Transmit>
     ca4:	83 ef       	ldi	r24, 0xF3	; 243
     ca6:	96 e0       	ldi	r25, 0x06	; 6
		USART_Transmit("\r\n");
     ca8:	7c da       	rcall	.-2824   	; 0x1a2 <USART_Transmit>
     caa:	8b e2       	ldi	r24, 0x2B	; 43
     cac:	94 e0       	ldi	r25, 0x04	; 4

		USART_Transmit("Below 10yrs: ");
     cae:	79 da       	rcall	.-2830   	; 0x1a2 <USART_Transmit>
     cb0:	87 ed       	ldi	r24, 0xD7	; 215
     cb2:	93 e0       	ldi	r25, 0x03	; 3
		childCount = USART_ReadInteger();
     cb4:	76 da       	rcall	.-2836   	; 0x1a2 <USART_Transmit>
     cb6:	08 db       	rcall	.-2544   	; 0x2c8 <USART_ReadInteger>
     cb8:	90 93 f2 06 	sts	0x06F2, r25	; 0x8006f2 <childCount+0x1>
     cbc:	80 93 f1 06 	sts	0x06F1, r24	; 0x8006f1 <childCount>
		USART_Transmit(" You entered: ");
     cc0:	88 ec       	ldi	r24, 0xC8	; 200
     cc2:	93 e0       	ldi	r25, 0x03	; 3
		USART_TransmitInt(childCount);
     cc4:	6e da       	rcall	.-2852   	; 0x1a2 <USART_Transmit>
     cc6:	80 91 f1 06 	lds	r24, 0x06F1	; 0x8006f1 <childCount>
     cca:	90 91 f2 06 	lds	r25, 0x06F2	; 0x8006f2 <childCount+0x1>
		USART_Transmit("\r\n");
     cce:	8c da       	rcall	.-2792   	; 0x1e8 <USART_TransmitInt>
     cd0:	8b e2       	ldi	r24, 0x2B	; 43

		USART_Transmit("Above 10yrs: ");
     cd2:	94 e0       	ldi	r25, 0x04	; 4
     cd4:	66 da       	rcall	.-2868   	; 0x1a2 <USART_Transmit>
     cd6:	85 ee       	ldi	r24, 0xE5	; 229
		adultCount = USART_ReadInteger();
     cd8:	93 e0       	ldi	r25, 0x03	; 3
     cda:	63 da       	rcall	.-2874   	; 0x1a2 <USART_Transmit>
     cdc:	f5 da       	rcall	.-2582   	; 0x2c8 <USART_ReadInteger>
     cde:	90 93 f0 06 	sts	0x06F0, r25	; 0x8006f0 <adultCount+0x1>
		USART_Transmit(" You entered: ");
     ce2:	80 93 ef 06 	sts	0x06EF, r24	; 0x8006ef <adultCount>
     ce6:	88 ec       	ldi	r24, 0xC8	; 200
     ce8:	93 e0       	ldi	r25, 0x03	; 3
		USART_TransmitInt(adultCount);
     cea:	5b da       	rcall	.-2890   	; 0x1a2 <USART_Transmit>
     cec:	80 91 ef 06 	lds	r24, 0x06EF	; 0x8006ef <adultCount>
     cf0:	90 91 f0 06 	lds	r25, 0x06F0	; 0x8006f0 <adultCount+0x1>
		USART_Transmit("\r\n");
     cf4:	79 da       	rcall	.-2830   	; 0x1e8 <USART_TransmitInt>
     cf6:	8b e2       	ldi	r24, 0x2B	; 43
     cf8:	94 e0       	ldi	r25, 0x04	; 4

		saveCar(number_plate, childCount, adultCount);
     cfa:	53 da       	rcall	.-2906   	; 0x1a2 <USART_Transmit>
     cfc:	40 91 ef 06 	lds	r20, 0x06EF	; 0x8006ef <adultCount>
     d00:	50 91 f0 06 	lds	r21, 0x06F0	; 0x8006f0 <adultCount+0x1>
     d04:	60 91 f1 06 	lds	r22, 0x06F1	; 0x8006f1 <childCount>
     d08:	70 91 f2 06 	lds	r23, 0x06F2	; 0x8006f2 <childCount+0x1>
     d0c:	83 ef       	ldi	r24, 0xF3	; 243
     d0e:	96 e0       	ldi	r25, 0x06	; 6

		USART_Transmit("Tourists registered successfully. Data stored in EEPROM.\r\n");
     d10:	1c dd       	rcall	.-1480   	; 0x74a <saveCar>
     d12:	83 ef       	ldi	r24, 0xF3	; 243
     d14:	93 e0       	ldi	r25, 0x03	; 3
     d16:	45 da       	rcall	.-2934   	; 0x1a2 <USART_Transmit>

		lcd_print_gate("Car passing.");
     d18:	8e e2       	ldi	r24, 0x2E	; 46
     d1a:	94 e0       	ldi	r25, 0x04	; 4
     d1c:	fc dd       	rcall	.-1032   	; 0x916 <lcd_print_gate>
     d1e:	8f e7       	ldi	r24, 0x7F	; 127
     d20:	9a e1       	ldi	r25, 0x1A	; 26
     d22:	26 e0       	ldi	r18, 0x06	; 6
     d24:	81 50       	subi	r24, 0x01	; 1
     d26:	90 40       	sbci	r25, 0x00	; 0
     d28:	20 40       	sbci	r18, 0x00	; 0
     d2a:	e1 f7       	brne	.-8      	; 0xd24 <handleMenuChoice+0xfa>
     d2c:	00 c0       	rjmp	.+0      	; 0xd2e <handleMenuChoice+0x104>
		_delay_ms(2 * 1000);
		lcd_print_gate("Gate closing");
     d2e:	00 00       	nop
     d30:	8b e3       	ldi	r24, 0x3B	; 59
     d32:	94 e0       	ldi	r25, 0x04	; 4
     d34:	f0 dd       	rcall	.-1056   	; 0x916 <lcd_print_gate>
     d36:	8f eb       	ldi	r24, 0xBF	; 191
     d38:	97 e2       	ldi	r25, 0x27	; 39
     d3a:	29 e0       	ldi	r18, 0x09	; 9
     d3c:	81 50       	subi	r24, 0x01	; 1
		_delay_ms(3 * 1000);
		lcd_print_gate("Queen Elizabeth N.P.");
     d3e:	90 40       	sbci	r25, 0x00	; 0
     d40:	20 40       	sbci	r18, 0x00	; 0
     d42:	e1 f7       	brne	.-8      	; 0xd3c <handleMenuChoice+0x112>

		break;
	case '2':
		USART_Transmit("Tourists in the park:\r\n");
     d44:	00 c0       	rjmp	.+0      	; 0xd46 <handleMenuChoice+0x11c>
     d46:	00 00       	nop

		USART_Transmit("Below 10yrs: ");
     d48:	88 e4       	ldi	r24, 0x48	; 72
     d4a:	94 e0       	ldi	r25, 0x04	; 4
		USART_TransmitInt(getChildCount());
     d4c:	e4 cd       	rjmp	.-1080   	; 0x916 <lcd_print_gate>
     d4e:	08 95       	ret
     d50:	8d e5       	ldi	r24, 0x5D	; 93
		USART_Transmit("\r\n");
     d52:	94 e0       	ldi	r25, 0x04	; 4
     d54:	26 da       	rcall	.-2996   	; 0x1a2 <USART_Transmit>
     d56:	87 ed       	ldi	r24, 0xD7	; 215

		USART_Transmit("Above 10yrs: ");
     d58:	93 e0       	ldi	r25, 0x03	; 3
     d5a:	23 da       	rcall	.-3002   	; 0x1a2 <USART_Transmit>
     d5c:	e8 d9       	rcall	.-3120   	; 0x12e <getChildCount>
		USART_TransmitInt(getAdultCount());
     d5e:	44 da       	rcall	.-2936   	; 0x1e8 <USART_TransmitInt>
     d60:	8b e2       	ldi	r24, 0x2B	; 43
		USART_Transmit("\r\n");
     d62:	94 e0       	ldi	r25, 0x04	; 4
     d64:	1e da       	rcall	.-3012   	; 0x1a2 <USART_Transmit>
     d66:	85 ee       	ldi	r24, 0xE5	; 229

		USART_Transmit("Total: ");
     d68:	93 e0       	ldi	r25, 0x03	; 3
     d6a:	1b da       	rcall	.-3018   	; 0x1a2 <USART_Transmit>
		USART_TransmitInt(getTotalCount());
     d6c:	e7 d9       	rcall	.-3122   	; 0x13c <getAdultCount>
     d6e:	3c da       	rcall	.-2952   	; 0x1e8 <USART_TransmitInt>
     d70:	8b e2       	ldi	r24, 0x2B	; 43
     d72:	94 e0       	ldi	r25, 0x04	; 4
		USART_Transmit("\r\n");
     d74:	16 da       	rcall	.-3028   	; 0x1a2 <USART_Transmit>
     d76:	85 e7       	ldi	r24, 0x75	; 117
     d78:	94 e0       	ldi	r25, 0x04	; 4
		break;
	case '3':
		displayCarsInsidePark(); // still have some issues, but will be back.
     d7a:	13 da       	rcall	.-3034   	; 0x1a2 <USART_Transmit>
		break;
     d7c:	e6 d9       	rcall	.-3124   	; 0x14a <getTotalCount>
	case '4':
		displayMoneyCollected();
     d7e:	34 da       	rcall	.-2968   	; 0x1e8 <USART_TransmitInt>
     d80:	8b e2       	ldi	r24, 0x2B	; 43
		break;
     d82:	94 e0       	ldi	r25, 0x04	; 4
	case '5':
		USART_Transmit("Number of drivers inside the park: ");
     d84:	0e ca       	rjmp	.-3044   	; 0x1a2 <USART_Transmit>
     d86:	08 95       	ret
     d88:	72 cb       	rjmp	.-2332   	; 0x46e <displayCarsInsidePark>
		USART_TransmitInt(countNumberPlates);
     d8a:	08 95       	ret
     d8c:	d0 cb       	rjmp	.-2144   	; 0x52e <displayMoneyCollected>
     d8e:	08 95       	ret
     d90:	8d e7       	ldi	r24, 0x7D	; 125
     d92:	94 e0       	ldi	r25, 0x04	; 4
		USART_Transmit("\r\n");
     d94:	06 da       	rcall	.-3060   	; 0x1a2 <USART_Transmit>
     d96:	80 91 e9 06 	lds	r24, 0x06E9	; 0x8006e9 <countNumberPlates>
     d9a:	90 91 ea 06 	lds	r25, 0x06EA	; 0x8006ea <countNumberPlates+0x1>
		break;
	case '6':
		MoneySlot();
     d9e:	24 da       	rcall	.-3000   	; 0x1e8 <USART_TransmitInt>
     da0:	8b e2       	ldi	r24, 0x2B	; 43
		break;
     da2:	94 e0       	ldi	r25, 0x04	; 4
	case '7':
		replenishFridge();
     da4:	fe c9       	rjmp	.-3076   	; 0x1a2 <USART_Transmit>
     da6:	08 95       	ret
		break;
     da8:	51 ce       	rjmp	.-862    	; 0xa4c <MoneySlot>
	case '8':
		USART_Transmit("Is park full: ");
     daa:	08 95       	ret
     dac:	c7 ca       	rjmp	.-2674   	; 0x33c <replenishFridge>
     dae:	08 95       	ret
     db0:	81 ea       	ldi	r24, 0xA1	; 161
		USART_Transmit(isParkFull() ? "yes" : "no");
     db2:	94 e0       	ldi	r25, 0x04	; 4
     db4:	f6 d9       	rcall	.-3092   	; 0x1a2 <USART_Transmit>
     db6:	04 db       	rcall	.-2552   	; 0x3c0 <isParkFull>
     db8:	88 23       	and	r24, r24
     dba:	19 f0       	breq	.+6      	; 0xdc2 <handleMenuChoice+0x198>
     dbc:	88 ea       	ldi	r24, 0xA8	; 168
     dbe:	93 e0       	ldi	r25, 0x03	; 3
     dc0:	02 c0       	rjmp	.+4      	; 0xdc6 <handleMenuChoice+0x19c>
     dc2:	8c ea       	ldi	r24, 0xAC	; 172
     dc4:	93 e0       	ldi	r25, 0x03	; 3
     dc6:	ed d9       	rcall	.-3110   	; 0x1a2 <USART_Transmit>
		USART_Transmit("\r\n");
     dc8:	8b e2       	ldi	r24, 0x2B	; 43
     dca:	94 e0       	ldi	r25, 0x04	; 4
     dcc:	ea c9       	rjmp	.-3116   	; 0x1a2 <USART_Transmit>
     dce:	08 95       	ret
		break;
     dd0:	14 cc       	rjmp	.-2008   	; 0x5fa <carLeavingPark>
	case '9':
		carLeavingPark();
     dd2:	08 95       	ret
     dd4:	10 92 e8 06 	sts	0x06E8, r1	; 0x8006e8 <loggedIn>
		break;
	case '10':
		loggedIn = false;
     dd8:	80 eb       	ldi	r24, 0xB0	; 176
     dda:	94 e0       	ldi	r25, 0x04	; 4
		USART_Transmit("Logged out.\r\n");
     ddc:	e2 c9       	rjmp	.-3132   	; 0x1a2 <USART_Transmit>
     dde:	08 95       	ret
     de0:	8e eb       	ldi	r24, 0xBE	; 190
     de2:	94 e0       	ldi	r25, 0x04	; 4
		break;
     de4:	de c9       	rjmp	.-3140   	; 0x1a2 <USART_Transmit>
	default:
		USART_Transmit("Invalid choice. Please try again.\n");
     de6:	08 95       	ret

00000de8 <displayMenu>:
     de8:	cf 93       	push	r28
     dea:	df 93       	push	r29
     dec:	cd b7       	in	r28, 0x3d	; 61
     dee:	de b7       	in	r29, 0x3e	; 62
	// 		printf("Invalid password. Replenishment denied.\n");
	// 	}
}

void displayMenu()
{
     df0:	a8 97       	sbiw	r28, 0x28	; 40
     df2:	0f b6       	in	r0, 0x3f	; 63
     df4:	f8 94       	cli
     df6:	de bf       	out	0x3e, r29	; 62
     df8:	0f be       	out	0x3f, r0	; 63
     dfa:	cd bf       	out	0x3d, r28	; 61
	char attendantname[20];
	char password[20];
	char choice;

	USART_Transmit("\t Welcome to Queen Elizabeth National park.\r\n");
     dfc:	81 ee       	ldi	r24, 0xE1	; 225
     dfe:	94 e0       	ldi	r25, 0x04	; 4
     e00:	d0 d9       	rcall	.-3168   	; 0x1a2 <USART_Transmit>
	USART_Transmit("Please Login to continue.\r\n");
     e02:	8f e0       	ldi	r24, 0x0F	; 15
     e04:	95 e0       	ldi	r25, 0x05	; 5
     e06:	cd d9       	rcall	.-3174   	; 0x1a2 <USART_Transmit>
	bool loggedIn = false;
     e08:	10 e0       	ldi	r17, 0x00	; 0

	while (!loggedIn)
     e0a:	26 c0       	rjmp	.+76     	; 0xe58 <displayMenu+0x70>
	{
		USART_Transmit("Enter your username: ");
     e0c:	8b e2       	ldi	r24, 0x2B	; 43
     e0e:	95 e0       	ldi	r25, 0x05	; 5
     e10:	c8 d9       	rcall	.-3184   	; 0x1a2 <USART_Transmit>
		USART_ReceiveString(attendantname, sizeof(attendantname));
     e12:	64 e1       	ldi	r22, 0x14	; 20
     e14:	70 e0       	ldi	r23, 0x00	; 0
     e16:	ce 01       	movw	r24, r28
     e18:	01 96       	adiw	r24, 0x01	; 1
		USART_Transmit("\r\n"); // Print newline to move to the next line
     e1a:	2b da       	rcall	.-2986   	; 0x272 <USART_ReceiveString>
     e1c:	8b e2       	ldi	r24, 0x2B	; 43
     e1e:	94 e0       	ldi	r25, 0x04	; 4
		USART_Transmit("Enter your password: ");
     e20:	c0 d9       	rcall	.-3200   	; 0x1a2 <USART_Transmit>
     e22:	81 e4       	ldi	r24, 0x41	; 65
     e24:	95 e0       	ldi	r25, 0x05	; 5
		USART_ReceiveString(password, sizeof(password));
     e26:	bd d9       	rcall	.-3206   	; 0x1a2 <USART_Transmit>
     e28:	64 e1       	ldi	r22, 0x14	; 20
     e2a:	70 e0       	ldi	r23, 0x00	; 0
     e2c:	ce 01       	movw	r24, r28
     e2e:	45 96       	adiw	r24, 0x15	; 21
		USART_Transmit("\r\n"); // Print newline to move to the next line
     e30:	20 da       	rcall	.-3008   	; 0x272 <USART_ReceiveString>
     e32:	8b e2       	ldi	r24, 0x2B	; 43
     e34:	94 e0       	ldi	r25, 0x04	; 4

		if (checkCredentials(attendantname, password))
     e36:	b5 d9       	rcall	.-3222   	; 0x1a2 <USART_Transmit>
     e38:	be 01       	movw	r22, r28
     e3a:	6b 5e       	subi	r22, 0xEB	; 235
     e3c:	7f 4f       	sbci	r23, 0xFF	; 255
     e3e:	ce 01       	movw	r24, r28
     e40:	01 96       	adiw	r24, 0x01	; 1
     e42:	fe d9       	rcall	.-3076   	; 0x240 <checkCredentials>
		{
			USART_Transmit("Login successful.\r\n");
     e44:	89 2b       	or	r24, r25
     e46:	29 f0       	breq	.+10     	; 0xe52 <displayMenu+0x6a>
     e48:	87 e5       	ldi	r24, 0x57	; 87
			loggedIn = true; // Set loggedIn to true to exit the loop
     e4a:	95 e0       	ldi	r25, 0x05	; 5
     e4c:	aa d9       	rcall	.-3244   	; 0x1a2 <USART_Transmit>
		}
		else
		{
			USART_Transmit("Invalid username or password. Please try again.\r\n");
     e4e:	11 e0       	ldi	r17, 0x01	; 1
     e50:	03 c0       	rjmp	.+6      	; 0xe58 <displayMenu+0x70>
     e52:	8b e6       	ldi	r24, 0x6B	; 107

	USART_Transmit("\t Welcome to Queen Elizabeth National park.\r\n");
	USART_Transmit("Please Login to continue.\r\n");
	bool loggedIn = false;

	while (!loggedIn)
     e54:	95 e0       	ldi	r25, 0x05	; 5
     e56:	a5 d9       	rcall	.-3254   	; 0x1a2 <USART_Transmit>
		}
	}

	do
	{
		USART_Transmit("Choose an option:\r\n");
     e58:	11 23       	and	r17, r17
     e5a:	c1 f2       	breq	.-80     	; 0xe0c <displayMenu+0x24>
     e5c:	8d e9       	ldi	r24, 0x9D	; 157
		USART_Transmit("1. Register Tourists.\r\n");
     e5e:	95 e0       	ldi	r25, 0x05	; 5
     e60:	a0 d9       	rcall	.-3264   	; 0x1a2 <USART_Transmit>
     e62:	81 eb       	ldi	r24, 0xB1	; 177
		USART_Transmit("2. Tourists in the park.\r\n");
     e64:	95 e0       	ldi	r25, 0x05	; 5
     e66:	9d d9       	rcall	.-3270   	; 0x1a2 <USART_Transmit>
     e68:	89 ec       	ldi	r24, 0xC9	; 201
		USART_Transmit("3. Cars in the park.\r\n");
     e6a:	95 e0       	ldi	r25, 0x05	; 5
     e6c:	9a d9       	rcall	.-3276   	; 0x1a2 <USART_Transmit>
     e6e:	84 ee       	ldi	r24, 0xE4	; 228
		USART_Transmit("4. Total money collected by the park.\r\n");
     e70:	95 e0       	ldi	r25, 0x05	; 5
     e72:	97 d9       	rcall	.-3282   	; 0x1a2 <USART_Transmit>
     e74:	8b ef       	ldi	r24, 0xFB	; 251
		USART_Transmit("5. Number of drivers in the park.\r\n");
     e76:	95 e0       	ldi	r25, 0x05	; 5
     e78:	94 d9       	rcall	.-3288   	; 0x1a2 <USART_Transmit>
     e7a:	83 e2       	ldi	r24, 0x23	; 35
		USART_Transmit("6. Number of bottles in the fridge.\r\n");
     e7c:	96 e0       	ldi	r25, 0x06	; 6
     e7e:	91 d9       	rcall	.-3294   	; 0x1a2 <USART_Transmit>
		USART_Transmit("7. Replenish fridge.\r\n");
     e80:	87 e4       	ldi	r24, 0x47	; 71
     e82:	96 e0       	ldi	r25, 0x06	; 6
     e84:	8e d9       	rcall	.-3300   	; 0x1a2 <USART_Transmit>
     e86:	8d e6       	ldi	r24, 0x6D	; 109
		USART_Transmit("8. Check if park is full.\r\n");
     e88:	96 e0       	ldi	r25, 0x06	; 6
     e8a:	8b d9       	rcall	.-3306   	; 0x1a2 <USART_Transmit>
     e8c:	84 e8       	ldi	r24, 0x84	; 132
     e8e:	96 e0       	ldi	r25, 0x06	; 6
		USART_Transmit("9. Car exiting park.\r\n");
     e90:	88 d9       	rcall	.-3312   	; 0x1a2 <USART_Transmit>
     e92:	80 ea       	ldi	r24, 0xA0	; 160
     e94:	96 e0       	ldi	r25, 0x06	; 6
     e96:	85 d9       	rcall	.-3318   	; 0x1a2 <USART_Transmit>
		USART_Transmit("10. Logout.\r\n");
     e98:	87 eb       	ldi	r24, 0xB7	; 183
     e9a:	96 e0       	ldi	r25, 0x06	; 6
     e9c:	82 d9       	rcall	.-3324   	; 0x1a2 <USART_Transmit>
     e9e:	85 ec       	ldi	r24, 0xC5	; 197
		USART_Transmit("Enter an option.\r\n");
     ea0:	96 e0       	ldi	r25, 0x06	; 6
     ea2:	7f d9       	rcall	.-3330   	; 0x1a2 <USART_Transmit>
     ea4:	42 da       	rcall	.-2940   	; 0x32a <getOption>
     ea6:	90 e0       	ldi	r25, 0x00	; 0
		choice = getOption();
     ea8:	c0 de       	rcall	.-640    	; 0xc2a <handleMenuChoice>
     eaa:	d8 cf       	rjmp	.-80     	; 0xe5c <displayMenu+0x74>

00000eac <main>:

		handleMenuChoice(choice);
     eac:	87 e8       	ldi	r24, 0x87	; 135
     eae:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__TEXT_REGION_LENGTH__+0x7e010a>
     eb2:	cf ef       	ldi	r28, 0xFF	; 255
}

int main(void)
{
	DDRL = 0x87;
	DDRH = 0xff; // fridge LCD
     eb4:	c0 93 01 01 	sts	0x0101, r28	; 0x800101 <__TEXT_REGION_LENGTH__+0x7e0101>
	DDRG = 0xff; // fridge LCD
     eb8:	c3 bb       	out	0x13, r28	; 19
	DDRK = 0xff;
     eba:	c0 93 07 01 	sts	0x0107, r28	; 0x800107 <__TEXT_REGION_LENGTH__+0x7e0107>
	DDRF = 0xff; // gate LCD
     ebe:	c0 bb       	out	0x10, r28	; 16
	DDRA = 0xff; // gate LCD
     ec0:	c1 b9       	out	0x01, r28	; 1

	lcd_init_gate();
     ec2:	dc dc       	rcall	.-1608   	; 0x87c <lcd_init_gate>
	lcd_init_fridge();
     ec4:	d4 dc       	rcall	.-1624   	; 0x86e <lcd_init_fridge>

	USART_Init();
     ec6:	61 d9       	rcall	.-3390   	; 0x18a <USART_Init>
     ec8:	8e db       	rcall	.-2276   	; 0x5e6 <initialiseEEPROM>
	initialiseEEPROM();
     eca:	78 94       	sei
     ecc:	8d b3       	in	r24, 0x1d	; 29

	// setup interrupts
	sei();
     ece:	81 60       	ori	r24, 0x01	; 1
	EIMSK |= (1 << INT0);
     ed0:	8d bb       	out	0x1d, r24	; 29
     ed2:	85 b7       	in	r24, 0x35	; 53
     ed4:	82 60       	ori	r24, 0x02	; 2
	MCUCR |= (1 << ISC01);
     ed6:	85 bf       	out	0x35, r24	; 53
     ed8:	1a b8       	out	0x0a, r1	; 10
     eda:	c4 b9       	out	0x04, r28	; 4

	// set data direction registers
	DDRD = 0x00;
     edc:	8b b1       	in	r24, 0x0b	; 11
	DDRB = 0xFF;
     ede:	81 60       	ori	r24, 0x01	; 1

	// Set pull up resistor on incoming car switch
	PORTD |= (1 << PD0);
     ee0:	8b b9       	out	0x0b, r24	; 11
     ee2:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>

	if (resetEEPROM)
     ee6:	88 23       	and	r24, r24
     ee8:	11 f0       	breq	.+4      	; 0xeee <main+0x42>
	{
		resetControllerEEPROM();
     eea:	59 db       	rcall	.-2382   	; 0x59e <resetControllerEEPROM>
     eec:	7c db       	rcall	.-2312   	; 0x5e6 <initialiseEEPROM>
		initialiseEEPROM();
     eee:	7c df       	rcall	.-264    	; 0xde8 <displayMenu>

00000ef0 <__vector_1>:
     ef0:	1f 92       	push	r1
	}

	while (1)
	{
		displayMenu();
     ef2:	0f 92       	push	r0
     ef4:	0f b6       	in	r0, 0x3f	; 63
		MoneySlot();
	}
}

ISR(INT0_vect)
{
     ef6:	0f 92       	push	r0
     ef8:	11 24       	eor	r1, r1
     efa:	0b b6       	in	r0, 0x3b	; 59
     efc:	0f 92       	push	r0
     efe:	2f 93       	push	r18
     f00:	3f 93       	push	r19
     f02:	4f 93       	push	r20
     f04:	5f 93       	push	r21
     f06:	6f 93       	push	r22
     f08:	7f 93       	push	r23
     f0a:	8f 93       	push	r24
     f0c:	9f 93       	push	r25
     f0e:	af 93       	push	r26
     f10:	bf 93       	push	r27
     f12:	ef 93       	push	r30
     f14:	ff 93       	push	r31
	PORTB |= (1 << PB7);
     f16:	85 b1       	in	r24, 0x05	; 5
     f18:	80 68       	ori	r24, 0x80	; 128
     f1a:	85 b9       	out	0x05, r24	; 5
     f1c:	2f e9       	ldi	r18, 0x9F	; 159
     f1e:	86 e8       	ldi	r24, 0x86	; 134
     f20:	91 e0       	ldi	r25, 0x01	; 1
     f22:	21 50       	subi	r18, 0x01	; 1
     f24:	80 40       	sbci	r24, 0x00	; 0
     f26:	90 40       	sbci	r25, 0x00	; 0
     f28:	e1 f7       	brne	.-8      	; 0xf22 <__vector_1+0x32>
     f2a:	00 c0       	rjmp	.+0      	; 0xf2c <__vector_1+0x3c>
     f2c:	00 00       	nop
	_delay_ms(500);
	PORTB &= ~(1 << PB7);
     f2e:	85 b1       	in	r24, 0x05	; 5
     f30:	8f 77       	andi	r24, 0x7F	; 127
     f32:	85 b9       	out	0x05, r24	; 5
	lcd_print_gate("Car at gate.");
     f34:	88 ed       	ldi	r24, 0xD8	; 216
     f36:	96 e0       	ldi	r25, 0x06	; 6
     f38:	ee dc       	rcall	.-1572   	; 0x916 <lcd_print_gate>
}
     f3a:	ff 91       	pop	r31
     f3c:	ef 91       	pop	r30
     f3e:	bf 91       	pop	r27
     f40:	af 91       	pop	r26
     f42:	9f 91       	pop	r25
     f44:	8f 91       	pop	r24
     f46:	7f 91       	pop	r23
     f48:	6f 91       	pop	r22
     f4a:	5f 91       	pop	r21
     f4c:	4f 91       	pop	r20
     f4e:	3f 91       	pop	r19
     f50:	2f 91       	pop	r18
     f52:	0f 90       	pop	r0
     f54:	0b be       	out	0x3b, r0	; 59
     f56:	0f 90       	pop	r0
     f58:	0f be       	out	0x3f, r0	; 63
     f5a:	0f 90       	pop	r0
     f5c:	1f 90       	pop	r1
     f5e:	18 95       	reti

00000f60 <__subsf3>:
     f60:	50 58       	subi	r21, 0x80	; 128

00000f62 <__addsf3>:
     f62:	bb 27       	eor	r27, r27
     f64:	aa 27       	eor	r26, r26
     f66:	0e d0       	rcall	.+28     	; 0xf84 <__addsf3x>
     f68:	b4 c0       	rjmp	.+360    	; 0x10d2 <__fp_round>
     f6a:	a5 d0       	rcall	.+330    	; 0x10b6 <__fp_pscA>
     f6c:	30 f0       	brcs	.+12     	; 0xf7a <__addsf3+0x18>
     f6e:	aa d0       	rcall	.+340    	; 0x10c4 <__fp_pscB>
     f70:	20 f0       	brcs	.+8      	; 0xf7a <__addsf3+0x18>
     f72:	31 f4       	brne	.+12     	; 0xf80 <__addsf3+0x1e>
     f74:	9f 3f       	cpi	r25, 0xFF	; 255
     f76:	11 f4       	brne	.+4      	; 0xf7c <__addsf3+0x1a>
     f78:	1e f4       	brtc	.+6      	; 0xf80 <__addsf3+0x1e>
     f7a:	9a c0       	rjmp	.+308    	; 0x10b0 <__fp_nan>
     f7c:	0e f4       	brtc	.+2      	; 0xf80 <__addsf3+0x1e>
     f7e:	e0 95       	com	r30
     f80:	e7 fb       	bst	r30, 7
     f82:	90 c0       	rjmp	.+288    	; 0x10a4 <__fp_inf>

00000f84 <__addsf3x>:
     f84:	e9 2f       	mov	r30, r25
     f86:	b6 d0       	rcall	.+364    	; 0x10f4 <__fp_split3>
     f88:	80 f3       	brcs	.-32     	; 0xf6a <__addsf3+0x8>
     f8a:	ba 17       	cp	r27, r26
     f8c:	62 07       	cpc	r22, r18
     f8e:	73 07       	cpc	r23, r19
     f90:	84 07       	cpc	r24, r20
     f92:	95 07       	cpc	r25, r21
     f94:	18 f0       	brcs	.+6      	; 0xf9c <__addsf3x+0x18>
     f96:	71 f4       	brne	.+28     	; 0xfb4 <__addsf3x+0x30>
     f98:	9e f5       	brtc	.+102    	; 0x1000 <__EEPROM_REGION_LENGTH__>
     f9a:	ce c0       	rjmp	.+412    	; 0x1138 <__fp_zero>
     f9c:	0e f4       	brtc	.+2      	; 0xfa0 <__addsf3x+0x1c>
     f9e:	e0 95       	com	r30
     fa0:	0b 2e       	mov	r0, r27
     fa2:	ba 2f       	mov	r27, r26
     fa4:	a0 2d       	mov	r26, r0
     fa6:	0b 01       	movw	r0, r22
     fa8:	b9 01       	movw	r22, r18
     faa:	90 01       	movw	r18, r0
     fac:	0c 01       	movw	r0, r24
     fae:	ca 01       	movw	r24, r20
     fb0:	a0 01       	movw	r20, r0
     fb2:	11 24       	eor	r1, r1
     fb4:	ff 27       	eor	r31, r31
     fb6:	59 1b       	sub	r21, r25
     fb8:	99 f0       	breq	.+38     	; 0xfe0 <__addsf3x+0x5c>
     fba:	59 3f       	cpi	r21, 0xF9	; 249
     fbc:	50 f4       	brcc	.+20     	; 0xfd2 <__addsf3x+0x4e>
     fbe:	50 3e       	cpi	r21, 0xE0	; 224
     fc0:	68 f1       	brcs	.+90     	; 0x101c <__EEPROM_REGION_LENGTH__+0x1c>
     fc2:	1a 16       	cp	r1, r26
     fc4:	f0 40       	sbci	r31, 0x00	; 0
     fc6:	a2 2f       	mov	r26, r18
     fc8:	23 2f       	mov	r18, r19
     fca:	34 2f       	mov	r19, r20
     fcc:	44 27       	eor	r20, r20
     fce:	58 5f       	subi	r21, 0xF8	; 248
     fd0:	f3 cf       	rjmp	.-26     	; 0xfb8 <__addsf3x+0x34>
     fd2:	46 95       	lsr	r20
     fd4:	37 95       	ror	r19
     fd6:	27 95       	ror	r18
     fd8:	a7 95       	ror	r26
     fda:	f0 40       	sbci	r31, 0x00	; 0
     fdc:	53 95       	inc	r21
     fde:	c9 f7       	brne	.-14     	; 0xfd2 <__addsf3x+0x4e>
     fe0:	7e f4       	brtc	.+30     	; 0x1000 <__EEPROM_REGION_LENGTH__>
     fe2:	1f 16       	cp	r1, r31
     fe4:	ba 0b       	sbc	r27, r26
     fe6:	62 0b       	sbc	r22, r18
     fe8:	73 0b       	sbc	r23, r19
     fea:	84 0b       	sbc	r24, r20
     fec:	ba f0       	brmi	.+46     	; 0x101c <__EEPROM_REGION_LENGTH__+0x1c>
     fee:	91 50       	subi	r25, 0x01	; 1
     ff0:	a1 f0       	breq	.+40     	; 0x101a <__EEPROM_REGION_LENGTH__+0x1a>
     ff2:	ff 0f       	add	r31, r31
     ff4:	bb 1f       	adc	r27, r27
     ff6:	66 1f       	adc	r22, r22
     ff8:	77 1f       	adc	r23, r23
     ffa:	88 1f       	adc	r24, r24
     ffc:	c2 f7       	brpl	.-16     	; 0xfee <__addsf3x+0x6a>
     ffe:	0e c0       	rjmp	.+28     	; 0x101c <__EEPROM_REGION_LENGTH__+0x1c>
    1000:	ba 0f       	add	r27, r26
    1002:	62 1f       	adc	r22, r18
    1004:	73 1f       	adc	r23, r19
    1006:	84 1f       	adc	r24, r20
    1008:	48 f4       	brcc	.+18     	; 0x101c <__EEPROM_REGION_LENGTH__+0x1c>
    100a:	87 95       	ror	r24
    100c:	77 95       	ror	r23
    100e:	67 95       	ror	r22
    1010:	b7 95       	ror	r27
    1012:	f7 95       	ror	r31
    1014:	9e 3f       	cpi	r25, 0xFE	; 254
    1016:	08 f0       	brcs	.+2      	; 0x101a <__EEPROM_REGION_LENGTH__+0x1a>
    1018:	b3 cf       	rjmp	.-154    	; 0xf80 <__addsf3+0x1e>
    101a:	93 95       	inc	r25
    101c:	88 0f       	add	r24, r24
    101e:	08 f0       	brcs	.+2      	; 0x1022 <__EEPROM_REGION_LENGTH__+0x22>
    1020:	99 27       	eor	r25, r25
    1022:	ee 0f       	add	r30, r30
    1024:	97 95       	ror	r25
    1026:	87 95       	ror	r24
    1028:	08 95       	ret

0000102a <__floatunsisf>:
    102a:	e8 94       	clt
    102c:	09 c0       	rjmp	.+18     	; 0x1040 <__floatsisf+0x12>

0000102e <__floatsisf>:
    102e:	97 fb       	bst	r25, 7
    1030:	3e f4       	brtc	.+14     	; 0x1040 <__floatsisf+0x12>
    1032:	90 95       	com	r25
    1034:	80 95       	com	r24
    1036:	70 95       	com	r23
    1038:	61 95       	neg	r22
    103a:	7f 4f       	sbci	r23, 0xFF	; 255
    103c:	8f 4f       	sbci	r24, 0xFF	; 255
    103e:	9f 4f       	sbci	r25, 0xFF	; 255
    1040:	99 23       	and	r25, r25
    1042:	a9 f0       	breq	.+42     	; 0x106e <__floatsisf+0x40>
    1044:	f9 2f       	mov	r31, r25
    1046:	96 e9       	ldi	r25, 0x96	; 150
    1048:	bb 27       	eor	r27, r27
    104a:	93 95       	inc	r25
    104c:	f6 95       	lsr	r31
    104e:	87 95       	ror	r24
    1050:	77 95       	ror	r23
    1052:	67 95       	ror	r22
    1054:	b7 95       	ror	r27
    1056:	f1 11       	cpse	r31, r1
    1058:	f8 cf       	rjmp	.-16     	; 0x104a <__floatsisf+0x1c>
    105a:	fa f4       	brpl	.+62     	; 0x109a <__floatsisf+0x6c>
    105c:	bb 0f       	add	r27, r27
    105e:	11 f4       	brne	.+4      	; 0x1064 <__floatsisf+0x36>
    1060:	60 ff       	sbrs	r22, 0
    1062:	1b c0       	rjmp	.+54     	; 0x109a <__floatsisf+0x6c>
    1064:	6f 5f       	subi	r22, 0xFF	; 255
    1066:	7f 4f       	sbci	r23, 0xFF	; 255
    1068:	8f 4f       	sbci	r24, 0xFF	; 255
    106a:	9f 4f       	sbci	r25, 0xFF	; 255
    106c:	16 c0       	rjmp	.+44     	; 0x109a <__floatsisf+0x6c>
    106e:	88 23       	and	r24, r24
    1070:	11 f0       	breq	.+4      	; 0x1076 <__floatsisf+0x48>
    1072:	96 e9       	ldi	r25, 0x96	; 150
    1074:	11 c0       	rjmp	.+34     	; 0x1098 <__floatsisf+0x6a>
    1076:	77 23       	and	r23, r23
    1078:	21 f0       	breq	.+8      	; 0x1082 <__floatsisf+0x54>
    107a:	9e e8       	ldi	r25, 0x8E	; 142
    107c:	87 2f       	mov	r24, r23
    107e:	76 2f       	mov	r23, r22
    1080:	05 c0       	rjmp	.+10     	; 0x108c <__floatsisf+0x5e>
    1082:	66 23       	and	r22, r22
    1084:	71 f0       	breq	.+28     	; 0x10a2 <__floatsisf+0x74>
    1086:	96 e8       	ldi	r25, 0x86	; 134
    1088:	86 2f       	mov	r24, r22
    108a:	70 e0       	ldi	r23, 0x00	; 0
    108c:	60 e0       	ldi	r22, 0x00	; 0
    108e:	2a f0       	brmi	.+10     	; 0x109a <__floatsisf+0x6c>
    1090:	9a 95       	dec	r25
    1092:	66 0f       	add	r22, r22
    1094:	77 1f       	adc	r23, r23
    1096:	88 1f       	adc	r24, r24
    1098:	da f7       	brpl	.-10     	; 0x1090 <__floatsisf+0x62>
    109a:	88 0f       	add	r24, r24
    109c:	96 95       	lsr	r25
    109e:	87 95       	ror	r24
    10a0:	97 f9       	bld	r25, 7
    10a2:	08 95       	ret

000010a4 <__fp_inf>:
    10a4:	97 f9       	bld	r25, 7
    10a6:	9f 67       	ori	r25, 0x7F	; 127
    10a8:	80 e8       	ldi	r24, 0x80	; 128
    10aa:	70 e0       	ldi	r23, 0x00	; 0
    10ac:	60 e0       	ldi	r22, 0x00	; 0
    10ae:	08 95       	ret

000010b0 <__fp_nan>:
    10b0:	9f ef       	ldi	r25, 0xFF	; 255
    10b2:	80 ec       	ldi	r24, 0xC0	; 192
    10b4:	08 95       	ret

000010b6 <__fp_pscA>:
    10b6:	00 24       	eor	r0, r0
    10b8:	0a 94       	dec	r0
    10ba:	16 16       	cp	r1, r22
    10bc:	17 06       	cpc	r1, r23
    10be:	18 06       	cpc	r1, r24
    10c0:	09 06       	cpc	r0, r25
    10c2:	08 95       	ret

000010c4 <__fp_pscB>:
    10c4:	00 24       	eor	r0, r0
    10c6:	0a 94       	dec	r0
    10c8:	12 16       	cp	r1, r18
    10ca:	13 06       	cpc	r1, r19
    10cc:	14 06       	cpc	r1, r20
    10ce:	05 06       	cpc	r0, r21
    10d0:	08 95       	ret

000010d2 <__fp_round>:
    10d2:	09 2e       	mov	r0, r25
    10d4:	03 94       	inc	r0
    10d6:	00 0c       	add	r0, r0
    10d8:	11 f4       	brne	.+4      	; 0x10de <__fp_round+0xc>
    10da:	88 23       	and	r24, r24
    10dc:	52 f0       	brmi	.+20     	; 0x10f2 <__fp_round+0x20>
    10de:	bb 0f       	add	r27, r27
    10e0:	40 f4       	brcc	.+16     	; 0x10f2 <__fp_round+0x20>
    10e2:	bf 2b       	or	r27, r31
    10e4:	11 f4       	brne	.+4      	; 0x10ea <__fp_round+0x18>
    10e6:	60 ff       	sbrs	r22, 0
    10e8:	04 c0       	rjmp	.+8      	; 0x10f2 <__fp_round+0x20>
    10ea:	6f 5f       	subi	r22, 0xFF	; 255
    10ec:	7f 4f       	sbci	r23, 0xFF	; 255
    10ee:	8f 4f       	sbci	r24, 0xFF	; 255
    10f0:	9f 4f       	sbci	r25, 0xFF	; 255
    10f2:	08 95       	ret

000010f4 <__fp_split3>:
    10f4:	57 fd       	sbrc	r21, 7
    10f6:	90 58       	subi	r25, 0x80	; 128
    10f8:	44 0f       	add	r20, r20
    10fa:	55 1f       	adc	r21, r21
    10fc:	59 f0       	breq	.+22     	; 0x1114 <__fp_splitA+0x10>
    10fe:	5f 3f       	cpi	r21, 0xFF	; 255
    1100:	71 f0       	breq	.+28     	; 0x111e <__fp_splitA+0x1a>
    1102:	47 95       	ror	r20

00001104 <__fp_splitA>:
    1104:	88 0f       	add	r24, r24
    1106:	97 fb       	bst	r25, 7
    1108:	99 1f       	adc	r25, r25
    110a:	61 f0       	breq	.+24     	; 0x1124 <__fp_splitA+0x20>
    110c:	9f 3f       	cpi	r25, 0xFF	; 255
    110e:	79 f0       	breq	.+30     	; 0x112e <__fp_splitA+0x2a>
    1110:	87 95       	ror	r24
    1112:	08 95       	ret
    1114:	12 16       	cp	r1, r18
    1116:	13 06       	cpc	r1, r19
    1118:	14 06       	cpc	r1, r20
    111a:	55 1f       	adc	r21, r21
    111c:	f2 cf       	rjmp	.-28     	; 0x1102 <__fp_split3+0xe>
    111e:	46 95       	lsr	r20
    1120:	f1 df       	rcall	.-30     	; 0x1104 <__fp_splitA>
    1122:	08 c0       	rjmp	.+16     	; 0x1134 <__fp_splitA+0x30>
    1124:	16 16       	cp	r1, r22
    1126:	17 06       	cpc	r1, r23
    1128:	18 06       	cpc	r1, r24
    112a:	99 1f       	adc	r25, r25
    112c:	f1 cf       	rjmp	.-30     	; 0x1110 <__fp_splitA+0xc>
    112e:	86 95       	lsr	r24
    1130:	71 05       	cpc	r23, r1
    1132:	61 05       	cpc	r22, r1
    1134:	08 94       	sec
    1136:	08 95       	ret

00001138 <__fp_zero>:
    1138:	e8 94       	clt

0000113a <__fp_szero>:
    113a:	bb 27       	eor	r27, r27
    113c:	66 27       	eor	r22, r22
    113e:	77 27       	eor	r23, r23
    1140:	cb 01       	movw	r24, r22
    1142:	97 f9       	bld	r25, 7
    1144:	08 95       	ret

00001146 <atoi>:
    1146:	fc 01       	movw	r30, r24
    1148:	88 27       	eor	r24, r24
    114a:	99 27       	eor	r25, r25
    114c:	e8 94       	clt
    114e:	21 91       	ld	r18, Z+
    1150:	20 32       	cpi	r18, 0x20	; 32
    1152:	e9 f3       	breq	.-6      	; 0x114e <atoi+0x8>
    1154:	29 30       	cpi	r18, 0x09	; 9
    1156:	10 f0       	brcs	.+4      	; 0x115c <atoi+0x16>
    1158:	2e 30       	cpi	r18, 0x0E	; 14
    115a:	c8 f3       	brcs	.-14     	; 0x114e <atoi+0x8>
    115c:	2b 32       	cpi	r18, 0x2B	; 43
    115e:	39 f0       	breq	.+14     	; 0x116e <atoi+0x28>
    1160:	2d 32       	cpi	r18, 0x2D	; 45
    1162:	31 f4       	brne	.+12     	; 0x1170 <atoi+0x2a>
    1164:	68 94       	set
    1166:	03 c0       	rjmp	.+6      	; 0x116e <atoi+0x28>
    1168:	3e d0       	rcall	.+124    	; 0x11e6 <__mulhi_const_10>
    116a:	82 0f       	add	r24, r18
    116c:	91 1d       	adc	r25, r1
    116e:	21 91       	ld	r18, Z+
    1170:	20 53       	subi	r18, 0x30	; 48
    1172:	2a 30       	cpi	r18, 0x0A	; 10
    1174:	c8 f3       	brcs	.-14     	; 0x1168 <atoi+0x22>
    1176:	1e f4       	brtc	.+6      	; 0x117e <atoi+0x38>
    1178:	90 95       	com	r25
    117a:	81 95       	neg	r24
    117c:	9f 4f       	sbci	r25, 0xFF	; 255
    117e:	08 95       	ret

00001180 <strtok>:
    1180:	46 ee       	ldi	r20, 0xE6	; 230
    1182:	56 e0       	ldi	r21, 0x06	; 6
    1184:	09 c0       	rjmp	.+18     	; 0x1198 <strtok_r>

00001186 <strcmp>:
    1186:	fb 01       	movw	r30, r22
    1188:	dc 01       	movw	r26, r24
    118a:	8d 91       	ld	r24, X+
    118c:	01 90       	ld	r0, Z+
    118e:	80 19       	sub	r24, r0
    1190:	01 10       	cpse	r0, r1
    1192:	d9 f3       	breq	.-10     	; 0x118a <strcmp+0x4>
    1194:	99 0b       	sbc	r25, r25
    1196:	08 95       	ret

00001198 <strtok_r>:
    1198:	fa 01       	movw	r30, r20
    119a:	a1 91       	ld	r26, Z+
    119c:	b0 81       	ld	r27, Z
    119e:	00 97       	sbiw	r24, 0x00	; 0
    11a0:	19 f4       	brne	.+6      	; 0x11a8 <strtok_r+0x10>
    11a2:	10 97       	sbiw	r26, 0x00	; 0
    11a4:	e1 f0       	breq	.+56     	; 0x11de <strtok_r+0x46>
    11a6:	cd 01       	movw	r24, r26
    11a8:	dc 01       	movw	r26, r24
    11aa:	cd 01       	movw	r24, r26
    11ac:	0d 90       	ld	r0, X+
    11ae:	00 20       	and	r0, r0
    11b0:	11 f4       	brne	.+4      	; 0x11b6 <strtok_r+0x1e>
    11b2:	c0 01       	movw	r24, r0
    11b4:	13 c0       	rjmp	.+38     	; 0x11dc <strtok_r+0x44>
    11b6:	fb 01       	movw	r30, r22
    11b8:	21 91       	ld	r18, Z+
    11ba:	22 23       	and	r18, r18
    11bc:	19 f0       	breq	.+6      	; 0x11c4 <strtok_r+0x2c>
    11be:	20 15       	cp	r18, r0
    11c0:	d9 f7       	brne	.-10     	; 0x11b8 <strtok_r+0x20>
    11c2:	f3 cf       	rjmp	.-26     	; 0x11aa <strtok_r+0x12>
    11c4:	fb 01       	movw	r30, r22
    11c6:	21 91       	ld	r18, Z+
    11c8:	20 15       	cp	r18, r0
    11ca:	19 f4       	brne	.+6      	; 0x11d2 <strtok_r+0x3a>
    11cc:	1e 92       	st	-X, r1
    11ce:	11 96       	adiw	r26, 0x01	; 1
    11d0:	06 c0       	rjmp	.+12     	; 0x11de <strtok_r+0x46>
    11d2:	22 23       	and	r18, r18
    11d4:	c1 f7       	brne	.-16     	; 0x11c6 <strtok_r+0x2e>
    11d6:	0d 90       	ld	r0, X+
    11d8:	00 20       	and	r0, r0
    11da:	a1 f7       	brne	.-24     	; 0x11c4 <strtok_r+0x2c>
    11dc:	d0 01       	movw	r26, r0
    11de:	fa 01       	movw	r30, r20
    11e0:	a1 93       	st	Z+, r26
    11e2:	b0 83       	st	Z, r27
    11e4:	08 95       	ret

000011e6 <__mulhi_const_10>:
    11e6:	7a e0       	ldi	r23, 0x0A	; 10
    11e8:	97 9f       	mul	r25, r23
    11ea:	90 2d       	mov	r25, r0
    11ec:	87 9f       	mul	r24, r23
    11ee:	80 2d       	mov	r24, r0
    11f0:	91 0d       	add	r25, r1
    11f2:	11 24       	eor	r1, r1
    11f4:	08 95       	ret

000011f6 <printf>:
    11f6:	cf 93       	push	r28
    11f8:	df 93       	push	r29
    11fa:	cd b7       	in	r28, 0x3d	; 61
    11fc:	de b7       	in	r29, 0x3e	; 62
    11fe:	ae 01       	movw	r20, r28
    1200:	4b 5f       	subi	r20, 0xFB	; 251
    1202:	5f 4f       	sbci	r21, 0xFF	; 255
    1204:	fa 01       	movw	r30, r20
    1206:	61 91       	ld	r22, Z+
    1208:	71 91       	ld	r23, Z+
    120a:	af 01       	movw	r20, r30
    120c:	80 91 05 07 	lds	r24, 0x0705	; 0x800705 <__iob+0x2>
    1210:	90 91 06 07 	lds	r25, 0x0706	; 0x800706 <__iob+0x3>
    1214:	95 d0       	rcall	.+298    	; 0x1340 <vfprintf>
    1216:	df 91       	pop	r29
    1218:	cf 91       	pop	r28
    121a:	08 95       	ret

0000121c <puts>:
    121c:	0f 93       	push	r16
    121e:	1f 93       	push	r17
    1220:	cf 93       	push	r28
    1222:	df 93       	push	r29
    1224:	e0 91 05 07 	lds	r30, 0x0705	; 0x800705 <__iob+0x2>
    1228:	f0 91 06 07 	lds	r31, 0x0706	; 0x800706 <__iob+0x3>
    122c:	23 81       	ldd	r18, Z+3	; 0x03
    122e:	21 ff       	sbrs	r18, 1
    1230:	1b c0       	rjmp	.+54     	; 0x1268 <puts+0x4c>
    1232:	8c 01       	movw	r16, r24
    1234:	d0 e0       	ldi	r29, 0x00	; 0
    1236:	c0 e0       	ldi	r28, 0x00	; 0
    1238:	f8 01       	movw	r30, r16
    123a:	81 91       	ld	r24, Z+
    123c:	8f 01       	movw	r16, r30
    123e:	60 91 05 07 	lds	r22, 0x0705	; 0x800705 <__iob+0x2>
    1242:	70 91 06 07 	lds	r23, 0x0706	; 0x800706 <__iob+0x3>
    1246:	db 01       	movw	r26, r22
    1248:	18 96       	adiw	r26, 0x08	; 8
    124a:	ed 91       	ld	r30, X+
    124c:	fc 91       	ld	r31, X
    124e:	19 97       	sbiw	r26, 0x09	; 9
    1250:	88 23       	and	r24, r24
    1252:	31 f0       	breq	.+12     	; 0x1260 <puts+0x44>
    1254:	09 95       	icall
    1256:	89 2b       	or	r24, r25
    1258:	79 f3       	breq	.-34     	; 0x1238 <puts+0x1c>
    125a:	df ef       	ldi	r29, 0xFF	; 255
    125c:	cf ef       	ldi	r28, 0xFF	; 255
    125e:	ec cf       	rjmp	.-40     	; 0x1238 <puts+0x1c>
    1260:	8a e0       	ldi	r24, 0x0A	; 10
    1262:	09 95       	icall
    1264:	89 2b       	or	r24, r25
    1266:	19 f0       	breq	.+6      	; 0x126e <puts+0x52>
    1268:	8f ef       	ldi	r24, 0xFF	; 255
    126a:	9f ef       	ldi	r25, 0xFF	; 255
    126c:	02 c0       	rjmp	.+4      	; 0x1272 <puts+0x56>
    126e:	8d 2f       	mov	r24, r29
    1270:	9c 2f       	mov	r25, r28
    1272:	df 91       	pop	r29
    1274:	cf 91       	pop	r28
    1276:	1f 91       	pop	r17
    1278:	0f 91       	pop	r16
    127a:	08 95       	ret

0000127c <scanf>:
    127c:	cf 93       	push	r28
    127e:	df 93       	push	r29
    1280:	cd b7       	in	r28, 0x3d	; 61
    1282:	de b7       	in	r29, 0x3e	; 62
    1284:	ae 01       	movw	r20, r28
    1286:	4b 5f       	subi	r20, 0xFB	; 251
    1288:	5f 4f       	sbci	r21, 0xFF	; 255
    128a:	fa 01       	movw	r30, r20
    128c:	61 91       	ld	r22, Z+
    128e:	71 91       	ld	r23, Z+
    1290:	af 01       	movw	r20, r30
    1292:	80 91 03 07 	lds	r24, 0x0703	; 0x800703 <__iob>
    1296:	90 91 04 07 	lds	r25, 0x0704	; 0x800704 <__iob+0x1>
    129a:	01 d4       	rcall	.+2050   	; 0x1a9e <vfscanf>
    129c:	df 91       	pop	r29
    129e:	cf 91       	pop	r28
    12a0:	08 95       	ret

000012a2 <sprintf>:
    12a2:	0f 93       	push	r16
    12a4:	1f 93       	push	r17
    12a6:	cf 93       	push	r28
    12a8:	df 93       	push	r29
    12aa:	cd b7       	in	r28, 0x3d	; 61
    12ac:	de b7       	in	r29, 0x3e	; 62
    12ae:	2e 97       	sbiw	r28, 0x0e	; 14
    12b0:	0f b6       	in	r0, 0x3f	; 63
    12b2:	f8 94       	cli
    12b4:	de bf       	out	0x3e, r29	; 62
    12b6:	0f be       	out	0x3f, r0	; 63
    12b8:	cd bf       	out	0x3d, r28	; 61
    12ba:	0d 89       	ldd	r16, Y+21	; 0x15
    12bc:	1e 89       	ldd	r17, Y+22	; 0x16
    12be:	86 e0       	ldi	r24, 0x06	; 6
    12c0:	8c 83       	std	Y+4, r24	; 0x04
    12c2:	1a 83       	std	Y+2, r17	; 0x02
    12c4:	09 83       	std	Y+1, r16	; 0x01
    12c6:	8f ef       	ldi	r24, 0xFF	; 255
    12c8:	9f e7       	ldi	r25, 0x7F	; 127
    12ca:	9e 83       	std	Y+6, r25	; 0x06
    12cc:	8d 83       	std	Y+5, r24	; 0x05
    12ce:	ae 01       	movw	r20, r28
    12d0:	47 5e       	subi	r20, 0xE7	; 231
    12d2:	5f 4f       	sbci	r21, 0xFF	; 255
    12d4:	6f 89       	ldd	r22, Y+23	; 0x17
    12d6:	78 8d       	ldd	r23, Y+24	; 0x18
    12d8:	ce 01       	movw	r24, r28
    12da:	01 96       	adiw	r24, 0x01	; 1
    12dc:	31 d0       	rcall	.+98     	; 0x1340 <vfprintf>
    12de:	ef 81       	ldd	r30, Y+7	; 0x07
    12e0:	f8 85       	ldd	r31, Y+8	; 0x08
    12e2:	e0 0f       	add	r30, r16
    12e4:	f1 1f       	adc	r31, r17
    12e6:	10 82       	st	Z, r1
    12e8:	2e 96       	adiw	r28, 0x0e	; 14
    12ea:	0f b6       	in	r0, 0x3f	; 63
    12ec:	f8 94       	cli
    12ee:	de bf       	out	0x3e, r29	; 62
    12f0:	0f be       	out	0x3f, r0	; 63
    12f2:	cd bf       	out	0x3d, r28	; 61
    12f4:	df 91       	pop	r29
    12f6:	cf 91       	pop	r28
    12f8:	1f 91       	pop	r17
    12fa:	0f 91       	pop	r16
    12fc:	08 95       	ret

000012fe <sscanf>:
    12fe:	cf 93       	push	r28
    1300:	df 93       	push	r29
    1302:	cd b7       	in	r28, 0x3d	; 61
    1304:	de b7       	in	r29, 0x3e	; 62
    1306:	2e 97       	sbiw	r28, 0x0e	; 14
    1308:	0f b6       	in	r0, 0x3f	; 63
    130a:	f8 94       	cli
    130c:	de bf       	out	0x3e, r29	; 62
    130e:	0f be       	out	0x3f, r0	; 63
    1310:	cd bf       	out	0x3d, r28	; 61
    1312:	85 e0       	ldi	r24, 0x05	; 5
    1314:	8c 83       	std	Y+4, r24	; 0x04
    1316:	8b 89       	ldd	r24, Y+19	; 0x13
    1318:	9c 89       	ldd	r25, Y+20	; 0x14
    131a:	9a 83       	std	Y+2, r25	; 0x02
    131c:	89 83       	std	Y+1, r24	; 0x01
    131e:	ae 01       	movw	r20, r28
    1320:	49 5e       	subi	r20, 0xE9	; 233
    1322:	5f 4f       	sbci	r21, 0xFF	; 255
    1324:	6d 89       	ldd	r22, Y+21	; 0x15
    1326:	7e 89       	ldd	r23, Y+22	; 0x16
    1328:	ce 01       	movw	r24, r28
    132a:	01 96       	adiw	r24, 0x01	; 1
    132c:	b8 d3       	rcall	.+1904   	; 0x1a9e <vfscanf>
    132e:	2e 96       	adiw	r28, 0x0e	; 14
    1330:	0f b6       	in	r0, 0x3f	; 63
    1332:	f8 94       	cli
    1334:	de bf       	out	0x3e, r29	; 62
    1336:	0f be       	out	0x3f, r0	; 63
    1338:	cd bf       	out	0x3d, r28	; 61
    133a:	df 91       	pop	r29
    133c:	cf 91       	pop	r28
    133e:	08 95       	ret

00001340 <vfprintf>:
    1340:	2f 92       	push	r2
    1342:	3f 92       	push	r3
    1344:	4f 92       	push	r4
    1346:	5f 92       	push	r5
    1348:	6f 92       	push	r6
    134a:	7f 92       	push	r7
    134c:	8f 92       	push	r8
    134e:	9f 92       	push	r9
    1350:	af 92       	push	r10
    1352:	bf 92       	push	r11
    1354:	cf 92       	push	r12
    1356:	df 92       	push	r13
    1358:	ef 92       	push	r14
    135a:	ff 92       	push	r15
    135c:	0f 93       	push	r16
    135e:	1f 93       	push	r17
    1360:	cf 93       	push	r28
    1362:	df 93       	push	r29
    1364:	cd b7       	in	r28, 0x3d	; 61
    1366:	de b7       	in	r29, 0x3e	; 62
    1368:	2b 97       	sbiw	r28, 0x0b	; 11
    136a:	0f b6       	in	r0, 0x3f	; 63
    136c:	f8 94       	cli
    136e:	de bf       	out	0x3e, r29	; 62
    1370:	0f be       	out	0x3f, r0	; 63
    1372:	cd bf       	out	0x3d, r28	; 61
    1374:	6c 01       	movw	r12, r24
    1376:	7b 01       	movw	r14, r22
    1378:	8a 01       	movw	r16, r20
    137a:	fc 01       	movw	r30, r24
    137c:	17 82       	std	Z+7, r1	; 0x07
    137e:	16 82       	std	Z+6, r1	; 0x06
    1380:	83 81       	ldd	r24, Z+3	; 0x03
    1382:	81 ff       	sbrs	r24, 1
    1384:	bf c1       	rjmp	.+894    	; 0x1704 <vfprintf+0x3c4>
    1386:	ce 01       	movw	r24, r28
    1388:	01 96       	adiw	r24, 0x01	; 1
    138a:	3c 01       	movw	r6, r24
    138c:	f6 01       	movw	r30, r12
    138e:	93 81       	ldd	r25, Z+3	; 0x03
    1390:	f7 01       	movw	r30, r14
    1392:	93 fd       	sbrc	r25, 3
    1394:	85 91       	lpm	r24, Z+
    1396:	93 ff       	sbrs	r25, 3
    1398:	81 91       	ld	r24, Z+
    139a:	7f 01       	movw	r14, r30
    139c:	88 23       	and	r24, r24
    139e:	09 f4       	brne	.+2      	; 0x13a2 <vfprintf+0x62>
    13a0:	ad c1       	rjmp	.+858    	; 0x16fc <vfprintf+0x3bc>
    13a2:	85 32       	cpi	r24, 0x25	; 37
    13a4:	39 f4       	brne	.+14     	; 0x13b4 <vfprintf+0x74>
    13a6:	93 fd       	sbrc	r25, 3
    13a8:	85 91       	lpm	r24, Z+
    13aa:	93 ff       	sbrs	r25, 3
    13ac:	81 91       	ld	r24, Z+
    13ae:	7f 01       	movw	r14, r30
    13b0:	85 32       	cpi	r24, 0x25	; 37
    13b2:	21 f4       	brne	.+8      	; 0x13bc <vfprintf+0x7c>
    13b4:	b6 01       	movw	r22, r12
    13b6:	90 e0       	ldi	r25, 0x00	; 0
    13b8:	f0 d4       	rcall	.+2528   	; 0x1d9a <fputc>
    13ba:	e8 cf       	rjmp	.-48     	; 0x138c <vfprintf+0x4c>
    13bc:	91 2c       	mov	r9, r1
    13be:	21 2c       	mov	r2, r1
    13c0:	31 2c       	mov	r3, r1
    13c2:	ff e1       	ldi	r31, 0x1F	; 31
    13c4:	f3 15       	cp	r31, r3
    13c6:	d8 f0       	brcs	.+54     	; 0x13fe <vfprintf+0xbe>
    13c8:	8b 32       	cpi	r24, 0x2B	; 43
    13ca:	79 f0       	breq	.+30     	; 0x13ea <vfprintf+0xaa>
    13cc:	38 f4       	brcc	.+14     	; 0x13dc <vfprintf+0x9c>
    13ce:	80 32       	cpi	r24, 0x20	; 32
    13d0:	79 f0       	breq	.+30     	; 0x13f0 <vfprintf+0xb0>
    13d2:	83 32       	cpi	r24, 0x23	; 35
    13d4:	a1 f4       	brne	.+40     	; 0x13fe <vfprintf+0xbe>
    13d6:	23 2d       	mov	r18, r3
    13d8:	20 61       	ori	r18, 0x10	; 16
    13da:	1d c0       	rjmp	.+58     	; 0x1416 <vfprintf+0xd6>
    13dc:	8d 32       	cpi	r24, 0x2D	; 45
    13de:	61 f0       	breq	.+24     	; 0x13f8 <vfprintf+0xb8>
    13e0:	80 33       	cpi	r24, 0x30	; 48
    13e2:	69 f4       	brne	.+26     	; 0x13fe <vfprintf+0xbe>
    13e4:	23 2d       	mov	r18, r3
    13e6:	21 60       	ori	r18, 0x01	; 1
    13e8:	16 c0       	rjmp	.+44     	; 0x1416 <vfprintf+0xd6>
    13ea:	83 2d       	mov	r24, r3
    13ec:	82 60       	ori	r24, 0x02	; 2
    13ee:	38 2e       	mov	r3, r24
    13f0:	e3 2d       	mov	r30, r3
    13f2:	e4 60       	ori	r30, 0x04	; 4
    13f4:	3e 2e       	mov	r3, r30
    13f6:	2a c0       	rjmp	.+84     	; 0x144c <vfprintf+0x10c>
    13f8:	f3 2d       	mov	r31, r3
    13fa:	f8 60       	ori	r31, 0x08	; 8
    13fc:	1d c0       	rjmp	.+58     	; 0x1438 <vfprintf+0xf8>
    13fe:	37 fc       	sbrc	r3, 7
    1400:	2d c0       	rjmp	.+90     	; 0x145c <vfprintf+0x11c>
    1402:	20 ed       	ldi	r18, 0xD0	; 208
    1404:	28 0f       	add	r18, r24
    1406:	2a 30       	cpi	r18, 0x0A	; 10
    1408:	40 f0       	brcs	.+16     	; 0x141a <vfprintf+0xda>
    140a:	8e 32       	cpi	r24, 0x2E	; 46
    140c:	b9 f4       	brne	.+46     	; 0x143c <vfprintf+0xfc>
    140e:	36 fc       	sbrc	r3, 6
    1410:	75 c1       	rjmp	.+746    	; 0x16fc <vfprintf+0x3bc>
    1412:	23 2d       	mov	r18, r3
    1414:	20 64       	ori	r18, 0x40	; 64
    1416:	32 2e       	mov	r3, r18
    1418:	19 c0       	rjmp	.+50     	; 0x144c <vfprintf+0x10c>
    141a:	36 fe       	sbrs	r3, 6
    141c:	06 c0       	rjmp	.+12     	; 0x142a <vfprintf+0xea>
    141e:	8a e0       	ldi	r24, 0x0A	; 10
    1420:	98 9e       	mul	r9, r24
    1422:	20 0d       	add	r18, r0
    1424:	11 24       	eor	r1, r1
    1426:	92 2e       	mov	r9, r18
    1428:	11 c0       	rjmp	.+34     	; 0x144c <vfprintf+0x10c>
    142a:	ea e0       	ldi	r30, 0x0A	; 10
    142c:	2e 9e       	mul	r2, r30
    142e:	20 0d       	add	r18, r0
    1430:	11 24       	eor	r1, r1
    1432:	22 2e       	mov	r2, r18
    1434:	f3 2d       	mov	r31, r3
    1436:	f0 62       	ori	r31, 0x20	; 32
    1438:	3f 2e       	mov	r3, r31
    143a:	08 c0       	rjmp	.+16     	; 0x144c <vfprintf+0x10c>
    143c:	8c 36       	cpi	r24, 0x6C	; 108
    143e:	21 f4       	brne	.+8      	; 0x1448 <vfprintf+0x108>
    1440:	83 2d       	mov	r24, r3
    1442:	80 68       	ori	r24, 0x80	; 128
    1444:	38 2e       	mov	r3, r24
    1446:	02 c0       	rjmp	.+4      	; 0x144c <vfprintf+0x10c>
    1448:	88 36       	cpi	r24, 0x68	; 104
    144a:	41 f4       	brne	.+16     	; 0x145c <vfprintf+0x11c>
    144c:	f7 01       	movw	r30, r14
    144e:	93 fd       	sbrc	r25, 3
    1450:	85 91       	lpm	r24, Z+
    1452:	93 ff       	sbrs	r25, 3
    1454:	81 91       	ld	r24, Z+
    1456:	7f 01       	movw	r14, r30
    1458:	81 11       	cpse	r24, r1
    145a:	b3 cf       	rjmp	.-154    	; 0x13c2 <vfprintf+0x82>
    145c:	98 2f       	mov	r25, r24
    145e:	9f 7d       	andi	r25, 0xDF	; 223
    1460:	95 54       	subi	r25, 0x45	; 69
    1462:	93 30       	cpi	r25, 0x03	; 3
    1464:	28 f4       	brcc	.+10     	; 0x1470 <vfprintf+0x130>
    1466:	0c 5f       	subi	r16, 0xFC	; 252
    1468:	1f 4f       	sbci	r17, 0xFF	; 255
    146a:	9f e3       	ldi	r25, 0x3F	; 63
    146c:	99 83       	std	Y+1, r25	; 0x01
    146e:	0d c0       	rjmp	.+26     	; 0x148a <vfprintf+0x14a>
    1470:	83 36       	cpi	r24, 0x63	; 99
    1472:	31 f0       	breq	.+12     	; 0x1480 <vfprintf+0x140>
    1474:	83 37       	cpi	r24, 0x73	; 115
    1476:	71 f0       	breq	.+28     	; 0x1494 <vfprintf+0x154>
    1478:	83 35       	cpi	r24, 0x53	; 83
    147a:	09 f0       	breq	.+2      	; 0x147e <vfprintf+0x13e>
    147c:	55 c0       	rjmp	.+170    	; 0x1528 <vfprintf+0x1e8>
    147e:	20 c0       	rjmp	.+64     	; 0x14c0 <vfprintf+0x180>
    1480:	f8 01       	movw	r30, r16
    1482:	80 81       	ld	r24, Z
    1484:	89 83       	std	Y+1, r24	; 0x01
    1486:	0e 5f       	subi	r16, 0xFE	; 254
    1488:	1f 4f       	sbci	r17, 0xFF	; 255
    148a:	88 24       	eor	r8, r8
    148c:	83 94       	inc	r8
    148e:	91 2c       	mov	r9, r1
    1490:	53 01       	movw	r10, r6
    1492:	12 c0       	rjmp	.+36     	; 0x14b8 <vfprintf+0x178>
    1494:	28 01       	movw	r4, r16
    1496:	f2 e0       	ldi	r31, 0x02	; 2
    1498:	4f 0e       	add	r4, r31
    149a:	51 1c       	adc	r5, r1
    149c:	f8 01       	movw	r30, r16
    149e:	a0 80       	ld	r10, Z
    14a0:	b1 80       	ldd	r11, Z+1	; 0x01
    14a2:	36 fe       	sbrs	r3, 6
    14a4:	03 c0       	rjmp	.+6      	; 0x14ac <vfprintf+0x16c>
    14a6:	69 2d       	mov	r22, r9
    14a8:	70 e0       	ldi	r23, 0x00	; 0
    14aa:	02 c0       	rjmp	.+4      	; 0x14b0 <vfprintf+0x170>
    14ac:	6f ef       	ldi	r22, 0xFF	; 255
    14ae:	7f ef       	ldi	r23, 0xFF	; 255
    14b0:	c5 01       	movw	r24, r10
    14b2:	2a d4       	rcall	.+2132   	; 0x1d08 <strnlen>
    14b4:	4c 01       	movw	r8, r24
    14b6:	82 01       	movw	r16, r4
    14b8:	f3 2d       	mov	r31, r3
    14ba:	ff 77       	andi	r31, 0x7F	; 127
    14bc:	3f 2e       	mov	r3, r31
    14be:	15 c0       	rjmp	.+42     	; 0x14ea <vfprintf+0x1aa>
    14c0:	28 01       	movw	r4, r16
    14c2:	22 e0       	ldi	r18, 0x02	; 2
    14c4:	42 0e       	add	r4, r18
    14c6:	51 1c       	adc	r5, r1
    14c8:	f8 01       	movw	r30, r16
    14ca:	a0 80       	ld	r10, Z
    14cc:	b1 80       	ldd	r11, Z+1	; 0x01
    14ce:	36 fe       	sbrs	r3, 6
    14d0:	03 c0       	rjmp	.+6      	; 0x14d8 <vfprintf+0x198>
    14d2:	69 2d       	mov	r22, r9
    14d4:	70 e0       	ldi	r23, 0x00	; 0
    14d6:	02 c0       	rjmp	.+4      	; 0x14dc <vfprintf+0x19c>
    14d8:	6f ef       	ldi	r22, 0xFF	; 255
    14da:	7f ef       	ldi	r23, 0xFF	; 255
    14dc:	c5 01       	movw	r24, r10
    14de:	09 d4       	rcall	.+2066   	; 0x1cf2 <strnlen_P>
    14e0:	4c 01       	movw	r8, r24
    14e2:	f3 2d       	mov	r31, r3
    14e4:	f0 68       	ori	r31, 0x80	; 128
    14e6:	3f 2e       	mov	r3, r31
    14e8:	82 01       	movw	r16, r4
    14ea:	33 fc       	sbrc	r3, 3
    14ec:	19 c0       	rjmp	.+50     	; 0x1520 <vfprintf+0x1e0>
    14ee:	82 2d       	mov	r24, r2
    14f0:	90 e0       	ldi	r25, 0x00	; 0
    14f2:	88 16       	cp	r8, r24
    14f4:	99 06       	cpc	r9, r25
    14f6:	a0 f4       	brcc	.+40     	; 0x1520 <vfprintf+0x1e0>
    14f8:	b6 01       	movw	r22, r12
    14fa:	80 e2       	ldi	r24, 0x20	; 32
    14fc:	90 e0       	ldi	r25, 0x00	; 0
    14fe:	4d d4       	rcall	.+2202   	; 0x1d9a <fputc>
    1500:	2a 94       	dec	r2
    1502:	f5 cf       	rjmp	.-22     	; 0x14ee <vfprintf+0x1ae>
    1504:	f5 01       	movw	r30, r10
    1506:	37 fc       	sbrc	r3, 7
    1508:	85 91       	lpm	r24, Z+
    150a:	37 fe       	sbrs	r3, 7
    150c:	81 91       	ld	r24, Z+
    150e:	5f 01       	movw	r10, r30
    1510:	b6 01       	movw	r22, r12
    1512:	90 e0       	ldi	r25, 0x00	; 0
    1514:	42 d4       	rcall	.+2180   	; 0x1d9a <fputc>
    1516:	21 10       	cpse	r2, r1
    1518:	2a 94       	dec	r2
    151a:	21 e0       	ldi	r18, 0x01	; 1
    151c:	82 1a       	sub	r8, r18
    151e:	91 08       	sbc	r9, r1
    1520:	81 14       	cp	r8, r1
    1522:	91 04       	cpc	r9, r1
    1524:	79 f7       	brne	.-34     	; 0x1504 <vfprintf+0x1c4>
    1526:	e1 c0       	rjmp	.+450    	; 0x16ea <vfprintf+0x3aa>
    1528:	84 36       	cpi	r24, 0x64	; 100
    152a:	11 f0       	breq	.+4      	; 0x1530 <vfprintf+0x1f0>
    152c:	89 36       	cpi	r24, 0x69	; 105
    152e:	39 f5       	brne	.+78     	; 0x157e <vfprintf+0x23e>
    1530:	f8 01       	movw	r30, r16
    1532:	37 fe       	sbrs	r3, 7
    1534:	07 c0       	rjmp	.+14     	; 0x1544 <vfprintf+0x204>
    1536:	60 81       	ld	r22, Z
    1538:	71 81       	ldd	r23, Z+1	; 0x01
    153a:	82 81       	ldd	r24, Z+2	; 0x02
    153c:	93 81       	ldd	r25, Z+3	; 0x03
    153e:	0c 5f       	subi	r16, 0xFC	; 252
    1540:	1f 4f       	sbci	r17, 0xFF	; 255
    1542:	08 c0       	rjmp	.+16     	; 0x1554 <vfprintf+0x214>
    1544:	60 81       	ld	r22, Z
    1546:	71 81       	ldd	r23, Z+1	; 0x01
    1548:	07 2e       	mov	r0, r23
    154a:	00 0c       	add	r0, r0
    154c:	88 0b       	sbc	r24, r24
    154e:	99 0b       	sbc	r25, r25
    1550:	0e 5f       	subi	r16, 0xFE	; 254
    1552:	1f 4f       	sbci	r17, 0xFF	; 255
    1554:	f3 2d       	mov	r31, r3
    1556:	ff 76       	andi	r31, 0x6F	; 111
    1558:	3f 2e       	mov	r3, r31
    155a:	97 ff       	sbrs	r25, 7
    155c:	09 c0       	rjmp	.+18     	; 0x1570 <vfprintf+0x230>
    155e:	90 95       	com	r25
    1560:	80 95       	com	r24
    1562:	70 95       	com	r23
    1564:	61 95       	neg	r22
    1566:	7f 4f       	sbci	r23, 0xFF	; 255
    1568:	8f 4f       	sbci	r24, 0xFF	; 255
    156a:	9f 4f       	sbci	r25, 0xFF	; 255
    156c:	f0 68       	ori	r31, 0x80	; 128
    156e:	3f 2e       	mov	r3, r31
    1570:	2a e0       	ldi	r18, 0x0A	; 10
    1572:	30 e0       	ldi	r19, 0x00	; 0
    1574:	a3 01       	movw	r20, r6
    1576:	66 d4       	rcall	.+2252   	; 0x1e44 <__ultoa_invert>
    1578:	88 2e       	mov	r8, r24
    157a:	86 18       	sub	r8, r6
    157c:	44 c0       	rjmp	.+136    	; 0x1606 <vfprintf+0x2c6>
    157e:	85 37       	cpi	r24, 0x75	; 117
    1580:	31 f4       	brne	.+12     	; 0x158e <vfprintf+0x24e>
    1582:	23 2d       	mov	r18, r3
    1584:	2f 7e       	andi	r18, 0xEF	; 239
    1586:	b2 2e       	mov	r11, r18
    1588:	2a e0       	ldi	r18, 0x0A	; 10
    158a:	30 e0       	ldi	r19, 0x00	; 0
    158c:	25 c0       	rjmp	.+74     	; 0x15d8 <vfprintf+0x298>
    158e:	93 2d       	mov	r25, r3
    1590:	99 7f       	andi	r25, 0xF9	; 249
    1592:	b9 2e       	mov	r11, r25
    1594:	8f 36       	cpi	r24, 0x6F	; 111
    1596:	c1 f0       	breq	.+48     	; 0x15c8 <vfprintf+0x288>
    1598:	18 f4       	brcc	.+6      	; 0x15a0 <vfprintf+0x260>
    159a:	88 35       	cpi	r24, 0x58	; 88
    159c:	79 f0       	breq	.+30     	; 0x15bc <vfprintf+0x27c>
    159e:	ae c0       	rjmp	.+348    	; 0x16fc <vfprintf+0x3bc>
    15a0:	80 37       	cpi	r24, 0x70	; 112
    15a2:	19 f0       	breq	.+6      	; 0x15aa <vfprintf+0x26a>
    15a4:	88 37       	cpi	r24, 0x78	; 120
    15a6:	21 f0       	breq	.+8      	; 0x15b0 <vfprintf+0x270>
    15a8:	a9 c0       	rjmp	.+338    	; 0x16fc <vfprintf+0x3bc>
    15aa:	e9 2f       	mov	r30, r25
    15ac:	e0 61       	ori	r30, 0x10	; 16
    15ae:	be 2e       	mov	r11, r30
    15b0:	b4 fe       	sbrs	r11, 4
    15b2:	0d c0       	rjmp	.+26     	; 0x15ce <vfprintf+0x28e>
    15b4:	fb 2d       	mov	r31, r11
    15b6:	f4 60       	ori	r31, 0x04	; 4
    15b8:	bf 2e       	mov	r11, r31
    15ba:	09 c0       	rjmp	.+18     	; 0x15ce <vfprintf+0x28e>
    15bc:	34 fe       	sbrs	r3, 4
    15be:	0a c0       	rjmp	.+20     	; 0x15d4 <vfprintf+0x294>
    15c0:	29 2f       	mov	r18, r25
    15c2:	26 60       	ori	r18, 0x06	; 6
    15c4:	b2 2e       	mov	r11, r18
    15c6:	06 c0       	rjmp	.+12     	; 0x15d4 <vfprintf+0x294>
    15c8:	28 e0       	ldi	r18, 0x08	; 8
    15ca:	30 e0       	ldi	r19, 0x00	; 0
    15cc:	05 c0       	rjmp	.+10     	; 0x15d8 <vfprintf+0x298>
    15ce:	20 e1       	ldi	r18, 0x10	; 16
    15d0:	30 e0       	ldi	r19, 0x00	; 0
    15d2:	02 c0       	rjmp	.+4      	; 0x15d8 <vfprintf+0x298>
    15d4:	20 e1       	ldi	r18, 0x10	; 16
    15d6:	32 e0       	ldi	r19, 0x02	; 2
    15d8:	f8 01       	movw	r30, r16
    15da:	b7 fe       	sbrs	r11, 7
    15dc:	07 c0       	rjmp	.+14     	; 0x15ec <vfprintf+0x2ac>
    15de:	60 81       	ld	r22, Z
    15e0:	71 81       	ldd	r23, Z+1	; 0x01
    15e2:	82 81       	ldd	r24, Z+2	; 0x02
    15e4:	93 81       	ldd	r25, Z+3	; 0x03
    15e6:	0c 5f       	subi	r16, 0xFC	; 252
    15e8:	1f 4f       	sbci	r17, 0xFF	; 255
    15ea:	06 c0       	rjmp	.+12     	; 0x15f8 <vfprintf+0x2b8>
    15ec:	60 81       	ld	r22, Z
    15ee:	71 81       	ldd	r23, Z+1	; 0x01
    15f0:	80 e0       	ldi	r24, 0x00	; 0
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	0e 5f       	subi	r16, 0xFE	; 254
    15f6:	1f 4f       	sbci	r17, 0xFF	; 255
    15f8:	a3 01       	movw	r20, r6
    15fa:	24 d4       	rcall	.+2120   	; 0x1e44 <__ultoa_invert>
    15fc:	88 2e       	mov	r8, r24
    15fe:	86 18       	sub	r8, r6
    1600:	fb 2d       	mov	r31, r11
    1602:	ff 77       	andi	r31, 0x7F	; 127
    1604:	3f 2e       	mov	r3, r31
    1606:	36 fe       	sbrs	r3, 6
    1608:	0d c0       	rjmp	.+26     	; 0x1624 <vfprintf+0x2e4>
    160a:	23 2d       	mov	r18, r3
    160c:	2e 7f       	andi	r18, 0xFE	; 254
    160e:	a2 2e       	mov	r10, r18
    1610:	89 14       	cp	r8, r9
    1612:	58 f4       	brcc	.+22     	; 0x162a <vfprintf+0x2ea>
    1614:	34 fe       	sbrs	r3, 4
    1616:	0b c0       	rjmp	.+22     	; 0x162e <vfprintf+0x2ee>
    1618:	32 fc       	sbrc	r3, 2
    161a:	09 c0       	rjmp	.+18     	; 0x162e <vfprintf+0x2ee>
    161c:	83 2d       	mov	r24, r3
    161e:	8e 7e       	andi	r24, 0xEE	; 238
    1620:	a8 2e       	mov	r10, r24
    1622:	05 c0       	rjmp	.+10     	; 0x162e <vfprintf+0x2ee>
    1624:	b8 2c       	mov	r11, r8
    1626:	a3 2c       	mov	r10, r3
    1628:	03 c0       	rjmp	.+6      	; 0x1630 <vfprintf+0x2f0>
    162a:	b8 2c       	mov	r11, r8
    162c:	01 c0       	rjmp	.+2      	; 0x1630 <vfprintf+0x2f0>
    162e:	b9 2c       	mov	r11, r9
    1630:	a4 fe       	sbrs	r10, 4
    1632:	0f c0       	rjmp	.+30     	; 0x1652 <vfprintf+0x312>
    1634:	fe 01       	movw	r30, r28
    1636:	e8 0d       	add	r30, r8
    1638:	f1 1d       	adc	r31, r1
    163a:	80 81       	ld	r24, Z
    163c:	80 33       	cpi	r24, 0x30	; 48
    163e:	21 f4       	brne	.+8      	; 0x1648 <vfprintf+0x308>
    1640:	9a 2d       	mov	r25, r10
    1642:	99 7e       	andi	r25, 0xE9	; 233
    1644:	a9 2e       	mov	r10, r25
    1646:	09 c0       	rjmp	.+18     	; 0x165a <vfprintf+0x31a>
    1648:	a2 fe       	sbrs	r10, 2
    164a:	06 c0       	rjmp	.+12     	; 0x1658 <vfprintf+0x318>
    164c:	b3 94       	inc	r11
    164e:	b3 94       	inc	r11
    1650:	04 c0       	rjmp	.+8      	; 0x165a <vfprintf+0x31a>
    1652:	8a 2d       	mov	r24, r10
    1654:	86 78       	andi	r24, 0x86	; 134
    1656:	09 f0       	breq	.+2      	; 0x165a <vfprintf+0x31a>
    1658:	b3 94       	inc	r11
    165a:	a3 fc       	sbrc	r10, 3
    165c:	10 c0       	rjmp	.+32     	; 0x167e <vfprintf+0x33e>
    165e:	a0 fe       	sbrs	r10, 0
    1660:	06 c0       	rjmp	.+12     	; 0x166e <vfprintf+0x32e>
    1662:	b2 14       	cp	r11, r2
    1664:	80 f4       	brcc	.+32     	; 0x1686 <vfprintf+0x346>
    1666:	28 0c       	add	r2, r8
    1668:	92 2c       	mov	r9, r2
    166a:	9b 18       	sub	r9, r11
    166c:	0d c0       	rjmp	.+26     	; 0x1688 <vfprintf+0x348>
    166e:	b2 14       	cp	r11, r2
    1670:	58 f4       	brcc	.+22     	; 0x1688 <vfprintf+0x348>
    1672:	b6 01       	movw	r22, r12
    1674:	80 e2       	ldi	r24, 0x20	; 32
    1676:	90 e0       	ldi	r25, 0x00	; 0
    1678:	90 d3       	rcall	.+1824   	; 0x1d9a <fputc>
    167a:	b3 94       	inc	r11
    167c:	f8 cf       	rjmp	.-16     	; 0x166e <vfprintf+0x32e>
    167e:	b2 14       	cp	r11, r2
    1680:	18 f4       	brcc	.+6      	; 0x1688 <vfprintf+0x348>
    1682:	2b 18       	sub	r2, r11
    1684:	02 c0       	rjmp	.+4      	; 0x168a <vfprintf+0x34a>
    1686:	98 2c       	mov	r9, r8
    1688:	21 2c       	mov	r2, r1
    168a:	a4 fe       	sbrs	r10, 4
    168c:	0f c0       	rjmp	.+30     	; 0x16ac <vfprintf+0x36c>
    168e:	b6 01       	movw	r22, r12
    1690:	80 e3       	ldi	r24, 0x30	; 48
    1692:	90 e0       	ldi	r25, 0x00	; 0
    1694:	82 d3       	rcall	.+1796   	; 0x1d9a <fputc>
    1696:	a2 fe       	sbrs	r10, 2
    1698:	16 c0       	rjmp	.+44     	; 0x16c6 <vfprintf+0x386>
    169a:	a1 fc       	sbrc	r10, 1
    169c:	03 c0       	rjmp	.+6      	; 0x16a4 <vfprintf+0x364>
    169e:	88 e7       	ldi	r24, 0x78	; 120
    16a0:	90 e0       	ldi	r25, 0x00	; 0
    16a2:	02 c0       	rjmp	.+4      	; 0x16a8 <vfprintf+0x368>
    16a4:	88 e5       	ldi	r24, 0x58	; 88
    16a6:	90 e0       	ldi	r25, 0x00	; 0
    16a8:	b6 01       	movw	r22, r12
    16aa:	0c c0       	rjmp	.+24     	; 0x16c4 <vfprintf+0x384>
    16ac:	8a 2d       	mov	r24, r10
    16ae:	86 78       	andi	r24, 0x86	; 134
    16b0:	51 f0       	breq	.+20     	; 0x16c6 <vfprintf+0x386>
    16b2:	a1 fe       	sbrs	r10, 1
    16b4:	02 c0       	rjmp	.+4      	; 0x16ba <vfprintf+0x37a>
    16b6:	8b e2       	ldi	r24, 0x2B	; 43
    16b8:	01 c0       	rjmp	.+2      	; 0x16bc <vfprintf+0x37c>
    16ba:	80 e2       	ldi	r24, 0x20	; 32
    16bc:	a7 fc       	sbrc	r10, 7
    16be:	8d e2       	ldi	r24, 0x2D	; 45
    16c0:	b6 01       	movw	r22, r12
    16c2:	90 e0       	ldi	r25, 0x00	; 0
    16c4:	6a d3       	rcall	.+1748   	; 0x1d9a <fputc>
    16c6:	89 14       	cp	r8, r9
    16c8:	30 f4       	brcc	.+12     	; 0x16d6 <vfprintf+0x396>
    16ca:	b6 01       	movw	r22, r12
    16cc:	80 e3       	ldi	r24, 0x30	; 48
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	64 d3       	rcall	.+1736   	; 0x1d9a <fputc>
    16d2:	9a 94       	dec	r9
    16d4:	f8 cf       	rjmp	.-16     	; 0x16c6 <vfprintf+0x386>
    16d6:	8a 94       	dec	r8
    16d8:	f3 01       	movw	r30, r6
    16da:	e8 0d       	add	r30, r8
    16dc:	f1 1d       	adc	r31, r1
    16de:	80 81       	ld	r24, Z
    16e0:	b6 01       	movw	r22, r12
    16e2:	90 e0       	ldi	r25, 0x00	; 0
    16e4:	5a d3       	rcall	.+1716   	; 0x1d9a <fputc>
    16e6:	81 10       	cpse	r8, r1
    16e8:	f6 cf       	rjmp	.-20     	; 0x16d6 <vfprintf+0x396>
    16ea:	22 20       	and	r2, r2
    16ec:	09 f4       	brne	.+2      	; 0x16f0 <vfprintf+0x3b0>
    16ee:	4e ce       	rjmp	.-868    	; 0x138c <vfprintf+0x4c>
    16f0:	b6 01       	movw	r22, r12
    16f2:	80 e2       	ldi	r24, 0x20	; 32
    16f4:	90 e0       	ldi	r25, 0x00	; 0
    16f6:	51 d3       	rcall	.+1698   	; 0x1d9a <fputc>
    16f8:	2a 94       	dec	r2
    16fa:	f7 cf       	rjmp	.-18     	; 0x16ea <vfprintf+0x3aa>
    16fc:	f6 01       	movw	r30, r12
    16fe:	86 81       	ldd	r24, Z+6	; 0x06
    1700:	97 81       	ldd	r25, Z+7	; 0x07
    1702:	02 c0       	rjmp	.+4      	; 0x1708 <vfprintf+0x3c8>
    1704:	8f ef       	ldi	r24, 0xFF	; 255
    1706:	9f ef       	ldi	r25, 0xFF	; 255
    1708:	2b 96       	adiw	r28, 0x0b	; 11
    170a:	0f b6       	in	r0, 0x3f	; 63
    170c:	f8 94       	cli
    170e:	de bf       	out	0x3e, r29	; 62
    1710:	0f be       	out	0x3f, r0	; 63
    1712:	cd bf       	out	0x3d, r28	; 61
    1714:	df 91       	pop	r29
    1716:	cf 91       	pop	r28
    1718:	1f 91       	pop	r17
    171a:	0f 91       	pop	r16
    171c:	ff 90       	pop	r15
    171e:	ef 90       	pop	r14
    1720:	df 90       	pop	r13
    1722:	cf 90       	pop	r12
    1724:	bf 90       	pop	r11
    1726:	af 90       	pop	r10
    1728:	9f 90       	pop	r9
    172a:	8f 90       	pop	r8
    172c:	7f 90       	pop	r7
    172e:	6f 90       	pop	r6
    1730:	5f 90       	pop	r5
    1732:	4f 90       	pop	r4
    1734:	3f 90       	pop	r3
    1736:	2f 90       	pop	r2
    1738:	08 95       	ret

0000173a <putval>:
    173a:	20 fd       	sbrc	r18, 0
    173c:	09 c0       	rjmp	.+18     	; 0x1750 <putval+0x16>
    173e:	fc 01       	movw	r30, r24
    1740:	23 fd       	sbrc	r18, 3
    1742:	05 c0       	rjmp	.+10     	; 0x174e <putval+0x14>
    1744:	22 ff       	sbrs	r18, 2
    1746:	02 c0       	rjmp	.+4      	; 0x174c <putval+0x12>
    1748:	73 83       	std	Z+3, r23	; 0x03
    174a:	62 83       	std	Z+2, r22	; 0x02
    174c:	51 83       	std	Z+1, r21	; 0x01
    174e:	40 83       	st	Z, r20
    1750:	08 95       	ret

00001752 <mulacc>:
    1752:	44 fd       	sbrc	r20, 4
    1754:	17 c0       	rjmp	.+46     	; 0x1784 <mulacc+0x32>
    1756:	46 fd       	sbrc	r20, 6
    1758:	17 c0       	rjmp	.+46     	; 0x1788 <mulacc+0x36>
    175a:	ab 01       	movw	r20, r22
    175c:	bc 01       	movw	r22, r24
    175e:	da 01       	movw	r26, r20
    1760:	fb 01       	movw	r30, r22
    1762:	aa 0f       	add	r26, r26
    1764:	bb 1f       	adc	r27, r27
    1766:	ee 1f       	adc	r30, r30
    1768:	ff 1f       	adc	r31, r31
    176a:	10 94       	com	r1
    176c:	d1 f7       	brne	.-12     	; 0x1762 <mulacc+0x10>
    176e:	4a 0f       	add	r20, r26
    1770:	5b 1f       	adc	r21, r27
    1772:	6e 1f       	adc	r22, r30
    1774:	7f 1f       	adc	r23, r31
    1776:	cb 01       	movw	r24, r22
    1778:	ba 01       	movw	r22, r20
    177a:	66 0f       	add	r22, r22
    177c:	77 1f       	adc	r23, r23
    177e:	88 1f       	adc	r24, r24
    1780:	99 1f       	adc	r25, r25
    1782:	09 c0       	rjmp	.+18     	; 0x1796 <mulacc+0x44>
    1784:	33 e0       	ldi	r19, 0x03	; 3
    1786:	01 c0       	rjmp	.+2      	; 0x178a <mulacc+0x38>
    1788:	34 e0       	ldi	r19, 0x04	; 4
    178a:	66 0f       	add	r22, r22
    178c:	77 1f       	adc	r23, r23
    178e:	88 1f       	adc	r24, r24
    1790:	99 1f       	adc	r25, r25
    1792:	31 50       	subi	r19, 0x01	; 1
    1794:	d1 f7       	brne	.-12     	; 0x178a <mulacc+0x38>
    1796:	62 0f       	add	r22, r18
    1798:	71 1d       	adc	r23, r1
    179a:	81 1d       	adc	r24, r1
    179c:	91 1d       	adc	r25, r1
    179e:	08 95       	ret

000017a0 <skip_spaces>:
    17a0:	0f 93       	push	r16
    17a2:	1f 93       	push	r17
    17a4:	cf 93       	push	r28
    17a6:	df 93       	push	r29
    17a8:	8c 01       	movw	r16, r24
    17aa:	c8 01       	movw	r24, r16
    17ac:	b8 d2       	rcall	.+1392   	; 0x1d1e <fgetc>
    17ae:	ec 01       	movw	r28, r24
    17b0:	97 fd       	sbrc	r25, 7
    17b2:	06 c0       	rjmp	.+12     	; 0x17c0 <skip_spaces+0x20>
    17b4:	8b d2       	rcall	.+1302   	; 0x1ccc <isspace>
    17b6:	89 2b       	or	r24, r25
    17b8:	c1 f7       	brne	.-16     	; 0x17aa <skip_spaces+0xa>
    17ba:	b8 01       	movw	r22, r16
    17bc:	ce 01       	movw	r24, r28
    17be:	29 d3       	rcall	.+1618   	; 0x1e12 <ungetc>
    17c0:	ce 01       	movw	r24, r28
    17c2:	df 91       	pop	r29
    17c4:	cf 91       	pop	r28
    17c6:	1f 91       	pop	r17
    17c8:	0f 91       	pop	r16
    17ca:	08 95       	ret

000017cc <conv_int>:
    17cc:	8f 92       	push	r8
    17ce:	9f 92       	push	r9
    17d0:	af 92       	push	r10
    17d2:	bf 92       	push	r11
    17d4:	ef 92       	push	r14
    17d6:	ff 92       	push	r15
    17d8:	0f 93       	push	r16
    17da:	1f 93       	push	r17
    17dc:	cf 93       	push	r28
    17de:	df 93       	push	r29
    17e0:	8c 01       	movw	r16, r24
    17e2:	d6 2f       	mov	r29, r22
    17e4:	7a 01       	movw	r14, r20
    17e6:	b2 2e       	mov	r11, r18
    17e8:	9a d2       	rcall	.+1332   	; 0x1d1e <fgetc>
    17ea:	9c 01       	movw	r18, r24
    17ec:	33 27       	eor	r19, r19
    17ee:	2b 32       	cpi	r18, 0x2B	; 43
    17f0:	31 05       	cpc	r19, r1
    17f2:	31 f0       	breq	.+12     	; 0x1800 <conv_int+0x34>
    17f4:	2d 32       	cpi	r18, 0x2D	; 45
    17f6:	31 05       	cpc	r19, r1
    17f8:	59 f4       	brne	.+22     	; 0x1810 <conv_int+0x44>
    17fa:	8b 2d       	mov	r24, r11
    17fc:	80 68       	ori	r24, 0x80	; 128
    17fe:	b8 2e       	mov	r11, r24
    1800:	d1 50       	subi	r29, 0x01	; 1
    1802:	11 f4       	brne	.+4      	; 0x1808 <conv_int+0x3c>
    1804:	80 e0       	ldi	r24, 0x00	; 0
    1806:	61 c0       	rjmp	.+194    	; 0x18ca <conv_int+0xfe>
    1808:	c8 01       	movw	r24, r16
    180a:	89 d2       	rcall	.+1298   	; 0x1d1e <fgetc>
    180c:	97 fd       	sbrc	r25, 7
    180e:	fa cf       	rjmp	.-12     	; 0x1804 <conv_int+0x38>
    1810:	cb 2d       	mov	r28, r11
    1812:	cd 7f       	andi	r28, 0xFD	; 253
    1814:	2b 2d       	mov	r18, r11
    1816:	20 73       	andi	r18, 0x30	; 48
    1818:	f9 f4       	brne	.+62     	; 0x1858 <conv_int+0x8c>
    181a:	80 33       	cpi	r24, 0x30	; 48
    181c:	e9 f4       	brne	.+58     	; 0x1858 <conv_int+0x8c>
    181e:	aa 24       	eor	r10, r10
    1820:	aa 94       	dec	r10
    1822:	ad 0e       	add	r10, r29
    1824:	09 f4       	brne	.+2      	; 0x1828 <conv_int+0x5c>
    1826:	3e c0       	rjmp	.+124    	; 0x18a4 <conv_int+0xd8>
    1828:	c8 01       	movw	r24, r16
    182a:	79 d2       	rcall	.+1266   	; 0x1d1e <fgetc>
    182c:	97 fd       	sbrc	r25, 7
    182e:	3a c0       	rjmp	.+116    	; 0x18a4 <conv_int+0xd8>
    1830:	9c 01       	movw	r18, r24
    1832:	2f 7d       	andi	r18, 0xDF	; 223
    1834:	33 27       	eor	r19, r19
    1836:	28 35       	cpi	r18, 0x58	; 88
    1838:	31 05       	cpc	r19, r1
    183a:	41 f4       	brne	.+16     	; 0x184c <conv_int+0x80>
    183c:	c2 64       	ori	r28, 0x42	; 66
    183e:	d2 50       	subi	r29, 0x02	; 2
    1840:	89 f1       	breq	.+98     	; 0x18a4 <conv_int+0xd8>
    1842:	c8 01       	movw	r24, r16
    1844:	6c d2       	rcall	.+1240   	; 0x1d1e <fgetc>
    1846:	97 ff       	sbrs	r25, 7
    1848:	07 c0       	rjmp	.+14     	; 0x1858 <conv_int+0x8c>
    184a:	2c c0       	rjmp	.+88     	; 0x18a4 <conv_int+0xd8>
    184c:	b6 fe       	sbrs	r11, 6
    184e:	02 c0       	rjmp	.+4      	; 0x1854 <conv_int+0x88>
    1850:	c2 60       	ori	r28, 0x02	; 2
    1852:	01 c0       	rjmp	.+2      	; 0x1856 <conv_int+0x8a>
    1854:	c2 61       	ori	r28, 0x12	; 18
    1856:	da 2d       	mov	r29, r10
    1858:	81 2c       	mov	r8, r1
    185a:	91 2c       	mov	r9, r1
    185c:	54 01       	movw	r10, r8
    185e:	20 ed       	ldi	r18, 0xD0	; 208
    1860:	28 0f       	add	r18, r24
    1862:	28 30       	cpi	r18, 0x08	; 8
    1864:	78 f0       	brcs	.+30     	; 0x1884 <conv_int+0xb8>
    1866:	c4 ff       	sbrs	r28, 4
    1868:	03 c0       	rjmp	.+6      	; 0x1870 <conv_int+0xa4>
    186a:	b8 01       	movw	r22, r16
    186c:	d2 d2       	rcall	.+1444   	; 0x1e12 <ungetc>
    186e:	17 c0       	rjmp	.+46     	; 0x189e <conv_int+0xd2>
    1870:	2a 30       	cpi	r18, 0x0A	; 10
    1872:	40 f0       	brcs	.+16     	; 0x1884 <conv_int+0xb8>
    1874:	c6 ff       	sbrs	r28, 6
    1876:	f9 cf       	rjmp	.-14     	; 0x186a <conv_int+0x9e>
    1878:	2f 7d       	andi	r18, 0xDF	; 223
    187a:	3f ee       	ldi	r19, 0xEF	; 239
    187c:	32 0f       	add	r19, r18
    187e:	36 30       	cpi	r19, 0x06	; 6
    1880:	a0 f7       	brcc	.-24     	; 0x186a <conv_int+0x9e>
    1882:	27 50       	subi	r18, 0x07	; 7
    1884:	4c 2f       	mov	r20, r28
    1886:	c5 01       	movw	r24, r10
    1888:	b4 01       	movw	r22, r8
    188a:	63 df       	rcall	.-314    	; 0x1752 <mulacc>
    188c:	4b 01       	movw	r8, r22
    188e:	5c 01       	movw	r10, r24
    1890:	c2 60       	ori	r28, 0x02	; 2
    1892:	d1 50       	subi	r29, 0x01	; 1
    1894:	51 f0       	breq	.+20     	; 0x18aa <conv_int+0xde>
    1896:	c8 01       	movw	r24, r16
    1898:	42 d2       	rcall	.+1156   	; 0x1d1e <fgetc>
    189a:	97 ff       	sbrs	r25, 7
    189c:	e0 cf       	rjmp	.-64     	; 0x185e <conv_int+0x92>
    189e:	c1 fd       	sbrc	r28, 1
    18a0:	04 c0       	rjmp	.+8      	; 0x18aa <conv_int+0xde>
    18a2:	b0 cf       	rjmp	.-160    	; 0x1804 <conv_int+0x38>
    18a4:	81 2c       	mov	r8, r1
    18a6:	91 2c       	mov	r9, r1
    18a8:	54 01       	movw	r10, r8
    18aa:	c7 ff       	sbrs	r28, 7
    18ac:	08 c0       	rjmp	.+16     	; 0x18be <conv_int+0xf2>
    18ae:	b0 94       	com	r11
    18b0:	a0 94       	com	r10
    18b2:	90 94       	com	r9
    18b4:	80 94       	com	r8
    18b6:	81 1c       	adc	r8, r1
    18b8:	91 1c       	adc	r9, r1
    18ba:	a1 1c       	adc	r10, r1
    18bc:	b1 1c       	adc	r11, r1
    18be:	2c 2f       	mov	r18, r28
    18c0:	b5 01       	movw	r22, r10
    18c2:	a4 01       	movw	r20, r8
    18c4:	c7 01       	movw	r24, r14
    18c6:	39 df       	rcall	.-398    	; 0x173a <putval>
    18c8:	81 e0       	ldi	r24, 0x01	; 1
    18ca:	df 91       	pop	r29
    18cc:	cf 91       	pop	r28
    18ce:	1f 91       	pop	r17
    18d0:	0f 91       	pop	r16
    18d2:	ff 90       	pop	r15
    18d4:	ef 90       	pop	r14
    18d6:	bf 90       	pop	r11
    18d8:	af 90       	pop	r10
    18da:	9f 90       	pop	r9
    18dc:	8f 90       	pop	r8
    18de:	08 95       	ret

000018e0 <conv_brk>:
    18e0:	5f 92       	push	r5
    18e2:	6f 92       	push	r6
    18e4:	7f 92       	push	r7
    18e6:	8f 92       	push	r8
    18e8:	9f 92       	push	r9
    18ea:	af 92       	push	r10
    18ec:	bf 92       	push	r11
    18ee:	cf 92       	push	r12
    18f0:	df 92       	push	r13
    18f2:	ef 92       	push	r14
    18f4:	ff 92       	push	r15
    18f6:	0f 93       	push	r16
    18f8:	1f 93       	push	r17
    18fa:	cf 93       	push	r28
    18fc:	df 93       	push	r29
    18fe:	cd b7       	in	r28, 0x3d	; 61
    1900:	de b7       	in	r29, 0x3e	; 62
    1902:	a0 97       	sbiw	r28, 0x20	; 32
    1904:	0f b6       	in	r0, 0x3f	; 63
    1906:	f8 94       	cli
    1908:	de bf       	out	0x3e, r29	; 62
    190a:	0f be       	out	0x3f, r0	; 63
    190c:	cd bf       	out	0x3d, r28	; 61
    190e:	5c 01       	movw	r10, r24
    1910:	96 2e       	mov	r9, r22
    1912:	7a 01       	movw	r14, r20
    1914:	f9 01       	movw	r30, r18
    1916:	8e 01       	movw	r16, r28
    1918:	0f 5f       	subi	r16, 0xFF	; 255
    191a:	1f 4f       	sbci	r17, 0xFF	; 255
    191c:	68 01       	movw	r12, r16
    191e:	80 e2       	ldi	r24, 0x20	; 32
    1920:	d8 01       	movw	r26, r16
    1922:	1d 92       	st	X+, r1
    1924:	8a 95       	dec	r24
    1926:	e9 f7       	brne	.-6      	; 0x1922 <conv_brk+0x42>
    1928:	d5 01       	movw	r26, r10
    192a:	13 96       	adiw	r26, 0x03	; 3
    192c:	8c 90       	ld	r8, X
    192e:	80 e0       	ldi	r24, 0x00	; 0
    1930:	90 e0       	ldi	r25, 0x00	; 0
    1932:	61 2c       	mov	r6, r1
    1934:	71 2c       	mov	r7, r1
    1936:	30 e0       	ldi	r19, 0x00	; 0
    1938:	61 e0       	ldi	r22, 0x01	; 1
    193a:	70 e0       	ldi	r23, 0x00	; 0
    193c:	83 fc       	sbrc	r8, 3
    193e:	25 91       	lpm	r18, Z+
    1940:	83 fe       	sbrs	r8, 3
    1942:	21 91       	ld	r18, Z+
    1944:	8f 01       	movw	r16, r30
    1946:	52 2e       	mov	r5, r18
    1948:	21 11       	cpse	r18, r1
    194a:	03 c0       	rjmp	.+6      	; 0x1952 <conv_brk+0x72>
    194c:	80 e0       	ldi	r24, 0x00	; 0
    194e:	90 e0       	ldi	r25, 0x00	; 0
    1950:	90 c0       	rjmp	.+288    	; 0x1a72 <conv_brk+0x192>
    1952:	2e 35       	cpi	r18, 0x5E	; 94
    1954:	11 f4       	brne	.+4      	; 0x195a <conv_brk+0x7a>
    1956:	00 97       	sbiw	r24, 0x00	; 0
    1958:	51 f1       	breq	.+84     	; 0x19ae <conv_brk+0xce>
    195a:	43 2f       	mov	r20, r19
    195c:	50 e0       	ldi	r21, 0x00	; 0
    195e:	48 17       	cp	r20, r24
    1960:	59 07       	cpc	r21, r25
    1962:	3c f4       	brge	.+14     	; 0x1972 <conv_brk+0x92>
    1964:	2d 35       	cpi	r18, 0x5D	; 93
    1966:	59 f1       	breq	.+86     	; 0x19be <conv_brk+0xde>
    1968:	2d 32       	cpi	r18, 0x2D	; 45
    196a:	19 f4       	brne	.+6      	; 0x1972 <conv_brk+0x92>
    196c:	77 20       	and	r7, r7
    196e:	09 f1       	breq	.+66     	; 0x19b2 <conv_brk+0xd2>
    1970:	03 c0       	rjmp	.+6      	; 0x1978 <conv_brk+0x98>
    1972:	77 20       	and	r7, r7
    1974:	09 f4       	brne	.+2      	; 0x1978 <conv_brk+0x98>
    1976:	68 c0       	rjmp	.+208    	; 0x1a48 <conv_brk+0x168>
    1978:	45 2d       	mov	r20, r5
    197a:	46 95       	lsr	r20
    197c:	46 95       	lsr	r20
    197e:	46 95       	lsr	r20
    1980:	d6 01       	movw	r26, r12
    1982:	a4 0f       	add	r26, r20
    1984:	b1 1d       	adc	r27, r1
    1986:	45 2d       	mov	r20, r5
    1988:	47 70       	andi	r20, 0x07	; 7
    198a:	8b 01       	movw	r16, r22
    198c:	02 c0       	rjmp	.+4      	; 0x1992 <conv_brk+0xb2>
    198e:	00 0f       	add	r16, r16
    1990:	11 1f       	adc	r17, r17
    1992:	4a 95       	dec	r20
    1994:	e2 f7       	brpl	.-8      	; 0x198e <conv_brk+0xae>
    1996:	a8 01       	movw	r20, r16
    1998:	5c 91       	ld	r21, X
    199a:	45 2b       	or	r20, r21
    199c:	4c 93       	st	X, r20
    199e:	65 14       	cp	r6, r5
    19a0:	59 f0       	breq	.+22     	; 0x19b8 <conv_brk+0xd8>
    19a2:	56 14       	cp	r5, r6
    19a4:	10 f4       	brcc	.+4      	; 0x19aa <conv_brk+0xca>
    19a6:	53 94       	inc	r5
    19a8:	e7 cf       	rjmp	.-50     	; 0x1978 <conv_brk+0x98>
    19aa:	5a 94       	dec	r5
    19ac:	e5 cf       	rjmp	.-54     	; 0x1978 <conv_brk+0x98>
    19ae:	31 e0       	ldi	r19, 0x01	; 1
    19b0:	04 c0       	rjmp	.+8      	; 0x19ba <conv_brk+0xda>
    19b2:	77 24       	eor	r7, r7
    19b4:	73 94       	inc	r7
    19b6:	01 c0       	rjmp	.+2      	; 0x19ba <conv_brk+0xda>
    19b8:	71 2c       	mov	r7, r1
    19ba:	01 96       	adiw	r24, 0x01	; 1
    19bc:	bf cf       	rjmp	.-130    	; 0x193c <conv_brk+0x5c>
    19be:	77 20       	and	r7, r7
    19c0:	19 f0       	breq	.+6      	; 0x19c8 <conv_brk+0xe8>
    19c2:	8e 81       	ldd	r24, Y+6	; 0x06
    19c4:	80 62       	ori	r24, 0x20	; 32
    19c6:	8e 83       	std	Y+6, r24	; 0x06
    19c8:	31 11       	cpse	r19, r1
    19ca:	03 c0       	rjmp	.+6      	; 0x19d2 <conv_brk+0xf2>
    19cc:	88 24       	eor	r8, r8
    19ce:	83 94       	inc	r8
    19d0:	17 c0       	rjmp	.+46     	; 0x1a00 <conv_brk+0x120>
    19d2:	f6 01       	movw	r30, r12
    19d4:	9e 01       	movw	r18, r28
    19d6:	2f 5d       	subi	r18, 0xDF	; 223
    19d8:	3f 4f       	sbci	r19, 0xFF	; 255
    19da:	80 81       	ld	r24, Z
    19dc:	80 95       	com	r24
    19de:	81 93       	st	Z+, r24
    19e0:	2e 17       	cp	r18, r30
    19e2:	3f 07       	cpc	r19, r31
    19e4:	d1 f7       	brne	.-12     	; 0x19da <conv_brk+0xfa>
    19e6:	f2 cf       	rjmp	.-28     	; 0x19cc <conv_brk+0xec>
    19e8:	e1 14       	cp	r14, r1
    19ea:	f1 04       	cpc	r15, r1
    19ec:	29 f0       	breq	.+10     	; 0x19f8 <conv_brk+0x118>
    19ee:	d7 01       	movw	r26, r14
    19f0:	8c 93       	st	X, r24
    19f2:	f7 01       	movw	r30, r14
    19f4:	31 96       	adiw	r30, 0x01	; 1
    19f6:	7f 01       	movw	r14, r30
    19f8:	9a 94       	dec	r9
    19fa:	81 2c       	mov	r8, r1
    19fc:	99 20       	and	r9, r9
    19fe:	e9 f0       	breq	.+58     	; 0x1a3a <conv_brk+0x15a>
    1a00:	c5 01       	movw	r24, r10
    1a02:	8d d1       	rcall	.+794    	; 0x1d1e <fgetc>
    1a04:	97 fd       	sbrc	r25, 7
    1a06:	17 c0       	rjmp	.+46     	; 0x1a36 <conv_brk+0x156>
    1a08:	fc 01       	movw	r30, r24
    1a0a:	ff 27       	eor	r31, r31
    1a0c:	23 e0       	ldi	r18, 0x03	; 3
    1a0e:	f5 95       	asr	r31
    1a10:	e7 95       	ror	r30
    1a12:	2a 95       	dec	r18
    1a14:	e1 f7       	brne	.-8      	; 0x1a0e <conv_brk+0x12e>
    1a16:	ec 0d       	add	r30, r12
    1a18:	fd 1d       	adc	r31, r13
    1a1a:	20 81       	ld	r18, Z
    1a1c:	30 e0       	ldi	r19, 0x00	; 0
    1a1e:	ac 01       	movw	r20, r24
    1a20:	47 70       	andi	r20, 0x07	; 7
    1a22:	55 27       	eor	r21, r21
    1a24:	02 c0       	rjmp	.+4      	; 0x1a2a <conv_brk+0x14a>
    1a26:	35 95       	asr	r19
    1a28:	27 95       	ror	r18
    1a2a:	4a 95       	dec	r20
    1a2c:	e2 f7       	brpl	.-8      	; 0x1a26 <conv_brk+0x146>
    1a2e:	20 fd       	sbrc	r18, 0
    1a30:	db cf       	rjmp	.-74     	; 0x19e8 <conv_brk+0x108>
    1a32:	b5 01       	movw	r22, r10
    1a34:	ee d1       	rcall	.+988    	; 0x1e12 <ungetc>
    1a36:	81 10       	cpse	r8, r1
    1a38:	89 cf       	rjmp	.-238    	; 0x194c <conv_brk+0x6c>
    1a3a:	e1 14       	cp	r14, r1
    1a3c:	f1 04       	cpc	r15, r1
    1a3e:	11 f0       	breq	.+4      	; 0x1a44 <conv_brk+0x164>
    1a40:	d7 01       	movw	r26, r14
    1a42:	1c 92       	st	X, r1
    1a44:	c8 01       	movw	r24, r16
    1a46:	15 c0       	rjmp	.+42     	; 0x1a72 <conv_brk+0x192>
    1a48:	42 2f       	mov	r20, r18
    1a4a:	46 95       	lsr	r20
    1a4c:	46 95       	lsr	r20
    1a4e:	46 95       	lsr	r20
    1a50:	d6 01       	movw	r26, r12
    1a52:	a4 0f       	add	r26, r20
    1a54:	b1 1d       	adc	r27, r1
    1a56:	42 2f       	mov	r20, r18
    1a58:	47 70       	andi	r20, 0x07	; 7
    1a5a:	8b 01       	movw	r16, r22
    1a5c:	02 c0       	rjmp	.+4      	; 0x1a62 <conv_brk+0x182>
    1a5e:	00 0f       	add	r16, r16
    1a60:	11 1f       	adc	r17, r17
    1a62:	4a 95       	dec	r20
    1a64:	e2 f7       	brpl	.-8      	; 0x1a5e <conv_brk+0x17e>
    1a66:	a8 01       	movw	r20, r16
    1a68:	5c 91       	ld	r21, X
    1a6a:	45 2b       	or	r20, r21
    1a6c:	4c 93       	st	X, r20
    1a6e:	62 2e       	mov	r6, r18
    1a70:	a4 cf       	rjmp	.-184    	; 0x19ba <conv_brk+0xda>
    1a72:	a0 96       	adiw	r28, 0x20	; 32
    1a74:	0f b6       	in	r0, 0x3f	; 63
    1a76:	f8 94       	cli
    1a78:	de bf       	out	0x3e, r29	; 62
    1a7a:	0f be       	out	0x3f, r0	; 63
    1a7c:	cd bf       	out	0x3d, r28	; 61
    1a7e:	df 91       	pop	r29
    1a80:	cf 91       	pop	r28
    1a82:	1f 91       	pop	r17
    1a84:	0f 91       	pop	r16
    1a86:	ff 90       	pop	r15
    1a88:	ef 90       	pop	r14
    1a8a:	df 90       	pop	r13
    1a8c:	cf 90       	pop	r12
    1a8e:	bf 90       	pop	r11
    1a90:	af 90       	pop	r10
    1a92:	9f 90       	pop	r9
    1a94:	8f 90       	pop	r8
    1a96:	7f 90       	pop	r7
    1a98:	6f 90       	pop	r6
    1a9a:	5f 90       	pop	r5
    1a9c:	08 95       	ret

00001a9e <vfscanf>:
    1a9e:	5f 92       	push	r5
    1aa0:	6f 92       	push	r6
    1aa2:	7f 92       	push	r7
    1aa4:	8f 92       	push	r8
    1aa6:	9f 92       	push	r9
    1aa8:	af 92       	push	r10
    1aaa:	bf 92       	push	r11
    1aac:	cf 92       	push	r12
    1aae:	df 92       	push	r13
    1ab0:	ef 92       	push	r14
    1ab2:	ff 92       	push	r15
    1ab4:	0f 93       	push	r16
    1ab6:	1f 93       	push	r17
    1ab8:	cf 93       	push	r28
    1aba:	df 93       	push	r29
    1abc:	6c 01       	movw	r12, r24
    1abe:	eb 01       	movw	r28, r22
    1ac0:	5a 01       	movw	r10, r20
    1ac2:	fc 01       	movw	r30, r24
    1ac4:	17 82       	std	Z+7, r1	; 0x07
    1ac6:	16 82       	std	Z+6, r1	; 0x06
    1ac8:	51 2c       	mov	r5, r1
    1aca:	f6 01       	movw	r30, r12
    1acc:	e3 80       	ldd	r14, Z+3	; 0x03
    1ace:	fe 01       	movw	r30, r28
    1ad0:	e3 fc       	sbrc	r14, 3
    1ad2:	85 91       	lpm	r24, Z+
    1ad4:	e3 fe       	sbrs	r14, 3
    1ad6:	81 91       	ld	r24, Z+
    1ad8:	18 2f       	mov	r17, r24
    1ada:	ef 01       	movw	r28, r30
    1adc:	88 23       	and	r24, r24
    1ade:	09 f4       	brne	.+2      	; 0x1ae2 <vfscanf+0x44>
    1ae0:	e0 c0       	rjmp	.+448    	; 0x1ca2 <vfscanf+0x204>
    1ae2:	90 e0       	ldi	r25, 0x00	; 0
    1ae4:	f3 d0       	rcall	.+486    	; 0x1ccc <isspace>
    1ae6:	89 2b       	or	r24, r25
    1ae8:	19 f0       	breq	.+6      	; 0x1af0 <vfscanf+0x52>
    1aea:	c6 01       	movw	r24, r12
    1aec:	59 de       	rcall	.-846    	; 0x17a0 <skip_spaces>
    1aee:	ed cf       	rjmp	.-38     	; 0x1aca <vfscanf+0x2c>
    1af0:	15 32       	cpi	r17, 0x25	; 37
    1af2:	41 f4       	brne	.+16     	; 0x1b04 <vfscanf+0x66>
    1af4:	fe 01       	movw	r30, r28
    1af6:	e3 fc       	sbrc	r14, 3
    1af8:	15 91       	lpm	r17, Z+
    1afa:	e3 fe       	sbrs	r14, 3
    1afc:	11 91       	ld	r17, Z+
    1afe:	ef 01       	movw	r28, r30
    1b00:	15 32       	cpi	r17, 0x25	; 37
    1b02:	71 f4       	brne	.+28     	; 0x1b20 <vfscanf+0x82>
    1b04:	c6 01       	movw	r24, r12
    1b06:	0b d1       	rcall	.+534    	; 0x1d1e <fgetc>
    1b08:	97 fd       	sbrc	r25, 7
    1b0a:	c9 c0       	rjmp	.+402    	; 0x1c9e <vfscanf+0x200>
    1b0c:	41 2f       	mov	r20, r17
    1b0e:	50 e0       	ldi	r21, 0x00	; 0
    1b10:	9c 01       	movw	r18, r24
    1b12:	33 27       	eor	r19, r19
    1b14:	24 17       	cp	r18, r20
    1b16:	35 07       	cpc	r19, r21
    1b18:	c1 f2       	breq	.-80     	; 0x1aca <vfscanf+0x2c>
    1b1a:	b6 01       	movw	r22, r12
    1b1c:	7a d1       	rcall	.+756    	; 0x1e12 <ungetc>
    1b1e:	c1 c0       	rjmp	.+386    	; 0x1ca2 <vfscanf+0x204>
    1b20:	1a 32       	cpi	r17, 0x2A	; 42
    1b22:	39 f4       	brne	.+14     	; 0x1b32 <vfscanf+0x94>
    1b24:	e3 fc       	sbrc	r14, 3
    1b26:	15 91       	lpm	r17, Z+
    1b28:	e3 fe       	sbrs	r14, 3
    1b2a:	11 91       	ld	r17, Z+
    1b2c:	ef 01       	movw	r28, r30
    1b2e:	01 e0       	ldi	r16, 0x01	; 1
    1b30:	01 c0       	rjmp	.+2      	; 0x1b34 <vfscanf+0x96>
    1b32:	00 e0       	ldi	r16, 0x00	; 0
    1b34:	f1 2c       	mov	r15, r1
    1b36:	20 ed       	ldi	r18, 0xD0	; 208
    1b38:	21 0f       	add	r18, r17
    1b3a:	2a 30       	cpi	r18, 0x0A	; 10
    1b3c:	78 f4       	brcc	.+30     	; 0x1b5c <vfscanf+0xbe>
    1b3e:	02 60       	ori	r16, 0x02	; 2
    1b40:	6f 2d       	mov	r22, r15
    1b42:	70 e0       	ldi	r23, 0x00	; 0
    1b44:	80 e0       	ldi	r24, 0x00	; 0
    1b46:	90 e0       	ldi	r25, 0x00	; 0
    1b48:	40 e2       	ldi	r20, 0x20	; 32
    1b4a:	03 de       	rcall	.-1018   	; 0x1752 <mulacc>
    1b4c:	f6 2e       	mov	r15, r22
    1b4e:	fe 01       	movw	r30, r28
    1b50:	e3 fc       	sbrc	r14, 3
    1b52:	15 91       	lpm	r17, Z+
    1b54:	e3 fe       	sbrs	r14, 3
    1b56:	11 91       	ld	r17, Z+
    1b58:	ef 01       	movw	r28, r30
    1b5a:	ed cf       	rjmp	.-38     	; 0x1b36 <vfscanf+0x98>
    1b5c:	01 ff       	sbrs	r16, 1
    1b5e:	03 c0       	rjmp	.+6      	; 0x1b66 <vfscanf+0xc8>
    1b60:	f1 10       	cpse	r15, r1
    1b62:	03 c0       	rjmp	.+6      	; 0x1b6a <vfscanf+0xcc>
    1b64:	9e c0       	rjmp	.+316    	; 0x1ca2 <vfscanf+0x204>
    1b66:	ff 24       	eor	r15, r15
    1b68:	fa 94       	dec	r15
    1b6a:	18 36       	cpi	r17, 0x68	; 104
    1b6c:	19 f0       	breq	.+6      	; 0x1b74 <vfscanf+0xd6>
    1b6e:	1c 36       	cpi	r17, 0x6C	; 108
    1b70:	51 f0       	breq	.+20     	; 0x1b86 <vfscanf+0xe8>
    1b72:	10 c0       	rjmp	.+32     	; 0x1b94 <vfscanf+0xf6>
    1b74:	fe 01       	movw	r30, r28
    1b76:	e3 fc       	sbrc	r14, 3
    1b78:	15 91       	lpm	r17, Z+
    1b7a:	e3 fe       	sbrs	r14, 3
    1b7c:	11 91       	ld	r17, Z+
    1b7e:	ef 01       	movw	r28, r30
    1b80:	18 36       	cpi	r17, 0x68	; 104
    1b82:	41 f4       	brne	.+16     	; 0x1b94 <vfscanf+0xf6>
    1b84:	08 60       	ori	r16, 0x08	; 8
    1b86:	04 60       	ori	r16, 0x04	; 4
    1b88:	fe 01       	movw	r30, r28
    1b8a:	e3 fc       	sbrc	r14, 3
    1b8c:	15 91       	lpm	r17, Z+
    1b8e:	e3 fe       	sbrs	r14, 3
    1b90:	11 91       	ld	r17, Z+
    1b92:	ef 01       	movw	r28, r30
    1b94:	11 23       	and	r17, r17
    1b96:	09 f4       	brne	.+2      	; 0x1b9a <vfscanf+0xfc>
    1b98:	84 c0       	rjmp	.+264    	; 0x1ca2 <vfscanf+0x204>
    1b9a:	61 2f       	mov	r22, r17
    1b9c:	70 e0       	ldi	r23, 0x00	; 0
    1b9e:	84 ee       	ldi	r24, 0xE4	; 228
    1ba0:	90 e0       	ldi	r25, 0x00	; 0
    1ba2:	9c d0       	rcall	.+312    	; 0x1cdc <strchr_P>
    1ba4:	89 2b       	or	r24, r25
    1ba6:	09 f4       	brne	.+2      	; 0x1baa <vfscanf+0x10c>
    1ba8:	7c c0       	rjmp	.+248    	; 0x1ca2 <vfscanf+0x204>
    1baa:	00 fd       	sbrc	r16, 0
    1bac:	07 c0       	rjmp	.+14     	; 0x1bbc <vfscanf+0x11e>
    1bae:	f5 01       	movw	r30, r10
    1bb0:	80 80       	ld	r8, Z
    1bb2:	91 80       	ldd	r9, Z+1	; 0x01
    1bb4:	c5 01       	movw	r24, r10
    1bb6:	02 96       	adiw	r24, 0x02	; 2
    1bb8:	5c 01       	movw	r10, r24
    1bba:	02 c0       	rjmp	.+4      	; 0x1bc0 <vfscanf+0x122>
    1bbc:	81 2c       	mov	r8, r1
    1bbe:	91 2c       	mov	r9, r1
    1bc0:	1e 36       	cpi	r17, 0x6E	; 110
    1bc2:	49 f4       	brne	.+18     	; 0x1bd6 <vfscanf+0x138>
    1bc4:	f6 01       	movw	r30, r12
    1bc6:	46 81       	ldd	r20, Z+6	; 0x06
    1bc8:	57 81       	ldd	r21, Z+7	; 0x07
    1bca:	60 e0       	ldi	r22, 0x00	; 0
    1bcc:	70 e0       	ldi	r23, 0x00	; 0
    1bce:	20 2f       	mov	r18, r16
    1bd0:	c4 01       	movw	r24, r8
    1bd2:	b3 dd       	rcall	.-1178   	; 0x173a <putval>
    1bd4:	7a cf       	rjmp	.-268    	; 0x1aca <vfscanf+0x2c>
    1bd6:	13 36       	cpi	r17, 0x63	; 99
    1bd8:	a1 f4       	brne	.+40     	; 0x1c02 <vfscanf+0x164>
    1bda:	01 fd       	sbrc	r16, 1
    1bdc:	02 c0       	rjmp	.+4      	; 0x1be2 <vfscanf+0x144>
    1bde:	ff 24       	eor	r15, r15
    1be0:	f3 94       	inc	r15
    1be2:	c6 01       	movw	r24, r12
    1be4:	9c d0       	rcall	.+312    	; 0x1d1e <fgetc>
    1be6:	97 fd       	sbrc	r25, 7
    1be8:	5a c0       	rjmp	.+180    	; 0x1c9e <vfscanf+0x200>
    1bea:	81 14       	cp	r8, r1
    1bec:	91 04       	cpc	r9, r1
    1bee:	29 f0       	breq	.+10     	; 0x1bfa <vfscanf+0x15c>
    1bf0:	f4 01       	movw	r30, r8
    1bf2:	80 83       	st	Z, r24
    1bf4:	c4 01       	movw	r24, r8
    1bf6:	01 96       	adiw	r24, 0x01	; 1
    1bf8:	4c 01       	movw	r8, r24
    1bfa:	fa 94       	dec	r15
    1bfc:	f1 10       	cpse	r15, r1
    1bfe:	f1 cf       	rjmp	.-30     	; 0x1be2 <vfscanf+0x144>
    1c00:	4a c0       	rjmp	.+148    	; 0x1c96 <vfscanf+0x1f8>
    1c02:	1b 35       	cpi	r17, 0x5B	; 91
    1c04:	51 f4       	brne	.+20     	; 0x1c1a <vfscanf+0x17c>
    1c06:	9e 01       	movw	r18, r28
    1c08:	a4 01       	movw	r20, r8
    1c0a:	6f 2d       	mov	r22, r15
    1c0c:	c6 01       	movw	r24, r12
    1c0e:	68 de       	rcall	.-816    	; 0x18e0 <conv_brk>
    1c10:	ec 01       	movw	r28, r24
    1c12:	89 2b       	or	r24, r25
    1c14:	09 f0       	breq	.+2      	; 0x1c18 <vfscanf+0x17a>
    1c16:	3f c0       	rjmp	.+126    	; 0x1c96 <vfscanf+0x1f8>
    1c18:	39 c0       	rjmp	.+114    	; 0x1c8c <vfscanf+0x1ee>
    1c1a:	c6 01       	movw	r24, r12
    1c1c:	c1 dd       	rcall	.-1150   	; 0x17a0 <skip_spaces>
    1c1e:	97 fd       	sbrc	r25, 7
    1c20:	3e c0       	rjmp	.+124    	; 0x1c9e <vfscanf+0x200>
    1c22:	1f 36       	cpi	r17, 0x6F	; 111
    1c24:	49 f1       	breq	.+82     	; 0x1c78 <vfscanf+0x1da>
    1c26:	28 f4       	brcc	.+10     	; 0x1c32 <vfscanf+0x194>
    1c28:	14 36       	cpi	r17, 0x64	; 100
    1c2a:	21 f1       	breq	.+72     	; 0x1c74 <vfscanf+0x1d6>
    1c2c:	19 36       	cpi	r17, 0x69	; 105
    1c2e:	39 f1       	breq	.+78     	; 0x1c7e <vfscanf+0x1e0>
    1c30:	25 c0       	rjmp	.+74     	; 0x1c7c <vfscanf+0x1de>
    1c32:	13 37       	cpi	r17, 0x73	; 115
    1c34:	71 f0       	breq	.+28     	; 0x1c52 <vfscanf+0x1b4>
    1c36:	15 37       	cpi	r17, 0x75	; 117
    1c38:	e9 f0       	breq	.+58     	; 0x1c74 <vfscanf+0x1d6>
    1c3a:	20 c0       	rjmp	.+64     	; 0x1c7c <vfscanf+0x1de>
    1c3c:	81 14       	cp	r8, r1
    1c3e:	91 04       	cpc	r9, r1
    1c40:	29 f0       	breq	.+10     	; 0x1c4c <vfscanf+0x1ae>
    1c42:	f4 01       	movw	r30, r8
    1c44:	60 82       	st	Z, r6
    1c46:	c4 01       	movw	r24, r8
    1c48:	01 96       	adiw	r24, 0x01	; 1
    1c4a:	4c 01       	movw	r8, r24
    1c4c:	fa 94       	dec	r15
    1c4e:	ff 20       	and	r15, r15
    1c50:	59 f0       	breq	.+22     	; 0x1c68 <vfscanf+0x1ca>
    1c52:	c6 01       	movw	r24, r12
    1c54:	64 d0       	rcall	.+200    	; 0x1d1e <fgetc>
    1c56:	3c 01       	movw	r6, r24
    1c58:	97 fd       	sbrc	r25, 7
    1c5a:	06 c0       	rjmp	.+12     	; 0x1c68 <vfscanf+0x1ca>
    1c5c:	37 d0       	rcall	.+110    	; 0x1ccc <isspace>
    1c5e:	89 2b       	or	r24, r25
    1c60:	69 f3       	breq	.-38     	; 0x1c3c <vfscanf+0x19e>
    1c62:	b6 01       	movw	r22, r12
    1c64:	c3 01       	movw	r24, r6
    1c66:	d5 d0       	rcall	.+426    	; 0x1e12 <ungetc>
    1c68:	81 14       	cp	r8, r1
    1c6a:	91 04       	cpc	r9, r1
    1c6c:	a1 f0       	breq	.+40     	; 0x1c96 <vfscanf+0x1f8>
    1c6e:	f4 01       	movw	r30, r8
    1c70:	10 82       	st	Z, r1
    1c72:	11 c0       	rjmp	.+34     	; 0x1c96 <vfscanf+0x1f8>
    1c74:	00 62       	ori	r16, 0x20	; 32
    1c76:	03 c0       	rjmp	.+6      	; 0x1c7e <vfscanf+0x1e0>
    1c78:	00 61       	ori	r16, 0x10	; 16
    1c7a:	01 c0       	rjmp	.+2      	; 0x1c7e <vfscanf+0x1e0>
    1c7c:	00 64       	ori	r16, 0x40	; 64
    1c7e:	20 2f       	mov	r18, r16
    1c80:	a4 01       	movw	r20, r8
    1c82:	6f 2d       	mov	r22, r15
    1c84:	c6 01       	movw	r24, r12
    1c86:	a2 dd       	rcall	.-1212   	; 0x17cc <conv_int>
    1c88:	81 11       	cpse	r24, r1
    1c8a:	05 c0       	rjmp	.+10     	; 0x1c96 <vfscanf+0x1f8>
    1c8c:	f6 01       	movw	r30, r12
    1c8e:	83 81       	ldd	r24, Z+3	; 0x03
    1c90:	80 73       	andi	r24, 0x30	; 48
    1c92:	29 f4       	brne	.+10     	; 0x1c9e <vfscanf+0x200>
    1c94:	06 c0       	rjmp	.+12     	; 0x1ca2 <vfscanf+0x204>
    1c96:	00 fd       	sbrc	r16, 0
    1c98:	18 cf       	rjmp	.-464    	; 0x1aca <vfscanf+0x2c>
    1c9a:	53 94       	inc	r5
    1c9c:	16 cf       	rjmp	.-468    	; 0x1aca <vfscanf+0x2c>
    1c9e:	55 20       	and	r5, r5
    1ca0:	19 f0       	breq	.+6      	; 0x1ca8 <vfscanf+0x20a>
    1ca2:	85 2d       	mov	r24, r5
    1ca4:	90 e0       	ldi	r25, 0x00	; 0
    1ca6:	02 c0       	rjmp	.+4      	; 0x1cac <vfscanf+0x20e>
    1ca8:	8f ef       	ldi	r24, 0xFF	; 255
    1caa:	9f ef       	ldi	r25, 0xFF	; 255
    1cac:	df 91       	pop	r29
    1cae:	cf 91       	pop	r28
    1cb0:	1f 91       	pop	r17
    1cb2:	0f 91       	pop	r16
    1cb4:	ff 90       	pop	r15
    1cb6:	ef 90       	pop	r14
    1cb8:	df 90       	pop	r13
    1cba:	cf 90       	pop	r12
    1cbc:	bf 90       	pop	r11
    1cbe:	af 90       	pop	r10
    1cc0:	9f 90       	pop	r9
    1cc2:	8f 90       	pop	r8
    1cc4:	7f 90       	pop	r7
    1cc6:	6f 90       	pop	r6
    1cc8:	5f 90       	pop	r5
    1cca:	08 95       	ret

00001ccc <isspace>:
    1ccc:	91 11       	cpse	r25, r1
    1cce:	18 c1       	rjmp	.+560    	; 0x1f00 <__ctype_isfalse>
    1cd0:	80 32       	cpi	r24, 0x20	; 32
    1cd2:	19 f0       	breq	.+6      	; 0x1cda <isspace+0xe>
    1cd4:	89 50       	subi	r24, 0x09	; 9
    1cd6:	85 50       	subi	r24, 0x05	; 5
    1cd8:	d0 f7       	brcc	.-12     	; 0x1cce <isspace+0x2>
    1cda:	08 95       	ret

00001cdc <strchr_P>:
    1cdc:	fc 01       	movw	r30, r24
    1cde:	05 90       	lpm	r0, Z+
    1ce0:	06 16       	cp	r0, r22
    1ce2:	21 f0       	breq	.+8      	; 0x1cec <strchr_P+0x10>
    1ce4:	00 20       	and	r0, r0
    1ce6:	d9 f7       	brne	.-10     	; 0x1cde <strchr_P+0x2>
    1ce8:	c0 01       	movw	r24, r0
    1cea:	08 95       	ret
    1cec:	31 97       	sbiw	r30, 0x01	; 1
    1cee:	cf 01       	movw	r24, r30
    1cf0:	08 95       	ret

00001cf2 <strnlen_P>:
    1cf2:	fc 01       	movw	r30, r24
    1cf4:	05 90       	lpm	r0, Z+
    1cf6:	61 50       	subi	r22, 0x01	; 1
    1cf8:	70 40       	sbci	r23, 0x00	; 0
    1cfa:	01 10       	cpse	r0, r1
    1cfc:	d8 f7       	brcc	.-10     	; 0x1cf4 <strnlen_P+0x2>
    1cfe:	80 95       	com	r24
    1d00:	90 95       	com	r25
    1d02:	8e 0f       	add	r24, r30
    1d04:	9f 1f       	adc	r25, r31
    1d06:	08 95       	ret

00001d08 <strnlen>:
    1d08:	fc 01       	movw	r30, r24
    1d0a:	61 50       	subi	r22, 0x01	; 1
    1d0c:	70 40       	sbci	r23, 0x00	; 0
    1d0e:	01 90       	ld	r0, Z+
    1d10:	01 10       	cpse	r0, r1
    1d12:	d8 f7       	brcc	.-10     	; 0x1d0a <strnlen+0x2>
    1d14:	80 95       	com	r24
    1d16:	90 95       	com	r25
    1d18:	8e 0f       	add	r24, r30
    1d1a:	9f 1f       	adc	r25, r31
    1d1c:	08 95       	ret

00001d1e <fgetc>:
    1d1e:	cf 93       	push	r28
    1d20:	df 93       	push	r29
    1d22:	ec 01       	movw	r28, r24
    1d24:	2b 81       	ldd	r18, Y+3	; 0x03
    1d26:	20 ff       	sbrs	r18, 0
    1d28:	33 c0       	rjmp	.+102    	; 0x1d90 <fgetc+0x72>
    1d2a:	26 ff       	sbrs	r18, 6
    1d2c:	0a c0       	rjmp	.+20     	; 0x1d42 <fgetc+0x24>
    1d2e:	2f 7b       	andi	r18, 0xBF	; 191
    1d30:	2b 83       	std	Y+3, r18	; 0x03
    1d32:	8e 81       	ldd	r24, Y+6	; 0x06
    1d34:	9f 81       	ldd	r25, Y+7	; 0x07
    1d36:	01 96       	adiw	r24, 0x01	; 1
    1d38:	9f 83       	std	Y+7, r25	; 0x07
    1d3a:	8e 83       	std	Y+6, r24	; 0x06
    1d3c:	8a 81       	ldd	r24, Y+2	; 0x02
    1d3e:	90 e0       	ldi	r25, 0x00	; 0
    1d40:	29 c0       	rjmp	.+82     	; 0x1d94 <fgetc+0x76>
    1d42:	22 ff       	sbrs	r18, 2
    1d44:	0f c0       	rjmp	.+30     	; 0x1d64 <fgetc+0x46>
    1d46:	e8 81       	ld	r30, Y
    1d48:	f9 81       	ldd	r31, Y+1	; 0x01
    1d4a:	80 81       	ld	r24, Z
    1d4c:	08 2e       	mov	r0, r24
    1d4e:	00 0c       	add	r0, r0
    1d50:	99 0b       	sbc	r25, r25
    1d52:	00 97       	sbiw	r24, 0x00	; 0
    1d54:	19 f4       	brne	.+6      	; 0x1d5c <fgetc+0x3e>
    1d56:	20 62       	ori	r18, 0x20	; 32
    1d58:	2b 83       	std	Y+3, r18	; 0x03
    1d5a:	1a c0       	rjmp	.+52     	; 0x1d90 <fgetc+0x72>
    1d5c:	31 96       	adiw	r30, 0x01	; 1
    1d5e:	f9 83       	std	Y+1, r31	; 0x01
    1d60:	e8 83       	st	Y, r30
    1d62:	0e c0       	rjmp	.+28     	; 0x1d80 <fgetc+0x62>
    1d64:	ea 85       	ldd	r30, Y+10	; 0x0a
    1d66:	fb 85       	ldd	r31, Y+11	; 0x0b
    1d68:	09 95       	icall
    1d6a:	97 ff       	sbrs	r25, 7
    1d6c:	09 c0       	rjmp	.+18     	; 0x1d80 <fgetc+0x62>
    1d6e:	2b 81       	ldd	r18, Y+3	; 0x03
    1d70:	01 96       	adiw	r24, 0x01	; 1
    1d72:	11 f0       	breq	.+4      	; 0x1d78 <fgetc+0x5a>
    1d74:	80 e2       	ldi	r24, 0x20	; 32
    1d76:	01 c0       	rjmp	.+2      	; 0x1d7a <fgetc+0x5c>
    1d78:	80 e1       	ldi	r24, 0x10	; 16
    1d7a:	82 2b       	or	r24, r18
    1d7c:	8b 83       	std	Y+3, r24	; 0x03
    1d7e:	08 c0       	rjmp	.+16     	; 0x1d90 <fgetc+0x72>
    1d80:	2e 81       	ldd	r18, Y+6	; 0x06
    1d82:	3f 81       	ldd	r19, Y+7	; 0x07
    1d84:	2f 5f       	subi	r18, 0xFF	; 255
    1d86:	3f 4f       	sbci	r19, 0xFF	; 255
    1d88:	3f 83       	std	Y+7, r19	; 0x07
    1d8a:	2e 83       	std	Y+6, r18	; 0x06
    1d8c:	99 27       	eor	r25, r25
    1d8e:	02 c0       	rjmp	.+4      	; 0x1d94 <fgetc+0x76>
    1d90:	8f ef       	ldi	r24, 0xFF	; 255
    1d92:	9f ef       	ldi	r25, 0xFF	; 255
    1d94:	df 91       	pop	r29
    1d96:	cf 91       	pop	r28
    1d98:	08 95       	ret

00001d9a <fputc>:
    1d9a:	0f 93       	push	r16
    1d9c:	1f 93       	push	r17
    1d9e:	cf 93       	push	r28
    1da0:	df 93       	push	r29
    1da2:	fb 01       	movw	r30, r22
    1da4:	23 81       	ldd	r18, Z+3	; 0x03
    1da6:	21 fd       	sbrc	r18, 1
    1da8:	03 c0       	rjmp	.+6      	; 0x1db0 <fputc+0x16>
    1daa:	8f ef       	ldi	r24, 0xFF	; 255
    1dac:	9f ef       	ldi	r25, 0xFF	; 255
    1dae:	2c c0       	rjmp	.+88     	; 0x1e08 <fputc+0x6e>
    1db0:	22 ff       	sbrs	r18, 2
    1db2:	16 c0       	rjmp	.+44     	; 0x1de0 <fputc+0x46>
    1db4:	46 81       	ldd	r20, Z+6	; 0x06
    1db6:	57 81       	ldd	r21, Z+7	; 0x07
    1db8:	24 81       	ldd	r18, Z+4	; 0x04
    1dba:	35 81       	ldd	r19, Z+5	; 0x05
    1dbc:	42 17       	cp	r20, r18
    1dbe:	53 07       	cpc	r21, r19
    1dc0:	44 f4       	brge	.+16     	; 0x1dd2 <fputc+0x38>
    1dc2:	a0 81       	ld	r26, Z
    1dc4:	b1 81       	ldd	r27, Z+1	; 0x01
    1dc6:	9d 01       	movw	r18, r26
    1dc8:	2f 5f       	subi	r18, 0xFF	; 255
    1dca:	3f 4f       	sbci	r19, 0xFF	; 255
    1dcc:	31 83       	std	Z+1, r19	; 0x01
    1dce:	20 83       	st	Z, r18
    1dd0:	8c 93       	st	X, r24
    1dd2:	26 81       	ldd	r18, Z+6	; 0x06
    1dd4:	37 81       	ldd	r19, Z+7	; 0x07
    1dd6:	2f 5f       	subi	r18, 0xFF	; 255
    1dd8:	3f 4f       	sbci	r19, 0xFF	; 255
    1dda:	37 83       	std	Z+7, r19	; 0x07
    1ddc:	26 83       	std	Z+6, r18	; 0x06
    1dde:	14 c0       	rjmp	.+40     	; 0x1e08 <fputc+0x6e>
    1de0:	8b 01       	movw	r16, r22
    1de2:	ec 01       	movw	r28, r24
    1de4:	fb 01       	movw	r30, r22
    1de6:	00 84       	ldd	r0, Z+8	; 0x08
    1de8:	f1 85       	ldd	r31, Z+9	; 0x09
    1dea:	e0 2d       	mov	r30, r0
    1dec:	09 95       	icall
    1dee:	89 2b       	or	r24, r25
    1df0:	e1 f6       	brne	.-72     	; 0x1daa <fputc+0x10>
    1df2:	d8 01       	movw	r26, r16
    1df4:	16 96       	adiw	r26, 0x06	; 6
    1df6:	8d 91       	ld	r24, X+
    1df8:	9c 91       	ld	r25, X
    1dfa:	17 97       	sbiw	r26, 0x07	; 7
    1dfc:	01 96       	adiw	r24, 0x01	; 1
    1dfe:	17 96       	adiw	r26, 0x07	; 7
    1e00:	9c 93       	st	X, r25
    1e02:	8e 93       	st	-X, r24
    1e04:	16 97       	sbiw	r26, 0x06	; 6
    1e06:	ce 01       	movw	r24, r28
    1e08:	df 91       	pop	r29
    1e0a:	cf 91       	pop	r28
    1e0c:	1f 91       	pop	r17
    1e0e:	0f 91       	pop	r16
    1e10:	08 95       	ret

00001e12 <ungetc>:
    1e12:	fb 01       	movw	r30, r22
    1e14:	23 81       	ldd	r18, Z+3	; 0x03
    1e16:	20 ff       	sbrs	r18, 0
    1e18:	12 c0       	rjmp	.+36     	; 0x1e3e <ungetc+0x2c>
    1e1a:	26 fd       	sbrc	r18, 6
    1e1c:	10 c0       	rjmp	.+32     	; 0x1e3e <ungetc+0x2c>
    1e1e:	8f 3f       	cpi	r24, 0xFF	; 255
    1e20:	3f ef       	ldi	r19, 0xFF	; 255
    1e22:	93 07       	cpc	r25, r19
    1e24:	61 f0       	breq	.+24     	; 0x1e3e <ungetc+0x2c>
    1e26:	82 83       	std	Z+2, r24	; 0x02
    1e28:	2f 7d       	andi	r18, 0xDF	; 223
    1e2a:	20 64       	ori	r18, 0x40	; 64
    1e2c:	23 83       	std	Z+3, r18	; 0x03
    1e2e:	26 81       	ldd	r18, Z+6	; 0x06
    1e30:	37 81       	ldd	r19, Z+7	; 0x07
    1e32:	21 50       	subi	r18, 0x01	; 1
    1e34:	31 09       	sbc	r19, r1
    1e36:	37 83       	std	Z+7, r19	; 0x07
    1e38:	26 83       	std	Z+6, r18	; 0x06
    1e3a:	99 27       	eor	r25, r25
    1e3c:	08 95       	ret
    1e3e:	8f ef       	ldi	r24, 0xFF	; 255
    1e40:	9f ef       	ldi	r25, 0xFF	; 255
    1e42:	08 95       	ret

00001e44 <__ultoa_invert>:
    1e44:	fa 01       	movw	r30, r20
    1e46:	aa 27       	eor	r26, r26
    1e48:	28 30       	cpi	r18, 0x08	; 8
    1e4a:	51 f1       	breq	.+84     	; 0x1ea0 <__ultoa_invert+0x5c>
    1e4c:	20 31       	cpi	r18, 0x10	; 16
    1e4e:	81 f1       	breq	.+96     	; 0x1eb0 <__ultoa_invert+0x6c>
    1e50:	e8 94       	clt
    1e52:	6f 93       	push	r22
    1e54:	6e 7f       	andi	r22, 0xFE	; 254
    1e56:	6e 5f       	subi	r22, 0xFE	; 254
    1e58:	7f 4f       	sbci	r23, 0xFF	; 255
    1e5a:	8f 4f       	sbci	r24, 0xFF	; 255
    1e5c:	9f 4f       	sbci	r25, 0xFF	; 255
    1e5e:	af 4f       	sbci	r26, 0xFF	; 255
    1e60:	b1 e0       	ldi	r27, 0x01	; 1
    1e62:	3e d0       	rcall	.+124    	; 0x1ee0 <__ultoa_invert+0x9c>
    1e64:	b4 e0       	ldi	r27, 0x04	; 4
    1e66:	3c d0       	rcall	.+120    	; 0x1ee0 <__ultoa_invert+0x9c>
    1e68:	67 0f       	add	r22, r23
    1e6a:	78 1f       	adc	r23, r24
    1e6c:	89 1f       	adc	r24, r25
    1e6e:	9a 1f       	adc	r25, r26
    1e70:	a1 1d       	adc	r26, r1
    1e72:	68 0f       	add	r22, r24
    1e74:	79 1f       	adc	r23, r25
    1e76:	8a 1f       	adc	r24, r26
    1e78:	91 1d       	adc	r25, r1
    1e7a:	a1 1d       	adc	r26, r1
    1e7c:	6a 0f       	add	r22, r26
    1e7e:	71 1d       	adc	r23, r1
    1e80:	81 1d       	adc	r24, r1
    1e82:	91 1d       	adc	r25, r1
    1e84:	a1 1d       	adc	r26, r1
    1e86:	20 d0       	rcall	.+64     	; 0x1ec8 <__ultoa_invert+0x84>
    1e88:	09 f4       	brne	.+2      	; 0x1e8c <__ultoa_invert+0x48>
    1e8a:	68 94       	set
    1e8c:	3f 91       	pop	r19
    1e8e:	2a e0       	ldi	r18, 0x0A	; 10
    1e90:	26 9f       	mul	r18, r22
    1e92:	11 24       	eor	r1, r1
    1e94:	30 19       	sub	r19, r0
    1e96:	30 5d       	subi	r19, 0xD0	; 208
    1e98:	31 93       	st	Z+, r19
    1e9a:	de f6       	brtc	.-74     	; 0x1e52 <__ultoa_invert+0xe>
    1e9c:	cf 01       	movw	r24, r30
    1e9e:	08 95       	ret
    1ea0:	46 2f       	mov	r20, r22
    1ea2:	47 70       	andi	r20, 0x07	; 7
    1ea4:	40 5d       	subi	r20, 0xD0	; 208
    1ea6:	41 93       	st	Z+, r20
    1ea8:	b3 e0       	ldi	r27, 0x03	; 3
    1eaa:	0f d0       	rcall	.+30     	; 0x1eca <__ultoa_invert+0x86>
    1eac:	c9 f7       	brne	.-14     	; 0x1ea0 <__ultoa_invert+0x5c>
    1eae:	f6 cf       	rjmp	.-20     	; 0x1e9c <__ultoa_invert+0x58>
    1eb0:	46 2f       	mov	r20, r22
    1eb2:	4f 70       	andi	r20, 0x0F	; 15
    1eb4:	40 5d       	subi	r20, 0xD0	; 208
    1eb6:	4a 33       	cpi	r20, 0x3A	; 58
    1eb8:	18 f0       	brcs	.+6      	; 0x1ec0 <__ultoa_invert+0x7c>
    1eba:	49 5d       	subi	r20, 0xD9	; 217
    1ebc:	31 fd       	sbrc	r19, 1
    1ebe:	40 52       	subi	r20, 0x20	; 32
    1ec0:	41 93       	st	Z+, r20
    1ec2:	02 d0       	rcall	.+4      	; 0x1ec8 <__ultoa_invert+0x84>
    1ec4:	a9 f7       	brne	.-22     	; 0x1eb0 <__ultoa_invert+0x6c>
    1ec6:	ea cf       	rjmp	.-44     	; 0x1e9c <__ultoa_invert+0x58>
    1ec8:	b4 e0       	ldi	r27, 0x04	; 4
    1eca:	a6 95       	lsr	r26
    1ecc:	97 95       	ror	r25
    1ece:	87 95       	ror	r24
    1ed0:	77 95       	ror	r23
    1ed2:	67 95       	ror	r22
    1ed4:	ba 95       	dec	r27
    1ed6:	c9 f7       	brne	.-14     	; 0x1eca <__ultoa_invert+0x86>
    1ed8:	00 97       	sbiw	r24, 0x00	; 0
    1eda:	61 05       	cpc	r22, r1
    1edc:	71 05       	cpc	r23, r1
    1ede:	08 95       	ret
    1ee0:	9b 01       	movw	r18, r22
    1ee2:	ac 01       	movw	r20, r24
    1ee4:	0a 2e       	mov	r0, r26
    1ee6:	06 94       	lsr	r0
    1ee8:	57 95       	ror	r21
    1eea:	47 95       	ror	r20
    1eec:	37 95       	ror	r19
    1eee:	27 95       	ror	r18
    1ef0:	ba 95       	dec	r27
    1ef2:	c9 f7       	brne	.-14     	; 0x1ee6 <__ultoa_invert+0xa2>
    1ef4:	62 0f       	add	r22, r18
    1ef6:	73 1f       	adc	r23, r19
    1ef8:	84 1f       	adc	r24, r20
    1efa:	95 1f       	adc	r25, r21
    1efc:	a0 1d       	adc	r26, r0
    1efe:	08 95       	ret

00001f00 <__ctype_isfalse>:
    1f00:	99 27       	eor	r25, r25
    1f02:	88 27       	eor	r24, r24

00001f04 <__ctype_istrue>:
    1f04:	08 95       	ret

00001f06 <eeprom_read_block>:
    1f06:	dc 01       	movw	r26, r24
    1f08:	cb 01       	movw	r24, r22

00001f0a <eeprom_read_blraw>:
    1f0a:	fc 01       	movw	r30, r24
    1f0c:	f9 99       	sbic	0x1f, 1	; 31
    1f0e:	fe cf       	rjmp	.-4      	; 0x1f0c <eeprom_read_blraw+0x2>
    1f10:	06 c0       	rjmp	.+12     	; 0x1f1e <eeprom_read_blraw+0x14>
    1f12:	f2 bd       	out	0x22, r31	; 34
    1f14:	e1 bd       	out	0x21, r30	; 33
    1f16:	f8 9a       	sbi	0x1f, 0	; 31
    1f18:	31 96       	adiw	r30, 0x01	; 1
    1f1a:	00 b4       	in	r0, 0x20	; 32
    1f1c:	0d 92       	st	X+, r0
    1f1e:	41 50       	subi	r20, 0x01	; 1
    1f20:	50 40       	sbci	r21, 0x00	; 0
    1f22:	b8 f7       	brcc	.-18     	; 0x1f12 <eeprom_read_blraw+0x8>
    1f24:	08 95       	ret

00001f26 <eeprom_read_word>:
    1f26:	a8 e1       	ldi	r26, 0x18	; 24
    1f28:	b0 e0       	ldi	r27, 0x00	; 0
    1f2a:	42 e0       	ldi	r20, 0x02	; 2
    1f2c:	50 e0       	ldi	r21, 0x00	; 0
    1f2e:	ed cf       	rjmp	.-38     	; 0x1f0a <eeprom_read_blraw>

00001f30 <eeprom_write_block>:
    1f30:	dc 01       	movw	r26, r24
    1f32:	cb 01       	movw	r24, r22
    1f34:	02 c0       	rjmp	.+4      	; 0x1f3a <eeprom_write_block+0xa>
    1f36:	2d 91       	ld	r18, X+
    1f38:	05 d0       	rcall	.+10     	; 0x1f44 <eeprom_write_r18>
    1f3a:	41 50       	subi	r20, 0x01	; 1
    1f3c:	50 40       	sbci	r21, 0x00	; 0
    1f3e:	d8 f7       	brcc	.-10     	; 0x1f36 <eeprom_write_block+0x6>
    1f40:	08 95       	ret

00001f42 <eeprom_write_byte>:
    1f42:	26 2f       	mov	r18, r22

00001f44 <eeprom_write_r18>:
    1f44:	f9 99       	sbic	0x1f, 1	; 31
    1f46:	fe cf       	rjmp	.-4      	; 0x1f44 <eeprom_write_r18>
    1f48:	1f ba       	out	0x1f, r1	; 31
    1f4a:	92 bd       	out	0x22, r25	; 34
    1f4c:	81 bd       	out	0x21, r24	; 33
    1f4e:	20 bd       	out	0x20, r18	; 32
    1f50:	0f b6       	in	r0, 0x3f	; 63
    1f52:	f8 94       	cli
    1f54:	fa 9a       	sbi	0x1f, 2	; 31
    1f56:	f9 9a       	sbi	0x1f, 1	; 31
    1f58:	0f be       	out	0x3f, r0	; 63
    1f5a:	01 96       	adiw	r24, 0x01	; 1
    1f5c:	08 95       	ret

00001f5e <eeprom_write_word>:
    1f5e:	f1 df       	rcall	.-30     	; 0x1f42 <eeprom_write_byte>
    1f60:	27 2f       	mov	r18, r23
    1f62:	f0 cf       	rjmp	.-32     	; 0x1f44 <eeprom_write_r18>

00001f64 <_exit>:
    1f64:	f8 94       	cli

00001f66 <__stop_program>:
    1f66:	ff cf       	rjmp	.-2      	; 0x1f66 <__stop_program>
